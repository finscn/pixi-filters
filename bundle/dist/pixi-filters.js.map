{"version":3,"file":"pixi-filters.js","sources":["../../filters/adjustment/lib/filter-adjustment.esm.js","../../filters/kawase-blur/lib/filter-kawase-blur.esm.js","../../filters/advanced-bloom/lib/filter-advanced-bloom.esm.js","../../filters/ascii/lib/filter-ascii.esm.js","../../filters/bevel/lib/filter-bevel.esm.js","../../filters/bloom/lib/filter-bloom.esm.js","../../filters/bulge-pinch/lib/filter-bulge-pinch.esm.js","../../filters/color-map/lib/filter-color-map.esm.js","../../filters/color-replace/lib/filter-color-replace.esm.js","../../filters/convolution/lib/filter-convolution.esm.js","../../filters/cross-hatch/lib/filter-cross-hatch.esm.js","../../filters/crt/lib/filter-crt.esm.js","../../filters/dot/lib/filter-dot.esm.js","../../filters/drop-shadow/lib/filter-drop-shadow.esm.js","../../filters/emboss/lib/filter-emboss.esm.js","../../filters/glitch/lib/filter-glitch.esm.js","../../filters/glow/lib/filter-glow.esm.js","../../filters/godray/lib/filter-godray.esm.js","../../filters/motion-blur/lib/filter-motion-blur.esm.js","../../filters/multi-color-replace/lib/filter-multi-color-replace.esm.js","../../filters/old-film/lib/filter-old-film.esm.js","../../filters/outline/lib/filter-outline.esm.js","../../filters/pixelate/lib/filter-pixelate.esm.js","../../filters/radial-blur/lib/filter-radial-blur.esm.js","../../filters/reflection/lib/filter-reflection.esm.js","../../filters/rgb-split/lib/filter-rgb-split.esm.js","../../filters/shockwave/lib/filter-shockwave.esm.js","../../filters/simple-lightmap/lib/filter-simple-lightmap.esm.js","../../filters/tilt-shift/lib/filter-tilt-shift.esm.js","../../filters/twist/lib/filter-twist.esm.js","../../filters/zoom-blur/lib/filter-zoom-blur.esm.js"],"sourcesContent":["/*!\n * @pixi/filter-adjustment - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-adjustment is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float gamma;\\nuniform float contrast;\\nuniform float saturation;\\nuniform float brightness;\\nuniform float red;\\nuniform float green;\\nuniform float blue;\\nuniform float alpha;\\n\\nvoid main(void)\\n{\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    if (c.a > 0.0) {\\n        c.rgb /= c.a;\\n\\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\\n        rgb.r *= red;\\n        rgb.g *= green;\\n        rgb.b *= blue;\\n        c.rgb = rgb * brightness;\\n\\n        c.rgb *= c.a;\\n    }\\n\\n    gl_FragColor = c * alpha;\\n}\\n\";\n\n/**\n * The ability to adjust gamma, contrast, saturation, brightness, alpha or color-channel shift. This is a faster\n * and much simpler to use than {@link http://pixijs.download/release/docs/PIXI.filters.ColorMatrixFilter.html ColorMatrixFilter}\n * because it does not use a matrix.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/adjustment.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {object|number} [options] - The optional parameters of the filter.\n * @param {number} [options.gamma=1] - The amount of luminance\n * @param {number} [options.saturation=1] - The amount of color saturation\n * @param {number} [options.contrast=1] - The amount of contrast\n * @param {number} [options.brightness=1] - The overall brightness\n * @param {number} [options.red=1] - The multipled red channel\n * @param {number} [options.green=1] - The multipled green channel\n * @param {number} [options.blue=1] - The multipled blue channel\n * @param {number} [options.alpha=1] - The overall alpha amount\n */\nvar AdjustmentFilter = /*@__PURE__*/(function (superclass) {\n    function AdjustmentFilter(options) {\n        superclass.call(this, vertex, fragment);\n\n        Object.assign(this, {\n            /**\n             * The amount of luminance\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            gamma: 1,\n\n            /**\n             * The amount of saturation\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            saturation: 1,\n\n            /**\n             * The amount of contrast\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            contrast: 1,\n\n            /**\n             * The amount of brightness\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            brightness: 1,\n\n            /**\n             * The amount of red channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            red: 1,\n\n            /**\n             * The amount of green channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            green: 1,\n\n            /**\n             * The amount of blue channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            blue: 1,\n\n            /**\n             * The amount of alpha channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            alpha: 1,\n        }, options);\n    }\n\n    if ( superclass ) AdjustmentFilter.__proto__ = superclass;\n    AdjustmentFilter.prototype = Object.create( superclass && superclass.prototype );\n    AdjustmentFilter.prototype.constructor = AdjustmentFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AdjustmentFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.gamma = Math.max(this.gamma, 0.0001);\n        this.uniforms.saturation = this.saturation;\n        this.uniforms.contrast = this.contrast;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.red = this.red;\n        this.uniforms.green = this.green;\n        this.uniforms.blue = this.blue;\n        this.uniforms.alpha = this.alpha;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AdjustmentFilter;\n}(Filter));\n\nexport { AdjustmentFilter };\n//# sourceMappingURL=filter-adjustment.esm.js.map\n","/*!\n * @pixi/filter-kawase-blur - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-kawase-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Point, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\nvar fragmentClamp = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * A much faster blur than Gaussian blur, but more complicated to use.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/kawase-blur.png)\n *\n * @see https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|number[]} [blur=4] - The blur of the filter. Should be greater than `0`. If\n *        value is an Array, setting kernels.\n * @param {number} [quality=3] - The quality of the filter. Should be an integer greater than `1`.\n * @param {boolean} [clamp=false] - Clamp edges, useful for removing dark edges\n *        from fullscreen filters or bleeding to the edge of filterArea.\n */\nvar KawaseBlurFilter = /*@__PURE__*/(function (superclass) {\n    function KawaseBlurFilter(blur, quality, clamp) {\n        if ( blur === void 0 ) blur = 4;\n        if ( quality === void 0 ) quality = 3;\n        if ( clamp === void 0 ) clamp = false;\n\n        superclass.call(this, vertex, clamp ? fragmentClamp : fragment);\n        this.uniforms.uOffset = new Float32Array(2);\n\n        this._pixelSize = new Point();\n        this.pixelSize = 1;\n        this._clamp = clamp;\n        this._kernels = null;\n\n        // if `blur` is array , as kernels\n        if (Array.isArray(blur)) {\n            this.kernels = blur;\n        }\n        else {\n            this._blur = blur;\n            this.quality = quality;\n        }\n    }\n\n    if ( superclass ) KawaseBlurFilter.__proto__ = superclass;\n    KawaseBlurFilter.prototype = Object.create( superclass && superclass.prototype );\n    KawaseBlurFilter.prototype.constructor = KawaseBlurFilter;\n\n    var prototypeAccessors = { kernels: { configurable: true },clamp: { configurable: true },pixelSize: { configurable: true },quality: { configurable: true },blur: { configurable: true } };\n\n    /**\n     * Overrides apply\n     * @private\n     */\n    KawaseBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var uvX = this.pixelSize.x / input.size.width;\n        var uvY = this.pixelSize.y / input.size.height;\n        var offset;\n\n        if (this._quality === 1 || this._blur === 0) {\n            offset = this._kernels[0] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else {\n            var renderTarget = filterManager.getRenderTarget(true);\n\n            var source = input;\n            var target = renderTarget;\n            var tmp;\n\n            var last = this._quality - 1;\n\n            for (var i = 0; i < last; i++) {\n                offset = this._kernels[i] + 0.5;\n                this.uniforms.uOffset[0] = offset * uvX;\n                this.uniforms.uOffset[1] = offset * uvY;\n                filterManager.applyFilter(this, source, target, true);\n\n                tmp = source;\n                source = target;\n                target = tmp;\n            }\n            offset = this._kernels[last] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, source, output, clear);\n\n            filterManager.returnRenderTarget(renderTarget);\n        }\n    };\n\n    /**\n     * Auto generate kernels by blur & quality\n     * @private\n     */\n    KawaseBlurFilter.prototype._generateKernels = function _generateKernels () {\n        var blur = this._blur;\n        var quality = this._quality;\n        var kernels = [ blur ];\n\n        if (blur > 0) {\n            var k = blur;\n            var step = blur / quality;\n\n            for (var i = 1; i < quality; i++) {\n                k -= step;\n                kernels.push(k);\n            }\n        }\n\n        this._kernels = kernels;\n    };\n\n    /**\n     * The kernel size of the blur filter, for advanced usage.\n     *\n     * @member {number[]}\n     * @default [0]\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        if (Array.isArray(value) && value.length > 0) {\n            this._kernels = value;\n            this._quality = value.length;\n            this._blur = Math.max.apply(Math, value);\n        }\n        else {\n            // if value is invalid , set default value\n            this._kernels = [0];\n            this._quality = 1;\n        }\n    };\n\n    /**\n     * Get the if the filter is clampped.\n     *\n     * @readonly\n     * @member {boolean}\n     * @default false\n     */\n    prototypeAccessors.clamp.get = function () {\n        return this._clamp;\n    };\n\n    /**\n     * Sets the pixel size of the filter. Large size is blurrier. For advanced usage.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [1, 1]\n     */\n    prototypeAccessors.pixelSize.set = function (value) {\n        if (typeof value === 'number') {\n            this._pixelSize.x = value;\n            this._pixelSize.y = value;\n        }\n        else if (Array.isArray(value)) {\n            this._pixelSize.x = value[0];\n            this._pixelSize.y = value[1];\n        }\n        else if (value instanceof Point) {\n            this._pixelSize.x = value.x;\n            this._pixelSize.y = value.y;\n        }\n        else {\n            // if value is invalid , set default value\n            this._pixelSize.x = 1;\n            this._pixelSize.y = 1;\n        }\n    };\n    prototypeAccessors.pixelSize.get = function () {\n        return this._pixelSize;\n    };\n\n    /**\n     * The quality of the filter, integer greater than `1`.\n     *\n     * @member {number}\n     * @default 3\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._quality = Math.max(1, Math.round(value));\n        this._generateKernels();\n    };\n\n    /**\n     * The amount of blur, value greater than `0`.\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blur = value;\n        this._generateKernels();\n    };\n\n    Object.defineProperties( KawaseBlurFilter.prototype, prototypeAccessors );\n\n    return KawaseBlurFilter;\n}(Filter));\n\nexport { KawaseBlurFilter };\n//# sourceMappingURL=filter-kawase-blur.esm.js.map\n","/*!\n * @pixi/filter-advanced-bloom - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-advanced-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter, settings } from 'pixi.js';\nimport { KawaseBlurFilter } from '@pixi/filter-kawase-blur';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform float threshold;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    // A simple & fast algorithm for getting brightness.\\n    // It's inaccuracy , but good enought for this feature.\\n    float _max = max(max(color.r, color.g), color.b);\\n    float _min = min(min(color.r, color.g), color.b);\\n    float brightness = (_max + _min) * 0.5;\\n\\n    if(brightness > threshold) {\\n        gl_FragColor = color;\\n    } else {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n}\\n\";\n\n/**\n * Internal filter for AdvancedBloomFilter to get brightness.\n * @class\n * @private\n * @param {number} [threshold=0.5] Defines how bright a color needs to be extracted.\n */\nvar ExtractBrightnessFilter = /*@__PURE__*/(function (superclass) {\n    function ExtractBrightnessFilter(threshold) {\n        if ( threshold === void 0 ) threshold = 0.5;\n\n        superclass.call(this, vertex, fragment);\n\n        this.threshold = threshold;\n    }\n\n    if ( superclass ) ExtractBrightnessFilter.__proto__ = superclass;\n    ExtractBrightnessFilter.prototype = Object.create( superclass && superclass.prototype );\n    ExtractBrightnessFilter.prototype.constructor = ExtractBrightnessFilter;\n\n    var prototypeAccessors = { threshold: { configurable: true } };\n\n    /**\n     * Defines how bright a color needs to be extracted.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.threshold.get = function () {\n        return this.uniforms.threshold;\n    };\n    prototypeAccessors.threshold.set = function (value) {\n        this.uniforms.threshold = value;\n    };\n\n    Object.defineProperties( ExtractBrightnessFilter.prototype, prototypeAccessors );\n\n    return ExtractBrightnessFilter;\n}(Filter));\n\nvar fragment$1 = \"uniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D bloomTexture;\\nuniform float bloomScale;\\nuniform float brightness;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    color.rgb *= brightness;\\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\\n    bloomColor.rgb *= bloomScale;\\n    gl_FragColor = color + bloomColor;\\n}\\n\";\n\n/**\n * The AdvancedBloomFilter applies a Bloom Effect to an object. Unlike the normal BloomFilter\n * this had some advanced controls for adjusting the look of the bloom. Note: this filter\n * is slower than normal BloomFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/advanced-bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {object|number} [options] - The optional parameters of advanced bloom filter.\n *                        When options is a number , it will be `options.threshold`.\n * @param {number} [options.threshold=0.5] - Defines how bright a color needs to be to affect bloom.\n * @param {number} [options.bloomScale=1.0] - To adjust the strength of the bloom. Higher values is more intense brightness.\n * @param {number} [options.brightness=1.0] - The brightness, lower value is more subtle brightness, higher value is blown-out.\n * @param {number} [options.blur=8] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=4] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution of the Blur filter.\n */\nvar AdvancedBloomFilter = /*@__PURE__*/(function (superclass) {\n    function AdvancedBloomFilter(options) {\n\n        superclass.call(this, vertex, fragment$1);\n\n        if (typeof options === 'number') {\n            options = { threshold: options };\n        }\n\n        options = Object.assign({\n            threshold: 0.5,\n            bloomScale: 1.0,\n            brightness: 1.0,\n            kernels: null,\n            blur: 8,\n            quality: 4,\n            pixelSize: 1,\n            resolution: settings.RESOLUTION,\n        }, options);\n\n        /**\n         * To adjust the strength of the bloom. Higher values is more intense brightness.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.bloomScale = options.bloomScale;\n\n        /**\n         * The brightness, lower value is more subtle brightness, higher value is blown-out.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.brightness = options.brightness;\n\n        var kernels = options.kernels;\n        var blur = options.blur;\n        var quality = options.quality;\n        var pixelSize = options.pixelSize;\n        var resolution = options.resolution;\n\n        this._extractFilter = new ExtractBrightnessFilter(options.threshold);\n        this._extractFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new KawaseBlurFilter(kernels) :\n            new KawaseBlurFilter(blur, quality);\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n    }\n\n    if ( superclass ) AdvancedBloomFilter.__proto__ = superclass;\n    AdvancedBloomFilter.prototype = Object.create( superclass && superclass.prototype );\n    AdvancedBloomFilter.prototype.constructor = AdvancedBloomFilter;\n\n    var prototypeAccessors = { resolution: { configurable: true },threshold: { configurable: true },kernels: { configurable: true },blur: { configurable: true },quality: { configurable: true },pixelSize: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AdvancedBloomFilter.prototype.apply = function apply (filterManager, input, output, clear, currentState) {\n\n        var brightTarget = filterManager.getRenderTarget(true);\n\n        this._extractFilter.apply(filterManager, input, brightTarget, true, currentState);\n\n        var bloomTarget = filterManager.getRenderTarget(true);\n\n        this._blurFilter.apply(filterManager, brightTarget, bloomTarget, true, currentState);\n\n        this.uniforms.bloomScale = this.bloomScale;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.bloomTexture = bloomTarget;\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        filterManager.returnRenderTarget(bloomTarget);\n        filterManager.returnRenderTarget(brightTarget);\n    };\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.resolution.get = function () {\n        return this._resolution;\n    };\n    prototypeAccessors.resolution.set = function (value) {\n        this._resolution = value;\n\n        if (this._extractFilter) {\n            this._extractFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    };\n\n    /**\n     * Defines how bright a color needs to be to affect bloom.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.threshold.get = function () {\n        return this._extractFilter.threshold;\n    };\n    prototypeAccessors.threshold.set = function (value) {\n        this._extractFilter.threshold = value;\n    };\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._blurFilter.kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        this._blurFilter.kernels = value;\n    };\n\n    /**\n     * Sets the strength of the Blur properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blurFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blurFilter.blur = value;\n    };\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._blurFilter.quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._blurFilter.quality = value;\n    };\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    prototypeAccessors.pixelSize.get = function () {\n        return this._blurFilter.pixelSize;\n    };\n    prototypeAccessors.pixelSize.set = function (value) {\n        this._blurFilter.pixelSize = value;\n    };\n\n    Object.defineProperties( AdvancedBloomFilter.prototype, prototypeAccessors );\n\n    return AdvancedBloomFilter;\n}(Filter));\n\nexport { AdvancedBloomFilter };\n//# sourceMappingURL=filter-advanced-bloom.esm.js.map\n","/*!\n * @pixi/filter-ascii - v2.7.1\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-ascii is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform float pixelSize;\\nuniform sampler2D uSampler;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n    return floor( coord / size ) * size;\\n}\\n\\nvec2 getMod(vec2 coord, vec2 size)\\n{\\n    return mod( coord , size) / size;\\n}\\n\\nfloat character(float n, vec2 p)\\n{\\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\\n\\n    if (clamp(p.x, 0.0, 4.0) == p.x)\\n    {\\n        if (clamp(p.y, 0.0, 4.0) == p.y)\\n        {\\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\\n        }\\n    }\\n    return 0.0;\\n}\\n\\nvoid main()\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    // get the rounded color..\\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\\n    pixCoord = unmapCoord(pixCoord);\\n\\n    vec4 color = texture2D(uSampler, pixCoord);\\n\\n    // determine the character to use\\n    float gray = (color.r + color.g + color.b) / 3.0;\\n\\n    float n =  65536.0;             // .\\n    if (gray > 0.2) n = 65600.0;    // :\\n    if (gray > 0.3) n = 332772.0;   // *\\n    if (gray > 0.4) n = 15255086.0; // o\\n    if (gray > 0.5) n = 23385164.0; // &\\n    if (gray > 0.6) n = 15252014.0; // 8\\n    if (gray > 0.7) n = 13199452.0; // @\\n    if (gray > 0.8) n = 11512810.0; // #\\n\\n    // get the mod..\\n    vec2 modd = getMod(coord, vec2(pixelSize));\\n\\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\\n\\n}\";\n\n// TODO (cengler) - The Y is flipped in this shader for some reason.\n\n/**\n * @author Vico @vicocotea\n * original shader : https://www.shadertoy.com/view/lssGDj by @movAX13h\n */\n\n/**\n * An ASCII filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/ascii.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [size=8] Size of the font\n */\nvar AsciiFilter = /*@__PURE__*/(function (superclass) {\n    function AsciiFilter(size) {\n        if ( size === void 0 ) size = 8;\n\n        superclass.call(this, vertex, fragment);\n        this.size = size;\n    }\n\n    if ( superclass ) AsciiFilter.__proto__ = superclass;\n    AsciiFilter.prototype = Object.create( superclass && superclass.prototype );\n    AsciiFilter.prototype.constructor = AsciiFilter;\n\n    var prototypeAccessors = { size: { configurable: true } };\n\n    /**\n     * The pixel size used by the filter.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.size.get = function () {\n        return this.uniforms.pixelSize;\n    };\n    prototypeAccessors.size.set = function (value) {\n        this.uniforms.pixelSize = value;\n    };\n\n    Object.defineProperties( AsciiFilter.prototype, prototypeAccessors );\n\n    return AsciiFilter;\n}(Filter));\n\nexport { AsciiFilter };\n//# sourceMappingURL=filter-ascii.esm.js.map\n","/*!\n * @pixi/filter-bevel - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-bevel is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { DEG_TO_RAD, utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float transformX;\\nuniform float transformY;\\nuniform vec3 lightColor;\\nuniform float lightAlpha;\\nuniform vec3 shadowColor;\\nuniform float shadowAlpha;\\n\\nvoid main(void) {\\n    vec2 transform = vec2(1.0 / filterArea) * vec2(transformX, transformY);\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    float light = texture2D(uSampler, vTextureCoord - transform).a;\\n    float shadow = texture2D(uSampler, vTextureCoord + transform).a;\\n\\n    color.rgb = mix(color.rgb, lightColor, clamp((color.a - light) * lightAlpha, 0.0, 1.0));\\n    color.rgb = mix(color.rgb, shadowColor, clamp((color.a - shadow) * shadowAlpha, 0.0, 1.0));\\n    gl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\\n\";\n\n/**\n * Bevel Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bevel.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {object} [options] - The optional parameters of the filter.\n * @param {number} [options.rotation = 45] - The angle of the light in degrees.\n * @param {number} [options.thickness = 2] - The tickness of the bevel.\n * @param {number} [options.lightColor = 0xffffff] - Color of the light.\n * @param {number} [options.lightAlpha = 0.7] - Alpha of the light.\n * @param {number} [options.shadowColor = 0x000000] - Color of the shadow.\n * @param {number} [options.shadowAlpha = 0.7] - Alpha of the shadow.\n */\nvar BevelFilter = /*@__PURE__*/(function (superclass) {\n    function BevelFilter(options) {\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, vertex, fragment);\n\n        this.uniforms.lightColor = new Float32Array(3);\n        this.uniforms.shadowColor = new Float32Array(3);\n\n        options = Object.assign({\n            rotation: 45,\n            thickness: 2,\n            lightColor: 0xffffff,\n            lightAlpha: 0.7,\n            shadowColor: 0x000000,\n            shadowAlpha: 0.7,\n        }, options);\n\n        /**\n         * The angle of the light in degrees.\n         * @member {number}\n         * @default 45\n         */\n        this.rotation = options.rotation;\n\n        /**\n         * The tickness of the bevel.\n         * @member {number}\n         * @default 2\n         */\n        this.thickness = options.thickness;\n\n        /**\n         * Color of the light.\n         * @member {number}\n         * @default 0xffffff\n         */\n        this.lightColor = options.lightColor;\n\n        /**\n         * Alpha of the light.\n         * @member {number}\n         * @default 0.7\n         */\n        this.lightAlpha = options.lightAlpha;\n\n        /**\n         * Color of the shadow.\n         * @member {number}\n         * @default 0x000000\n         */\n        this.shadowColor = options.shadowColor;\n\n        /**\n         * Alpha of the shadow.\n         * @member {number}\n         * @default 0.7\n         */\n        this.shadowAlpha = options.shadowAlpha;\n\n    }\n\n    if ( superclass ) BevelFilter.__proto__ = superclass;\n    BevelFilter.prototype = Object.create( superclass && superclass.prototype );\n    BevelFilter.prototype.constructor = BevelFilter;\n\n    var prototypeAccessors = { rotation: { configurable: true },thickness: { configurable: true },lightColor: { configurable: true },lightAlpha: { configurable: true },shadowColor: { configurable: true },shadowAlpha: { configurable: true } };\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    BevelFilter.prototype._updateTransform = function _updateTransform () {\n        this.uniforms.transformX = this._thickness * Math.cos(this._angle);\n        this.uniforms.transformY = this._thickness * Math.sin(this._angle);\n    };\n\n    prototypeAccessors.rotation.get = function () {\n        return this._angle / DEG_TO_RAD;\n    };\n    prototypeAccessors.rotation.set = function (value) {\n        this._angle = value * DEG_TO_RAD;\n        this._updateTransform();\n    };\n\n    prototypeAccessors.thickness.get = function () {\n        return this._thickness;\n    };\n    prototypeAccessors.thickness.set = function (value) {\n        this._thickness = value;\n        this._updateTransform();\n    };\n\n    prototypeAccessors.lightColor.get = function () {\n        return utils.rgb2hex(this.uniforms.lightColor);\n    };\n    prototypeAccessors.lightColor.set = function (value) {\n        utils.hex2rgb(value, this.uniforms.lightColor);\n    };\n\n    prototypeAccessors.lightAlpha.get = function () {\n        return this.uniforms.lightAlpha;\n    };\n    prototypeAccessors.lightAlpha.set = function (value) {\n        this.uniforms.lightAlpha = value;\n    };\n\n    prototypeAccessors.shadowColor.get = function () {\n        return utils.rgb2hex(this.uniforms.shadowColor);\n    };\n    prototypeAccessors.shadowColor.set = function (value) {\n        utils.hex2rgb(value, this.uniforms.shadowColor);\n    };\n\n    prototypeAccessors.shadowAlpha.get = function () {\n        return this.uniforms.shadowAlpha;\n    };\n    prototypeAccessors.shadowAlpha.set = function (value) {\n        this.uniforms.shadowAlpha = value;\n    };\n\n    Object.defineProperties( BevelFilter.prototype, prototypeAccessors );\n\n    return BevelFilter;\n}(Filter));\n\nexport { BevelFilter };\n//# sourceMappingURL=filter-bevel.esm.js.map\n","/*!\n * @pixi/filter-bloom - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter, filters, settings, Point, BLEND_MODES } from 'pixi.js';\n\nvar ref = filters;\nvar BlurXFilter = ref.BlurXFilter;\nvar BlurYFilter = ref.BlurYFilter;\nvar AlphaFilter = ref.AlphaFilter;\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|PIXI.Point|number[]} [blur=2] Sets the strength of both the blurX and blurY properties simultaneously\n * @param {number} [quality=4] The quality of the blurX & blurY filter.\n * @param {number} [resolution=PIXI.settings.RESOLUTION] The resolution of the blurX & blurY filter.\n * @param {number} [kernelSize=5] The kernelSize of the blurX & blurY filter.Options: 5, 7, 9, 11, 13, 15.\n */\nvar BloomFilter = /*@__PURE__*/(function (superclass) {\n    function BloomFilter(blur, quality, resolution, kernelSize) {\n        if ( blur === void 0 ) blur = 2;\n        if ( quality === void 0 ) quality = 4;\n        if ( resolution === void 0 ) resolution = settings.RESOLUTION;\n        if ( kernelSize === void 0 ) kernelSize = 5;\n\n        superclass.call(this);\n\n        var blurX;\n        var blurY;\n\n        if (typeof blur === 'number') {\n            blurX = blur;\n            blurY = blur;\n        }\n        else if (blur instanceof Point) {\n            blurX = blur.x;\n            blurY = blur.y;\n        }\n        else if (Array.isArray(blur)) {\n            blurX = blur[0];\n            blurY = blur[1];\n        }\n\n        this.blurXFilter = new BlurXFilter(blurX, quality, resolution, kernelSize);\n        this.blurYFilter = new BlurYFilter(blurY, quality, resolution, kernelSize);\n        this.blurYFilter.blendMode = BLEND_MODES.SCREEN;\n        this.defaultFilter = new AlphaFilter();\n    }\n\n    if ( superclass ) BloomFilter.__proto__ = superclass;\n    BloomFilter.prototype = Object.create( superclass && superclass.prototype );\n    BloomFilter.prototype.constructor = BloomFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },blurX: { configurable: true },blurY: { configurable: true } };\n\n    BloomFilter.prototype.apply = function apply (filterManager, input, output) {\n        var renderTarget = filterManager.getRenderTarget(true);\n\n        //TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget);\n        this.blurYFilter.apply(filterManager, renderTarget, output);\n\n        filterManager.returnRenderTarget(renderTarget);\n    };\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.blurXFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    };\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blurX.get = function () {\n        return this.blurXFilter.blur;\n    };\n    prototypeAccessors.blurX.set = function (value) {\n        this.blurXFilter.blur = value;\n    };\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blurY.get = function () {\n        return this.blurYFilter.blur;\n    };\n    prototypeAccessors.blurY.set = function (value) {\n        this.blurYFilter.blur = value;\n    };\n\n    Object.defineProperties( BloomFilter.prototype, prototypeAccessors );\n\n    return BloomFilter;\n}(Filter));\n\nexport { BloomFilter };\n//# sourceMappingURL=filter-bloom.esm.js.map\n","/*!\n * @pixi/filter-bulge-pinch - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-bulge-pinch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"uniform float radius;\\nuniform float strength;\\nuniform vec2 center;\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nvoid main()\\n{\\n    vec2 coord = vTextureCoord * filterArea.xy;\\n    coord -= center * dimensions.xy;\\n    float distance = length(coord);\\n    if (distance < radius) {\\n        float percent = distance / radius;\\n        if (strength > 0.0) {\\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\\n        } else {\\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\\n        }\\n    }\\n    coord += center * dimensions.xy;\\n    coord /= filterArea.xy;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * @author Julien CLEREL @JuloxRox\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/warp/bulgepinch.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * Bulges or pinches the image in a circle.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bulge-pinch.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point|Array<number>} [center=[0,0]] The x and y coordinates of the center of the circle of effect.\n * @param {number} [radius=100] The radius of the circle of effect.\n * @param {number} [strength=1] -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n */\nvar BulgePinchFilter = /*@__PURE__*/(function (superclass) {\n    function BulgePinchFilter(center, radius, strength) {\n        superclass.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.center = center || [0.5, 0.5];\n        this.radius = (typeof radius === 'number') ? radius : 100; // allow 0 to be passed\n        this.strength = (typeof strength === 'number') ? strength : 1; // allow 0 to be passed\n    }\n\n    if ( superclass ) BulgePinchFilter.__proto__ = superclass;\n    BulgePinchFilter.prototype = Object.create( superclass && superclass.prototype );\n    BulgePinchFilter.prototype.constructor = BulgePinchFilter;\n\n    var prototypeAccessors = { radius: { configurable: true },strength: { configurable: true },center: { configurable: true } };\n\n    BulgePinchFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.sourceFrame.width;\n        this.uniforms.dimensions[1] = input.sourceFrame.height;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The radius of the circle of effect.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    /**\n     * The strength of the effect. -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n     *\n     * @member {number}\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.strength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.strength = value;\n    };\n\n    /**\n     * The x and y coordinates of the center of the circle of effect.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.center;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.center = value;\n    };\n\n    Object.defineProperties( BulgePinchFilter.prototype, prototypeAccessors );\n\n    return BulgePinchFilter;\n}(Filter));\n\nexport { BulgePinchFilter };\n//# sourceMappingURL=filter-bulge-pinch.esm.js.map\n","/*!\n * @pixi/filter-color-map - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-color-map is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Texture, SCALE_MODES, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D colorMap;\\nuniform float _mix;\\nuniform float _size;\\nuniform float _sliceSize;\\nuniform float _slicePixelSize;\\nuniform float _sliceInnerSize;\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord.xy);\\n\\n    vec4 adjusted;\\n    if (color.a > 0.0) {\\n        color.rgb /= color.a;\\n        float innerWidth = _size - 1.0;\\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\\n        float xOffset = _slicePixelSize * 0.5 + color.r * _sliceInnerSize;\\n        float s0 = xOffset + (zSlice0 * _sliceSize);\\n        float s1 = xOffset + (zSlice1 * _sliceSize);\\n        float yOffset = _sliceSize * 0.5 + color.g * (1.0 - _sliceSize);\\n        vec4 slice0Color = texture2D(colorMap, vec2(s0,yOffset));\\n        vec4 slice1Color = texture2D(colorMap, vec2(s1,yOffset));\\n        float zOffset = fract(color.b * innerWidth);\\n        adjusted = mix(slice0Color, slice1Color, zOffset);\\n\\n        color.rgb *= color.a;\\n    }\\n    gl_FragColor = vec4(mix(color, adjusted, _mix).rgb, color.a);\\n\\n}\";\n\n/**\n * The ColorMapFilter applies a color-map effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/color-map.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {HTMLImageElement|HTMLCanvasElement|PIXI.BaseTexture|PIXI.Texture} [colorMap] - The colorMap texture of the filter.\n * @param {boolean} [nearest=false] - Whether use NEAREST for colorMap texture.\n * @param {number} [mix=1] - The mix from 0 to 1, where 0 is the original image and 1 is the color mapped image.\n */\nvar ColorMapFilter = /*@__PURE__*/(function (superclass) {\n    function ColorMapFilter(colorMap, nearest, mix) {\n        if ( nearest === void 0 ) nearest = false;\n        if ( mix === void 0 ) mix = 1;\n\n        superclass.call(this, vertex, fragment);\n\n        this._size = 0;\n        this._sliceSize = 0;\n        this._slicePixelSize = 0;\n        this._sliceInnerSize = 0;\n\n        this._scaleMode = null;\n        this._nearest = false;\n        this.nearest = nearest;\n\n        /**\n         * The mix from 0 to 1, where 0 is the original image and 1 is the color mapped image.\n         * @member {number}\n         */\n        this.mix = mix;\n\n        this.colorMap = colorMap;\n    }\n\n    if ( superclass ) ColorMapFilter.__proto__ = superclass;\n    ColorMapFilter.prototype = Object.create( superclass && superclass.prototype );\n    ColorMapFilter.prototype.constructor = ColorMapFilter;\n\n    var prototypeAccessors = { colorSize: { configurable: true },colorMap: { configurable: true },nearest: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    ColorMapFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms._mix = this.mix;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * the size of one color slice\n     * @member {number}\n     * @readonly\n     */\n    prototypeAccessors.colorSize.get = function () {\n        return this._size;\n    };\n\n    /**\n     * the colorMap texture\n     * @member {PIXI.Texture}\n     */\n    prototypeAccessors.colorMap.get = function () {\n        return this._colorMap;\n    };\n    prototypeAccessors.colorMap.set = function (colorMap) {\n        if (!(colorMap instanceof Texture)) {\n            colorMap = Texture.from(colorMap);\n        }\n        if (colorMap && colorMap.baseTexture) {\n            colorMap.baseTexture.scaleMode = this._scaleMode;\n            colorMap.baseTexture.mipmap = false;\n\n            this._size = colorMap.height;\n            this._sliceSize = 1 / this._size;\n            this._slicePixelSize = this._sliceSize / this._size;\n            this._sliceInnerSize = this._slicePixelSize * (this._size - 1);\n\n            this.uniforms._size = this._size;\n            this.uniforms._sliceSize = this._sliceSize;\n            this.uniforms._slicePixelSize = this._slicePixelSize;\n            this.uniforms._sliceInnerSize = this._sliceInnerSize;\n\n            this.uniforms.colorMap = colorMap;\n        }\n\n        this._colorMap = colorMap;\n    };\n\n    /**\n     * Whether use NEAREST for colorMap texture.\n     * @member {boolean}\n     */\n    prototypeAccessors.nearest.get = function () {\n        return this._nearest;\n    };\n    prototypeAccessors.nearest.set = function (nearest) {\n        this._nearest = nearest;\n        this._scaleMode = nearest ? SCALE_MODES.NEAREST : SCALE_MODES.LINEAR;\n\n        var texture = this._colorMap;\n\n        if (texture && texture.baseTexture) {\n            texture.baseTexture._glTextures = {};\n\n            texture.baseTexture.scaleMode = this._scaleMode;\n            texture.baseTexture.mipmap = false;\n\n            texture._updateID++;\n            texture.baseTexture.emit('update', texture.baseTexture);\n        }\n    };\n\n    /**\n     * If the colorMap is based on canvas , and the content of canvas has changed,\n     *   then call `updateColorMap` for update texture.\n     */\n    ColorMapFilter.prototype.updateColorMap = function updateColorMap () {\n        var texture = this._colorMap;\n\n        if (texture && texture.baseTexture) {\n            texture._updateID++;\n            texture.baseTexture.emit('update', texture.baseTexture);\n\n            this.colorMap = texture;\n        }\n    };\n\n    /**\n     * Destroys this filter\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture of colorMap as well\n     */\n    ColorMapFilter.prototype.destroy = function destroy (destroyBase) {\n        if (this._colorMap) {\n            this._colorMap.destroy(destroyBase);\n        }\n        superclass.prototype.destroy.call(this);\n    };\n\n    Object.defineProperties( ColorMapFilter.prototype, prototypeAccessors );\n\n    return ColorMapFilter;\n}(Filter));\n\nexport { ColorMapFilter };\n//# sourceMappingURL=filter-color-map.esm.js.map\n","/*!\n * @pixi/filter-color-replace - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec3 originalColor;\\nuniform vec3 newColor;\\nuniform float epsilon;\\nvoid main(void) {\\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\\n    float colorDistance = length(colorDiff);\\n    float doReplace = step(colorDistance, epsilon);\\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\\n}\\n\";\n\n/**\n * ColorReplaceFilter, originally by mishaa, updated by timetocode\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/color-replace.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|Array<number>} [originalColor=0xFF0000] The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n * @param {number|Array<number>} [newColor=0x000000] The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n * @param {number} [epsilon=0.4] Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n *\n * @example\n *  // replaces true red with true blue\n *  someSprite.filters = [new ColorReplaceFilter(\n *   [1, 0, 0],\n *   [0, 0, 1],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(\n *   [220/255.0, 220/255.0, 220/255.0],\n *   [225/255.0, 200/255.0, 215/255.0],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(0xdcdcdc, 0xe1c8d7, 0.001)];\n *\n */\nvar ColorReplaceFilter = /*@__PURE__*/(function (superclass) {\n    function ColorReplaceFilter(originalColor, newColor, epsilon) {\n        if ( originalColor === void 0 ) originalColor = 0xFF0000;\n        if ( newColor === void 0 ) newColor = 0x000000;\n        if ( epsilon === void 0 ) epsilon = 0.4;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.originalColor = new Float32Array(3);\n        this.uniforms.newColor = new Float32Array(3);\n        this.originalColor = originalColor;\n        this.newColor = newColor;\n        this.epsilon = epsilon;\n    }\n\n    if ( superclass ) ColorReplaceFilter.__proto__ = superclass;\n    ColorReplaceFilter.prototype = Object.create( superclass && superclass.prototype );\n    ColorReplaceFilter.prototype.constructor = ColorReplaceFilter;\n\n    var prototypeAccessors = { originalColor: { configurable: true },newColor: { configurable: true },epsilon: { configurable: true } };\n\n    /**\n     * The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n     * @member {number|Array<number>}\n     * @default 0xFF0000\n     */\n    prototypeAccessors.originalColor.set = function (value) {\n        var arr = this.uniforms.originalColor;\n        if (typeof value === 'number') {\n            utils.hex2rgb(value, arr);\n            this._originalColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._originalColor = utils.rgb2hex(arr);\n        }\n    };\n    prototypeAccessors.originalColor.get = function () {\n        return this._originalColor;\n    };\n\n    /**\n     * The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n     * @member {number|Array<number>}\n     * @default 0x000000\n     */\n    prototypeAccessors.newColor.set = function (value) {\n        var arr = this.uniforms.newColor;\n        if (typeof value === 'number') {\n            utils.hex2rgb(value, arr);\n            this._newColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._newColor = utils.rgb2hex(arr);\n        }\n    };\n    prototypeAccessors.newColor.get = function () {\n        return this._newColor;\n    };\n\n    /**\n     * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n     * @member {number}\n     * @default 0.4\n     */\n    prototypeAccessors.epsilon.set = function (value) {\n        this.uniforms.epsilon = value;\n    };\n    prototypeAccessors.epsilon.get = function () {\n        return this.uniforms.epsilon;\n    };\n\n    Object.defineProperties( ColorReplaceFilter.prototype, prototypeAccessors );\n\n    return ColorReplaceFilter;\n}(Filter));\n\nexport { ColorReplaceFilter };\n//# sourceMappingURL=filter-color-replace.esm.js.map\n","/*!\n * @pixi/filter-convolution - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-convolution is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying mediump vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec2 texelSize;\\nuniform float matrix[9];\\n\\nvoid main(void)\\n{\\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\\n\\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\\n\\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\\n\\n   gl_FragColor =\\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\\n\\n   gl_FragColor.a = c22.a;\\n}\\n\";\n\n/**\n * The ConvolutionFilter class applies a matrix convolution filter effect.\n * A convolution combines pixels in the input image with neighboring pixels to produce a new image.\n * A wide variety of image effects can be achieved through convolutions, including blurring, edge\n * detection, sharpening, embossing, and beveling. The matrix should be specified as a 9 point Array.\n * See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/convolution.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param [matrix=[0,0,0,0,0,0,0,0,0]] {number[]} An array of values used for matrix transformation. Specified as a 9 point Array.\n * @param [width=200] {number} Width of the object you are transforming\n * @param [height=200] {number} Height of the object you are transforming\n */\nvar ConvolutionFilter = /*@__PURE__*/(function (superclass) {\n    function ConvolutionFilter(matrix, width, height) {\n        if ( width === void 0 ) width = 200;\n        if ( height === void 0 ) height = 200;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.texelSize = new Float32Array(2);\n        this.uniforms.matrix = new Float32Array(9);\n        if (matrix !== undefined) {\n            this.matrix = matrix;\n        }\n        this.width = width;\n        this.height = height;\n    }\n\n    if ( superclass ) ConvolutionFilter.__proto__ = superclass;\n    ConvolutionFilter.prototype = Object.create( superclass && superclass.prototype );\n    ConvolutionFilter.prototype.constructor = ConvolutionFilter;\n\n    var prototypeAccessors = { matrix: { configurable: true },width: { configurable: true },height: { configurable: true } };\n\n    /**\n     * An array of values used for matrix transformation. Specified as a 9 point Array.\n     *\n     * @member {Array<number>}\n     */\n    prototypeAccessors.matrix.get = function () {\n        return this.uniforms.matrix;\n    };\n    prototypeAccessors.matrix.set = function (matrix) {\n        var this$1 = this;\n\n        matrix.forEach(function (v, i) { return this$1.uniforms.matrix[i] = v; });\n    };\n\n    /**\n     * Width of the object you are transforming\n     *\n     * @member {number}\n     */\n    prototypeAccessors.width.get = function () {\n        return 1/this.uniforms.texelSize[0];\n    };\n    prototypeAccessors.width.set = function (value) {\n        this.uniforms.texelSize[0] = 1/value;\n    };\n\n    /**\n     * Height of the object you are transforming\n     *\n     * @member {number}\n     */\n    prototypeAccessors.height.get = function () {\n        return 1/this.uniforms.texelSize[1];\n    };\n    prototypeAccessors.height.set = function (value) {\n        this.uniforms.texelSize[1] = 1/value;\n    };\n\n    Object.defineProperties( ConvolutionFilter.prototype, prototypeAccessors );\n\n    return ConvolutionFilter;\n}(Filter));\n\nexport { ConvolutionFilter };\n//# sourceMappingURL=filter-convolution.esm.js.map\n","/*!\n * @pixi/filter-cross-hatch - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-cross-hatch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\\n\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n    if (lum < 1.00)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.75)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.50)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.3)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n}\\n\";\n\n/**\n * A Cross Hatch effect filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/cross-hatch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nvar CrossHatchFilter = /*@__PURE__*/(function (superclass) {\n    function CrossHatchFilter() {\n        superclass.call(this, vertex, fragment);\n    }\n\n    if ( superclass ) CrossHatchFilter.__proto__ = superclass;\n    CrossHatchFilter.prototype = Object.create( superclass && superclass.prototype );\n    CrossHatchFilter.prototype.constructor = CrossHatchFilter;\n\n    return CrossHatchFilter;\n}(Filter));\n\nexport { CrossHatchFilter };\n//# sourceMappingURL=filter-cross-hatch.esm.js.map\n","/*!\n * @pixi/filter-crt - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-crt is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nconst float SQRT_2 = 1.414213;\\n\\nconst float light = 1.0;\\n\\nuniform float curvature;\\nuniform float lineWidth;\\nuniform float lineContrast;\\nuniform bool verticalLine;\\nuniform float noise;\\nuniform float noiseSize;\\n\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\n\\nuniform float seed;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    vec2 dir = vec2(coord - vec2(0.5, 0.5));\\n\\n    float _c = curvature > 0. ? curvature : 1.;\\n    float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\\n    vec2 uv = dir * k;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 rgb = gl_FragColor.rgb;\\n\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        rgb += _noise * noise;\\n    }\\n\\n    if (lineWidth > 0.0) {\\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\\n        rgb *= j;\\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\\n        rgb *= 0.99 + ceil(segment) * 0.015;\\n    }\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    gl_FragColor.rgb = rgb;\\n}\\n\";\n\n/**\n * The CRTFilter applies a CRT effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/crt.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {object} [options] - The optional parameters of CRT effect\n * @param {number} [options.curvature=1.0] - Bent of interlaced lines, higher value means more bend\n * @param {number} [options.lineWidth=1.0] - Width of the interlaced lines\n * @param {number} [options.lineContrast=0.25] - Contrast of interlaced lines\n * @param {number} [options.verticalLine=false] - `true` is vertical lines, `false` is horizontal\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.seed=0] - A seed value to apply to the random noise generation\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [options.time=0] - For animating interlaced lines\n */\nvar CRTFilter = /*@__PURE__*/(function (superclass) {\n    function CRTFilter(options) {\n        superclass.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        /**\n         * For animating interlaced lines\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = 0;\n\n        /**\n         * A seed value to apply to the random noise generation\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.seed = 0;\n\n        Object.assign(this, {\n            curvature: 1.0,\n            lineWidth: 1.0,\n            lineContrast: 0.25,\n            verticalLine: false,\n            noise: 0.0,\n            noiseSize: 1.0,\n            seed: 0.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n            time: 0.0,\n        }, options);\n    }\n\n    if ( superclass ) CRTFilter.__proto__ = superclass;\n    CRTFilter.prototype = Object.create( superclass && superclass.prototype );\n    CRTFilter.prototype.constructor = CRTFilter;\n\n    var prototypeAccessors = { curvature: { configurable: true },lineWidth: { configurable: true },lineContrast: { configurable: true },verticalLine: { configurable: true },noise: { configurable: true },noiseSize: { configurable: true },vignetting: { configurable: true },vignettingAlpha: { configurable: true },vignettingBlur: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    CRTFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.sourceFrame.width;\n        this.uniforms.dimensions[1] = input.sourceFrame.height;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Bent of interlaced lines, higher value means more bend\n     *\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.curvature.set = function (value) {\n        this.uniforms.curvature = value;\n    };\n    prototypeAccessors.curvature.get = function () {\n        return this.uniforms.curvature;\n    };\n\n    /**\n     * Width of interlaced lines\n     *\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.lineWidth.set = function (value) {\n        this.uniforms.lineWidth = value;\n    };\n    prototypeAccessors.lineWidth.get = function () {\n        return this.uniforms.lineWidth;\n    };\n\n    /**\n     * Contrast of interlaced lines\n     *\n     * @member {number}\n     * @default 0.25\n     */\n    prototypeAccessors.lineContrast.set = function (value) {\n        this.uniforms.lineContrast = value;\n    };\n    prototypeAccessors.lineContrast.get = function () {\n        return this.uniforms.lineContrast;\n    };\n\n    /**\n     * `true` for vertical lines, `false` for horizontal lines\n     *\n     * @member {boolean}\n     * @default false\n     */\n    prototypeAccessors.verticalLine.set = function (value) {\n        this.uniforms.verticalLine = value;\n    };\n    prototypeAccessors.verticalLine.get = function () {\n        return this.uniforms.verticalLine;\n    };\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noise.set = function (value) {\n        this.uniforms.noise = value;\n    };\n    prototypeAccessors.noise.get = function () {\n        return this.uniforms.noise;\n    };\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noiseSize.set = function (value) {\n        this.uniforms.noiseSize = value;\n    };\n    prototypeAccessors.noiseSize.get = function () {\n        return this.uniforms.noiseSize;\n    };\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignetting.set = function (value) {\n        this.uniforms.vignetting = value;\n    };\n    prototypeAccessors.vignetting.get = function () {\n        return this.uniforms.vignetting;\n    };\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingAlpha.set = function (value) {\n        this.uniforms.vignettingAlpha = value;\n    };\n    prototypeAccessors.vignettingAlpha.get = function () {\n        return this.uniforms.vignettingAlpha;\n    };\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingBlur.set = function (value) {\n        this.uniforms.vignettingBlur = value;\n    };\n    prototypeAccessors.vignettingBlur.get = function () {\n        return this.uniforms.vignettingBlur;\n    };\n\n    Object.defineProperties( CRTFilter.prototype, prototypeAccessors );\n\n    return CRTFilter;\n}(Filter));\n\nexport { CRTFilter };\n//# sourceMappingURL=filter-crt.esm.js.map\n","/*!\n * @pixi/filter-dot - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-dot is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;\\n\\nuniform float angle;\\nuniform float scale;\\n\\nfloat pattern()\\n{\\n   float s = sin(angle), c = cos(angle);\\n   vec2 tex = vTextureCoord * filterArea.xy;\\n   vec2 point = vec2(\\n       c * tex.x - s * tex.y,\\n       s * tex.x + c * tex.y\\n   ) * scale;\\n   return (sin(point.x) * sin(point.y)) * 4.0;\\n}\\n\\nvoid main()\\n{\\n   vec4 color = texture2D(uSampler, vTextureCoord);\\n   float average = (color.r + color.g + color.b) / 3.0;\\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\\n}\\n\";\n\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/dot.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [scale=1] The scale of the effect.\n * @param {number} [angle=5] The radius of the effect.\n */\nvar DotFilter = /*@__PURE__*/(function (superclass) {\n    function DotFilter(scale, angle) {\n        if ( scale === void 0 ) scale = 1;\n        if ( angle === void 0 ) angle = 5;\n\n        superclass.call(this, vertex, fragment);\n        this.scale = scale;\n        this.angle = angle;\n    }\n\n    if ( superclass ) DotFilter.__proto__ = superclass;\n    DotFilter.prototype = Object.create( superclass && superclass.prototype );\n    DotFilter.prototype.constructor = DotFilter;\n\n    var prototypeAccessors = { scale: { configurable: true },angle: { configurable: true } };\n\n    /**\n     * The scale of the effect.\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.scale.get = function () {\n        return this.uniforms.scale;\n    };\n    prototypeAccessors.scale.set = function (value) {\n        this.uniforms.scale = value;\n    };\n\n    /**\n     * The radius of the effect.\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.angle.get = function () {\n        return this.uniforms.angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this.uniforms.angle = value;\n    };\n\n    Object.defineProperties( DotFilter.prototype, prototypeAccessors );\n\n    return DotFilter;\n}(Filter));\n\nexport { DotFilter };\n//# sourceMappingURL=filter-dot.esm.js.map\n","/*!\n * @pixi/filter-drop-shadow - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-drop-shadow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { KawaseBlurFilter } from '@pixi/filter-kawase-blur';\nimport { DEG_TO_RAD, utils, Filter, settings, Matrix } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform vec3 color;\\nvoid main(void){\\n    vec4 sample = texture2D(uSampler, vTextureCoord);\\n\\n    // Un-premultiply alpha before applying the color\\n    if (sample.a > 0.0) {\\n        sample.rgb /= sample.a;\\n    }\\n\\n    // Premultiply alpha again\\n    sample.rgb = color.rgb * sample.a;\\n\\n    // alpha user alpha\\n    sample *= alpha;\\n\\n    gl_FragColor = sample;\\n}\";\n\n/**\n * Drop shadow filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/drop-shadow.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {object} [options] Filter options\n * @param {number} [options.rotation=45] The angle of the shadow in degrees.\n * @param {number} [options.distance=5] Distance of shadow\n * @param {number} [options.color=0x000000] Color of the shadow\n * @param {number} [options.alpha=0.5] Alpha of the shadow\n * @param {number} [options.shadowOnly=false] Whether render shadow only\n * @param {number} [options.blur=2] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=3] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution of the Blur filter.\n */\nvar DropShadowFilter = /*@__PURE__*/(function (superclass) {\n    function DropShadowFilter(options) {\n\n        // Fallback support for ctor: (rotation, distance, blur, color, alpha)\n        if (options && options.constructor !== Object) {\n            // eslint-disable-next-line no-console\n            console.warn('DropShadowFilter now uses options instead of (rotation, distance, blur, color, alpha)');\n            options = { rotation: options };\n            if (arguments[1] !== undefined) {\n                options.distance = arguments[1];\n            }\n            if (arguments[2] !== undefined) {\n                options.blur = arguments[2];\n            }\n            if (arguments[3] !== undefined) {\n                options.color = arguments[3];\n            }\n            if (arguments[4] !== undefined) {\n                options.alpha = arguments[4];\n            }\n        }\n\n        options = Object.assign({\n            rotation: 45,\n            distance: 5,\n            color: 0x000000,\n            alpha: 0.5,\n            shadowOnly: false,\n            kernels: null,\n            blur: 2,\n            quality: 3,\n            pixelSize: 1,\n            resolution: settings.RESOLUTION,\n        }, options);\n\n        superclass.call(this);\n\n        var kernels = options.kernels;\n        var blur = options.blur;\n        var quality = options.quality;\n        var pixelSize = options.pixelSize;\n        var resolution = options.resolution;\n\n        this._tintFilter = new Filter(vertex, fragment);\n        this._tintFilter.uniforms.color = new Float32Array(4);\n        this._tintFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new KawaseBlurFilter(kernels) :\n            new KawaseBlurFilter(blur, quality);\n\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n\n        this.targetTransform = new Matrix();\n\n        var shadowOnly = options.shadowOnly;\n        var rotation = options.rotation;\n        var distance = options.distance;\n        var alpha = options.alpha;\n        var color = options.color;\n\n        this.shadowOnly = shadowOnly;\n        this.rotation = rotation;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n\n        this._updatePadding();\n    }\n\n    if ( superclass ) DropShadowFilter.__proto__ = superclass;\n    DropShadowFilter.prototype = Object.create( superclass && superclass.prototype );\n    DropShadowFilter.prototype.constructor = DropShadowFilter;\n\n    var prototypeAccessors = { resolution: { configurable: true },distance: { configurable: true },rotation: { configurable: true },alpha: { configurable: true },color: { configurable: true },kernels: { configurable: true },blur: { configurable: true },quality: { configurable: true },pixelSize: { configurable: true } };\n\n    DropShadowFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var target = filterManager.getRenderTarget();\n\n        target.transform = this.targetTransform;\n        this._tintFilter.apply(filterManager, input, target, true);\n        target.transform = null;\n\n        this._blurFilter.apply(filterManager, target, output, clear);\n\n        if (this.shadowOnly !== true) {\n            filterManager.applyFilter(this, input, output, false);\n        }\n\n        filterManager.returnRenderTarget(target);\n    };\n\n    /**\n     * Recalculate the proper padding amount.\n     * @private\n     */\n    DropShadowFilter.prototype._updatePadding = function _updatePadding () {\n        this.padding = this.distance + (this.blur * 2);\n    };\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    DropShadowFilter.prototype._updateTargetTransform = function _updateTargetTransform () {\n        this.targetTransform.tx = this.distance * Math.cos(this.angle);\n        this.targetTransform.ty = this.distance * Math.sin(this.angle);\n    };\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     * @default PIXI.settings.RESOLUTION\n     */\n    prototypeAccessors.resolution.get = function () {\n        return this._resolution;\n    };\n    prototypeAccessors.resolution.set = function (value) {\n        this._resolution = value;\n\n        if (this._tintFilter) {\n            this._tintFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    };\n\n    /**\n     * Distance offset of the shadow\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.distance.get = function () {\n        return this._distance;\n    };\n    prototypeAccessors.distance.set = function (value) {\n        this._distance = value;\n        this._updatePadding();\n        this._updateTargetTransform();\n    };\n\n    /**\n     * The angle of the shadow in degrees\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.rotation.get = function () {\n        return this.angle / DEG_TO_RAD;\n    };\n    prototypeAccessors.rotation.set = function (value) {\n        this.angle = value * DEG_TO_RAD;\n        this._updateTargetTransform();\n    };\n\n    /**\n     * The alpha of the shadow\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.alpha.get = function () {\n        return this._tintFilter.uniforms.alpha;\n    };\n    prototypeAccessors.alpha.set = function (value) {\n        this._tintFilter.uniforms.alpha = value;\n    };\n\n    /**\n     * The color of the shadow.\n     * @member {number}\n     * @default 0x000000\n     */\n    prototypeAccessors.color.get = function () {\n        return utils.rgb2hex(this._tintFilter.uniforms.color);\n    };\n    prototypeAccessors.color.set = function (value) {\n        utils.hex2rgb(value, this._tintFilter.uniforms.color);\n    };\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._blurFilter.kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        this._blurFilter.kernels = value;\n    };\n\n    /**\n     * The blur of the shadow\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blurFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blurFilter.blur = value;\n        this._updatePadding();\n    };\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._blurFilter.quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._blurFilter.quality = value;\n    };\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    prototypeAccessors.pixelSize.get = function () {\n        return this._blurFilter.pixelSize;\n    };\n    prototypeAccessors.pixelSize.set = function (value) {\n        this._blurFilter.pixelSize = value;\n    };\n\n    Object.defineProperties( DropShadowFilter.prototype, prototypeAccessors );\n\n    return DropShadowFilter;\n}(Filter));\n\nexport { DropShadowFilter };\n//# sourceMappingURL=filter-drop-shadow.esm.js.map\n","/*!\n * @pixi/filter-emboss - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-emboss is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float strength;\\nuniform vec4 filterArea;\\n\\n\\nvoid main(void)\\n{\\n\\tvec2 onePixel = vec2(1.0 / filterArea);\\n\\n\\tvec4 color;\\n\\n\\tcolor.rgb = vec3(0.5);\\n\\n\\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\\n\\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\\n\\n\\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\\n\\n\\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\\n\\n\\tgl_FragColor = vec4(color.rgb * alpha, alpha);\\n}\\n\";\n\n/**\n * An RGB Split Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/emboss.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [strength=5] Strength of the emboss.\n */\nvar EmbossFilter = /*@__PURE__*/(function (superclass) {\n    function EmbossFilter(strength){\n        if ( strength === void 0 ) strength = 5;\n\n        superclass.call(this, vertex, fragment);\n        this.strength = strength;\n    }\n\n    if ( superclass ) EmbossFilter.__proto__ = superclass;\n    EmbossFilter.prototype = Object.create( superclass && superclass.prototype );\n    EmbossFilter.prototype.constructor = EmbossFilter;\n\n    var prototypeAccessors = { strength: { configurable: true } };\n\n    /**\n     * Strength of emboss.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.strength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.strength = value;\n    };\n\n    Object.defineProperties( EmbossFilter.prototype, prototypeAccessors );\n\n    return EmbossFilter;\n}(Filter));\n\nexport { EmbossFilter };\n//# sourceMappingURL=filter-emboss.esm.js.map\n","/*!\n * @pixi/filter-glitch - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-glitch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter, Texture, SCALE_MODES, DEG_TO_RAD } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"// precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\nuniform float aspect;\\n\\nuniform sampler2D displacementMap;\\nuniform float offset;\\nuniform float sinDir;\\nuniform float cosDir;\\nuniform int fillMode;\\n\\nuniform float seed;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nconst int TRANSPARENT = 0;\\nconst int ORIGINAL = 1;\\nconst int LOOP = 2;\\nconst int CLAMP = 3;\\nconst int MIRROR = 4;\\n\\nvoid main(void)\\n{\\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\\n\\n    if (coord.x > 1.0 || coord.y > 1.0) {\\n        return;\\n    }\\n\\n    float cx = coord.x - 0.5;\\n    float cy = (coord.y - 0.5) * aspect;\\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\\n\\n    // displacementMap: repeat\\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\\n\\n    // displacementMap: mirror\\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\\n\\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\\n\\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\\n\\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\\n\\n    if (fillMode == CLAMP) {\\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    } else {\\n        if( coord.x > filterClamp.z ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.x -= filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x = filterClamp.z * 2.0 - coord.x;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        } else if( coord.x < filterClamp.x ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.x += filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x *= -filterClamp.z;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        }\\n\\n        if( coord.y > filterClamp.w ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.y -= filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y = filterClamp.w * 2.0 - coord.y;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        } else if( coord.y < filterClamp.y ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.y += filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y *= -filterClamp.w;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\\n    gl_FragColor.a = texture2D(uSampler, coord).a;\\n}\\n\";\n\n/**\n * The GlitchFilter applies a glitch effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glitch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {object} [options] - The more optional parameters of the filter.\n * @param {number} [options.slices=5] - The maximum number of slices.\n * @param {number} [options.offset=100] - The maximum offset amount of slices.\n * @param {number} [options.direction=0] - The angle in degree of the offset of slices.\n * @param {number} [options.fillMode=0] - The fill mode of the space after the offset. Acceptable values:\n *  - `0` {@link PIXI.filters.GlitchFilter.TRANSPARENT TRANSPARENT}\n *  - `1` {@link PIXI.filters.GlitchFilter.ORIGINAL ORIGINAL}\n *  - `2` {@link PIXI.filters.GlitchFilter.LOOP LOOP}\n *  - `3` {@link PIXI.filters.GlitchFilter.CLAMP CLAMP}\n *  - `4` {@link PIXI.filters.GlitchFilter.MIRROR MIRROR}\n * @param {number} [options.seed=0] - A seed value for randomizing glitch effect.\n * @param {number} [options.average=false] - `true` will divide the bands roughly based on equal amounts\n *                 where as setting to `false` will vary the band sizes dramatically (more random looking).\n * @param {number} [options.minSize=8] - Minimum size of individual slice. Segment of total `sampleSize`\n * @param {number} [options.sampleSize=512] - The resolution of the displacement map texture.\n * @param {number} [options.red=[0,0]] - Red channel offset\n * @param {number} [options.green=[0,0]] - Green channel offset.\n * @param {number} [options.blue=[0,0]] - Blue channel offset.\n */\nvar GlitchFilter = /*@__PURE__*/(function (superclass) {\n    function GlitchFilter(options) {\n        if ( options === void 0 ) options = {};\n\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        options = Object.assign({\n            slices: 5,\n            offset: 100,\n            direction: 0,\n            fillMode: 0,\n            average: false,\n            seed: 0,\n            red: [0, 0],\n            green: [0, 0],\n            blue: [0, 0],\n            minSize: 8,\n            sampleSize: 512,\n        }, options);\n\n        this.direction = options.direction;\n        this.red = options.red;\n        this.green = options.green;\n        this.blue = options.blue;\n\n        /**\n         * The maximum offset value for each of the slices.\n         *\n         * @member {number}\n         */\n        this.offset = options.offset;\n\n        /**\n         * The fill mode of the space after the offset.\n         *\n         * @member {number}\n         */\n        this.fillMode = options.fillMode;\n\n        /**\n         * `true` will divide the bands roughly based on equal amounts\n         * where as setting to `false` will vary the band sizes dramatically (more random looking).\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.average = options.average;\n\n        /**\n         * A seed value for randomizing color offset. Animating\n         * this value to `Math.random()` produces a twitching effect.\n         *\n         * @member {number}\n         */\n        this.seed = options.seed;\n\n        /**\n         * Minimum size of slices as a portion of the `sampleSize`\n         *\n         * @member {number}\n         */\n        this.minSize = options.minSize;\n\n        /**\n         * Height of the displacement map canvas.\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.sampleSize = options.sampleSize;\n\n        /**\n         * Internally generated canvas.\n         *\n         * @member {HTMLCanvasElement} _canvas\n         * @private\n         */\n        this._canvas = document.createElement('canvas');\n        this._canvas.width = 4;\n        this._canvas.height = this.sampleSize;\n\n        /**\n         * The displacement map is used to generate the bands.\n         * If using your own texture, `slices` will be ignored.\n         *\n         * @member {PIXI.Texture}\n         * @readonly\n         */\n        this.texture = Texture.fromCanvas(this._canvas, SCALE_MODES.NEAREST);\n\n        /**\n         * Internal number of slices\n         * @member {number}\n         * @private\n         */\n        this._slices = 0;\n\n        // Set slices\n        this.slices = options.slices;\n    }\n\n    if ( superclass ) GlitchFilter.__proto__ = superclass;\n    GlitchFilter.prototype = Object.create( superclass && superclass.prototype );\n    GlitchFilter.prototype.constructor = GlitchFilter;\n\n    var prototypeAccessors = { sizes: { configurable: true },offsets: { configurable: true },slices: { configurable: true },direction: { configurable: true },red: { configurable: true },green: { configurable: true },blue: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    GlitchFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n\n        var width = input.sourceFrame.width;\n        var height = input.sourceFrame.height;\n\n        this.uniforms.dimensions[0] = width;\n        this.uniforms.dimensions[1] = height;\n        this.uniforms.aspect = height / width;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.offset = this.offset;\n        this.uniforms.fillMode = this.fillMode;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Randomize the slices size (heights).\n     *\n     * @private\n     */\n    GlitchFilter.prototype._randomizeSizes = function _randomizeSizes () {\n        var arr = this._sizes;\n        var last = this._slices - 1;\n        var size = this.sampleSize;\n        var min = Math.min(this.minSize / size, 0.9 / this._slices);\n\n        if (this.average) {\n            var count = this._slices;\n            var rest = 1;\n\n            for (var i = 0; i < last; i++) {\n                var averageWidth = rest / (count - i);\n                var w =  Math.max(averageWidth * (1 - Math.random() * 0.6), min);\n                arr[i] = w;\n                rest -= w;\n            }\n            arr[last] = rest;\n        }\n        else {\n            var rest$1 = 1;\n            var ratio = Math.sqrt(1 / this._slices);\n\n            for (var i$1 = 0; i$1 < last; i$1++) {\n                var w$1 = Math.max(ratio * rest$1 * Math.random(), min);\n                arr[i$1] = w$1;\n                rest$1 -= w$1;\n            }\n            arr[last] = rest$1;\n        }\n\n        this.shuffle();\n    };\n\n    /**\n     * Shuffle the sizes of the slices, advanced usage.\n     */\n    GlitchFilter.prototype.shuffle = function shuffle () {\n        var arr = this._sizes;\n        var last = this._slices - 1;\n\n        // shuffle\n        for (var i = last; i > 0; i--) {\n            var rand = (Math.random() * i) >> 0;\n            var temp = arr[i];\n\n            arr[i] = arr[rand];\n            arr[rand] = temp;\n        }\n    };\n\n    /**\n     * Randomize the values for offset from -1 to 1\n     *\n     * @private\n     */\n    GlitchFilter.prototype._randomizeOffsets = function _randomizeOffsets () {\n        for (var i = 0 ; i < this._slices; i++) {\n            this._offsets[i] = Math.random() * (Math.random() < 0.5 ? -1 : 1);\n        }\n    };\n\n    /**\n     * Regenerating random size, offsets for slices.\n     */\n    GlitchFilter.prototype.refresh = function refresh () {\n        this._randomizeSizes();\n        this._randomizeOffsets();\n        this.redraw();\n    };\n\n    /**\n     * Redraw displacement bitmap texture, advanced usage.\n     */\n    GlitchFilter.prototype.redraw = function redraw () {\n        var size = this.sampleSize;\n        var texture = this.texture;\n        var ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, 8, size);\n\n        var offset;\n        var y = 0;\n\n        for (var i = 0 ; i < this._slices; i++) {\n            offset = Math.floor(this._offsets[i] * 256);\n            var height = this._sizes[i] * size;\n            var red = offset > 0 ? offset : 0;\n            var green = offset < 0 ? -offset : 0;\n            ctx.fillStyle = 'rgba(' + red + ', ' + green + ', 0, 1)';\n            ctx.fillRect(0, y >> 0, size, height + 1 >> 0);\n            y += height;\n        }\n\n        texture.baseTexture.update();\n        this.uniforms.displacementMap = texture;\n    };\n\n    /**\n     * Manually custom slices size (height) of displacement bitmap\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.sizes.set = function (sizes) {\n        var len = Math.min(this._slices, sizes.length);\n\n        for (var i = 0; i < len; i++){\n            this._sizes[i] = sizes[i];\n        }\n    };\n    prototypeAccessors.sizes.get = function () {\n        return this._sizes;\n    };\n\n    /**\n     * Manually set custom slices offset of displacement bitmap, this is\n     * a collection of values from -1 to 1. To change the max offset value\n     * set `offset`.\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.offsets.set = function (offsets) {\n        var len = Math.min(this._slices, offsets.length);\n\n        for (var i = 0; i < len; i++){\n            this._offsets[i] = offsets[i];\n        }\n    };\n    prototypeAccessors.offsets.get = function () {\n        return this._offsets;\n    };\n\n    /**\n     * The count of slices.\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.slices.get = function () {\n        return this._slices;\n    };\n    prototypeAccessors.slices.set = function (value) {\n        if (this._slices === value) {\n            return;\n        }\n        this._slices = value;\n        this.uniforms.slices = value;\n        this._sizes = this.uniforms.slicesWidth = new Float32Array(value);\n        this._offsets = this.uniforms.slicesOffset = new Float32Array(value);\n        this.refresh();\n    };\n\n    /**\n     * The angle in degree of the offset of slices.\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.direction.get = function () {\n        return this._direction;\n    };\n    prototypeAccessors.direction.set = function (value) {\n        if (this._direction === value) {\n            return;\n        }\n        this._direction = value;\n\n        var radians = value * DEG_TO_RAD;\n\n        this.uniforms.sinDir = Math.sin(radians);\n        this.uniforms.cosDir = Math.cos(radians);\n    };\n\n    /**\n     * Red channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.red.get = function () {\n        return this.uniforms.red;\n    };\n    prototypeAccessors.red.set = function (value) {\n        this.uniforms.red = value;\n    };\n\n    /**\n     * Green channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.green.get = function () {\n        return this.uniforms.green;\n    };\n    prototypeAccessors.green.set = function (value) {\n        this.uniforms.green = value;\n    };\n\n    /**\n     * Blue offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.blue.get = function () {\n        return this.uniforms.blue;\n    };\n    prototypeAccessors.blue.set = function (value) {\n        this.uniforms.blue = value;\n    };\n\n    /**\n     * Removes all references\n     */\n    GlitchFilter.prototype.destroy = function destroy () {\n        this.texture.destroy(true);\n        this.texture = null;\n        this._canvas = null;\n        this.red = null;\n        this.green = null;\n        this.blue = null;\n        this._sizes = null;\n        this._offsets = null;\n    };\n\n    Object.defineProperties( GlitchFilter.prototype, prototypeAccessors );\n\n    return GlitchFilter;\n}(Filter));\n\n/**\n * Fill mode as transparent\n *\n * @constant\n * @static\n * @member {int} TRANSPARENT\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.TRANSPARENT = 0;\n\n/**\n * Fill mode as original\n *\n * @constant\n * @static\n * @member {int} ORIGINAL\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.ORIGINAL = 1;\n\n/**\n * Fill mode as loop\n *\n * @constant\n * @static\n * @member {int} LOOP\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.LOOP = 2;\n\n/**\n * Fill mode as clamp\n *\n * @constant\n * @static\n * @member {int} CLAMP\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.CLAMP = 3;\n\n/**\n * Fill mode as mirror\n *\n * @constant\n * @static\n * @member {int} MIRROR\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.MIRROR = 4;\n\nexport { GlitchFilter };\n//# sourceMappingURL=filter-glitch.esm.js.map\n","/*!\n * @pixi/filter-glow - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-glow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uSampler;\\n\\nuniform float distance;\\nuniform float outerStrength;\\nuniform float innerStrength;\\nuniform vec4 glowColor;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nconst float PI = 3.14159265358979323846264;\\n\\nvoid main(void) {\\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float totalAlpha = 0.0;\\n    float maxTotalAlpha = 0.0;\\n    float cosAngle;\\n    float sinAngle;\\n    vec2 displaced;\\n    for (float angle = 0.0; angle <= PI * 2.0; angle += %QUALITY_DIST%) {\\n       cosAngle = cos(angle);\\n       sinAngle = sin(angle);\\n       for (float curDistance = 1.0; curDistance <= %DIST%; curDistance++) {\\n           displaced.x = vTextureCoord.x + cosAngle * curDistance * px.x;\\n           displaced.y = vTextureCoord.y + sinAngle * curDistance * px.y;\\n           curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n           totalAlpha += (distance - curDistance) * curColor.a;\\n           maxTotalAlpha += (distance - curDistance);\\n       }\\n    }\\n    maxTotalAlpha = max(maxTotalAlpha, 0.0001);\\n\\n    ownColor.a = max(ownColor.a, 0.0001);\\n    ownColor.rgb = ownColor.rgb / ownColor.a;\\n    float outerGlowAlpha = (totalAlpha / maxTotalAlpha)  * outerStrength * (1. - ownColor.a);\\n    float innerGlowAlpha = ((maxTotalAlpha - totalAlpha) / maxTotalAlpha) * innerStrength * ownColor.a;\\n    float resultAlpha = (ownColor.a + outerGlowAlpha);\\n    gl_FragColor = vec4(mix(mix(ownColor.rgb, glowColor.rgb, innerGlowAlpha / ownColor.a), glowColor.rgb, outerGlowAlpha / resultAlpha) * resultAlpha, resultAlpha);\\n}\\n\";\n\n/**\n * GlowFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/12756-glow-filter/?hl=mishaa#entry73578\n * http://codepen.io/mishaa/pen/raKzrm<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glow.png)\n *\n * @class\n *\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [distance=10] The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n * @param {number} [outerStrength=4] The strength of the glow outward from the edge of the sprite.\n * @param {number} [innerStrength=0] The strength of the glow inward from the edge of the sprite.\n * @param {number} [color=0xffffff] The color of the glow.\n * @param {number} [quality=0.1] A number between 0 and 1 that describes the quality of the glow.\n *\n * @example\n *  someSprite.filters = [\n *      new GlowFilter(15, 2, 1, 0xFF0000, 0.5)\n *  ];\n */\nvar GlowFilter = /*@__PURE__*/(function (superclass) {\n    function GlowFilter(distance, outerStrength, innerStrength, color, quality) {\n        if ( distance === void 0 ) distance = 10;\n        if ( outerStrength === void 0 ) outerStrength = 4;\n        if ( innerStrength === void 0 ) innerStrength = 0;\n        if ( color === void 0 ) color = 0xffffff;\n        if ( quality === void 0 ) quality = 0.1;\n\n        superclass.call(this, vertex, fragment\n            .replace(/%QUALITY_DIST%/gi, '' + (1 / quality / distance).toFixed(7))\n            .replace(/%DIST%/gi, '' + distance.toFixed(7)));\n\n        this.uniforms.glowColor = new Float32Array([0, 0, 0, 1]);\n        this.distance = distance;\n        this.color = color;\n        this.outerStrength = outerStrength;\n        this.innerStrength = innerStrength;\n    }\n\n    if ( superclass ) GlowFilter.__proto__ = superclass;\n    GlowFilter.prototype = Object.create( superclass && superclass.prototype );\n    GlowFilter.prototype.constructor = GlowFilter;\n\n    var prototypeAccessors = { color: { configurable: true },distance: { configurable: true },outerStrength: { configurable: true },innerStrength: { configurable: true } };\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    prototypeAccessors.color.get = function () {\n        return utils.rgb2hex(this.uniforms.glowColor);\n    };\n    prototypeAccessors.color.set = function (value) {\n        utils.hex2rgb(value, this.uniforms.glowColor);\n    };\n\n    /**\n     * The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n     * @member {number}\n     * @default 10\n     */\n    prototypeAccessors.distance.get = function () {\n        return this.uniforms.distance;\n    };\n    prototypeAccessors.distance.set = function (value) {\n        this.uniforms.distance = value;\n    };\n\n    /**\n     * The strength of the glow outward from the edge of the sprite.\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.outerStrength.get = function () {\n        return this.uniforms.outerStrength;\n    };\n    prototypeAccessors.outerStrength.set = function (value) {\n        this.uniforms.outerStrength = value;\n    };\n\n    /**\n     * The strength of the glow inward from the edge of the sprite.\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.innerStrength.get = function () {\n        return this.uniforms.innerStrength;\n    };\n    prototypeAccessors.innerStrength.set = function (value) {\n        this.uniforms.innerStrength = value;\n    };\n\n    Object.defineProperties( GlowFilter.prototype, prototypeAccessors );\n\n    return GlowFilter;\n}(Filter));\n\nexport { GlowFilter };\n//# sourceMappingURL=filter-glow.esm.js.map\n","/*!\n * @pixi/filter-godray - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-godray is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter, Point, DEG_TO_RAD } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar perlin = \"vec3 mod289(vec3 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 mod289(vec4 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute(vec4 x)\\n{\\n    return mod289(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n    return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec3 fade(vec3 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n    Pi0 = mod289(Pi0);\\n    Pi1 = mod289(Pi1);\\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n    vec4 iz0 = Pi0.zzzz;\\n    vec4 iz1 = Pi1.zzzz;\\n    vec4 ixy = permute(permute(ix) + iy);\\n    vec4 ixy0 = permute(ixy + iz0);\\n    vec4 ixy1 = permute(ixy + iz1);\\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n    gx0 = fract(gx0);\\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n    vec4 sz0 = step(gz0, vec4(0.0));\\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n    gx1 = fract(gx1);\\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n    vec4 sz1 = step(gz1, vec4(0.0));\\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n    g000 *= norm0.x;\\n    g010 *= norm0.y;\\n    g100 *= norm0.z;\\n    g110 *= norm0.w;\\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n    g001 *= norm1.x;\\n    g011 *= norm1.y;\\n    g101 *= norm1.z;\\n    g111 *= norm1.w;\\n    float n000 = dot(g000, Pf0);\\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n    float n111 = dot(g111, Pf1);\\n    vec3 fade_xyz = fade(Pf0);\\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n    return 2.2 * n_xyz;\\n}\\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\\n{\\n    float sum = 0.0;\\n    float sc = 1.0;\\n    float totalgain = 1.0;\\n    for (float i = 0.0; i < 6.0; i++)\\n    {\\n        sum += totalgain * pnoise(P * sc, rep);\\n        sc *= lacunarity;\\n        totalgain *= gain;\\n    }\\n    return abs(sum);\\n}\\n\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform vec2 light;\\nuniform bool parallel;\\nuniform float aspect;\\n\\nuniform float gain;\\nuniform float lacunarity;\\nuniform float time;\\n\\n${perlin}\\n\\nvoid main(void) {\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    float d;\\n\\n    if (parallel) {\\n        float _cos = light.x;\\n        float _sin = light.y;\\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\\n    } else {\\n        float dx = coord.x - light.x / dimensions.x;\\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\\n        d = dy / dis;\\n    }\\n\\n    vec3 dir = vec3(d, d, 0.0);\\n\\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\\n    noise = mix(noise, 0.0, 0.3);\\n    //fade vertically.\\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\\n    mist.a = 1.0;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) + mist;\\n\\n\\n    // vec4 color = min(texture2D(uSampler, vTextureCoord) + mist, 1.0);\\n    // gl_FragColor = color;\\n\\n\\n    // vec4 color = texture2D(uSampler, vTextureCoord) + mist;\\n    // color.a = min(color.a, 1.0);\\n    // gl_FragColor = color;\\n\\n\\n    // vec4 color = texture2D(uSampler, vTextureCoord);\\n    // float a = color.a;\\n    // color += mist;\\n    // color.a = a;\\n    // gl_FragColor = color;\\n}\\n\";\n\n/**\n* GordayFilter, {@link https://codepen.io/alaingalvan originally} by Alain Galvan\n*\n*\n*\n* ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/godray.gif)\n* @class\n* @extends PIXI.Filter\n* @memberof PIXI.filters\n*\n* @example\n*  displayObject.filters = [new GodrayFilter()];\n* @param {object} [options] Filter options\n* @param {number} [options.angle=30] Angle/Light-source of the rays.\n* @param {number} [options.gain=0.5] General intensity of the effect.\n* @param {number} [options.lacunrity=2.5] The density of the fractal noise.\n* @param {boolean} [options.parallel=true] `true` to use `angle`, `false` to use `center`\n* @param {number} [options.time=0] The current time position.\n* @param {PIXI.Point|number[]} [options.center=[0,0]] Focal point for non-parallel rays,\n*        to use this `parallel` must be set to `false`.\n*/\nvar GodrayFilter = /*@__PURE__*/(function (superclass) {\n    function GodrayFilter(options) {\n        superclass.call(this, vertex, fragment.replace('${perlin}', perlin));\n\n        this.uniforms.dimensions = new Float32Array(2);\n\n        // Fallback support for ctor: (angle, gain, lacunarity, time)\n        if (typeof options === 'number') {\n            // eslint-disable-next-line no-console\n            console.warn('GodrayFilter now uses options instead of (angle, gain, lacunarity, time)');\n            options = { angle: options };\n            if (arguments[1] !== undefined) {\n                options.gain = arguments[1];\n            }\n            if (arguments[2] !== undefined) {\n                options.lacunarity = arguments[2];\n            }\n            if (arguments[3] !== undefined) {\n                options.time = arguments[3];\n            }\n        }\n\n        options = Object.assign({\n            angle: 30,\n            gain: 0.5,\n            lacunarity: 2.5,\n            time: 0,\n            parallel: true,\n            center: [0, 0],\n        }, options);\n\n        this._angleLight = new Point();\n        this.angle = options.angle;\n        this.gain = options.gain;\n        this.lacunarity = options.lacunarity;\n\n        /**\n         * `true` if light rays are parallel (uses angle),\n         * `false` to use the focal `center` point\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.parallel = options.parallel;\n\n        /**\n         * The position of the emitting point for light rays\n         * only used if `parallel` is set to `false`.\n         *\n         * @member {PIXI.Point|number[]}\n         * @default [0, 0]\n         */\n        this.center = options.center;\n\n        /**\n         * The current time.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = options.time;\n    }\n\n    if ( superclass ) GodrayFilter.__proto__ = superclass;\n    GodrayFilter.prototype = Object.create( superclass && superclass.prototype );\n    GodrayFilter.prototype.constructor = GodrayFilter;\n\n    var prototypeAccessors = { angle: { configurable: true },gain: { configurable: true },lacunarity: { configurable: true } };\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    GodrayFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var ref = input.sourceFrame;\n        var width = ref.width;\n        var height = ref.height;\n\n        this.uniforms.light = this.parallel ? this._angleLight : this.center;\n\n        this.uniforms.parallel = this.parallel;\n        this.uniforms.dimensions[0] = width;\n        this.uniforms.dimensions[1] = height;\n        this.uniforms.aspect = height / width;\n        this.uniforms.time = this.time;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The angle/light-source of the rays in degrees. For instance, a value of 0 is vertical rays,\n     *     values of 90 or -90 produce horizontal rays.\n     * @member {number}\n     * @default 30\n     */\n    prototypeAccessors.angle.get = function () {\n        return this._angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this._angle = value;\n\n        var radians = value * DEG_TO_RAD;\n\n        this._angleLight.x = Math.cos(radians);\n        this._angleLight.y = Math.sin(radians);\n    };\n\n    /**\n     * General intensity of the effect. A value closer to 1 will produce a more intense effect,\n     * where a value closer to 0 will produce a subtler effect.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.gain.get = function () {\n        return this.uniforms.gain;\n    };\n    prototypeAccessors.gain.set = function (value) {\n        this.uniforms.gain = value;\n    };\n\n    /**\n     * The density of the fractal noise. A higher amount produces more rays and a smaller amound\n     * produces fewer waves.\n     *\n     * @member {number}\n     * @default 2.5\n     */\n    prototypeAccessors.lacunarity.get = function () {\n        return this.uniforms.lacunarity;\n    };\n    prototypeAccessors.lacunarity.set = function (value) {\n        this.uniforms.lacunarity = value;\n    };\n\n    Object.defineProperties( GodrayFilter.prototype, prototypeAccessors );\n\n    return GodrayFilter;\n}(Filter));\n\nexport { GodrayFilter };\n//# sourceMappingURL=filter-godray.esm.js.map\n","/*!\n * @pixi/filter-motion-blur - v2.6.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-motion-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Point, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uVelocity;\\nuniform int uKernelSize;\\nuniform float uOffset;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\n// Notice:\\n// the perfect way:\\n//    int kernelSize = min(uKernelSize, MAX_KERNELSIZE);\\n// BUT in real use-case , uKernelSize < MAX_KERNELSIZE almost always.\\n// So use uKernelSize directly.\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    vec2 velocity = uVelocity / filterArea.xy;\\n    float offset = -uOffset / length(uVelocity) - 0.5;\\n    int k = uKernelSize - 1;\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n        vec2 bias = velocity * (float(i) / float(k) + offset);\\n        color += texture2D(uSampler, vTextureCoord + bias);\\n    }\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\";\n\n/**\n * The MotionBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/motion-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point|number[]} [velocity=[0, 0]] Sets the velocity of the motion for blur effect.\n * @param {number} [kernelSize=5] - The kernelSize of the blur filter. Must be odd number >= 5\n * @param {number} [offset=0] - The offset of the blur filter.\n */\nvar MotionBlurFilter = /*@__PURE__*/(function (superclass) {\n    function MotionBlurFilter(velocity, kernelSize, offset) {\n        if ( velocity === void 0 ) velocity = [0, 0];\n        if ( kernelSize === void 0 ) kernelSize = 5;\n        if ( offset === void 0 ) offset = 0;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.uVelocity = new Float32Array(2);\n        this._velocity = new Point(0,0);\n        this.velocity = velocity;\n\n        /**\n         * The kernelSize of the blur, higher values are slower but look better.\n         * Use odd value greater than 5.\n         * @member {number}\n         * @default 5\n         */\n        this.kernelSize = kernelSize;\n        this.offset = offset;\n    }\n\n    if ( superclass ) MotionBlurFilter.__proto__ = superclass;\n    MotionBlurFilter.prototype = Object.create( superclass && superclass.prototype );\n    MotionBlurFilter.prototype.constructor = MotionBlurFilter;\n\n    var prototypeAccessors = { velocity: { configurable: true },offset: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    MotionBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var ref = this.velocity;\n        var x = ref.x;\n        var y = ref.y;\n\n        this.uniforms.uKernelSize = (x !== 0 || y !== 0) ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the velocity of the motion for blur effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.velocity.set = function (value) {\n        if (Array.isArray(value)) {\n            this._velocity.x = value[0];\n            this._velocity.y = value[1];\n        }\n        else if (value instanceof Point) {\n            this._velocity.x = value.x;\n            this._velocity.y = value.y;\n        }\n\n        this.uniforms.uVelocity[0] = this._velocity.x;\n        this.uniforms.uVelocity[1] = this._velocity.y;\n    };\n\n    prototypeAccessors.velocity.get = function () {\n        return this._velocity;\n    };\n\n    /**\n     * The offset of the blur filter.\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.offset.set = function (value) {\n        this.uniforms.uOffset = value;\n    };\n\n    prototypeAccessors.offset.get = function () {\n        return this.uniforms.uOffset;\n    };\n\n    Object.defineProperties( MotionBlurFilter.prototype, prototypeAccessors );\n\n    return MotionBlurFilter;\n}(Filter));\n\nexport { MotionBlurFilter };\n//# sourceMappingURL=filter-motion-blur.esm.js.map\n","/*!\n * @pixi/filter-multi-color-replace - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-multi-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float epsilon;\\n\\nconst int MAX_COLORS = %maxColors%;\\n\\nuniform vec3 originalColors[MAX_COLORS];\\nuniform vec3 targetColors[MAX_COLORS];\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    float alpha = gl_FragColor.a;\\n    if (alpha < 0.0001)\\n    {\\n      return;\\n    }\\n\\n    vec3 color = gl_FragColor.rgb / alpha;\\n\\n    for(int i = 0; i < MAX_COLORS; i++)\\n    {\\n      vec3 origColor = originalColors[i];\\n      if (origColor.r < 0.0)\\n      {\\n        break;\\n      }\\n      vec3 colorDiff = origColor - color;\\n      if (length(colorDiff) < epsilon)\\n      {\\n        vec3 targetColor = targetColors[i];\\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\\n        return;\\n      }\\n    }\\n}\\n\";\n\n/**\n * Filter for replacing a color with another color. Similar to ColorReplaceFilter, but support multiple\n * colors.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/multi-color-replace.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {Array<Array>} replacements - The collection of replacement items. Each item is color-pair (an array length is 2).\n *                       In the pair, the first value is original color , the second value is target color.\n * @param {number} [epsilon=0.05] - Tolerance of the floating-point comparison between colors\n *                                  (lower = more exact, higher = more inclusive)\n * @param {number} [maxColors] - The maximum number of replacements filter is able to use. Because the\n *                               fragment is only compiled once, this cannot be changed after construction.\n *                               If omitted, the default value is the length of `replacements`.\n *\n * @example\n *  // replaces pure red with pure blue, and replaces pure green with pure white\n *  someSprite.filters = [new MultiColorReplaceFilter(\n *    [\n *      [0xFF0000, 0x0000FF],\n *      [0x00FF00, 0xFFFFFF]\n *    ],\n *    0.001\n *  )];\n *\n *  You also could use [R, G, B] as the color\n *  someOtherSprite.filters = [new MultiColorReplaceFilter(\n *    [\n *      [ [1,0,0], [0,0,1] ],\n *      [ [0,1,0], [1,1,1] ]\n *    ],\n *    0.001\n *  )];\n *\n */\nvar MultiColorReplaceFilter = /*@__PURE__*/(function (superclass) {\n    function MultiColorReplaceFilter(replacements, epsilon, maxColors) {\n        if ( epsilon === void 0 ) epsilon = 0.05;\n        if ( maxColors === void 0 ) maxColors = null;\n\n        maxColors = maxColors || replacements.length;\n\n        superclass.call(this, vertex, fragment.replace(/%maxColors%/g, maxColors));\n\n        this.epsilon = epsilon;\n        this._maxColors = maxColors;\n        this._replacements = null;\n        this.uniforms.originalColors = new Float32Array(maxColors * 3);\n        this.uniforms.targetColors = new Float32Array(maxColors * 3);\n        this.replacements = replacements;\n    }\n\n    if ( superclass ) MultiColorReplaceFilter.__proto__ = superclass;\n    MultiColorReplaceFilter.prototype = Object.create( superclass && superclass.prototype );\n    MultiColorReplaceFilter.prototype.constructor = MultiColorReplaceFilter;\n\n    var prototypeAccessors = { replacements: { configurable: true },maxColors: { configurable: true },epsilon: { configurable: true } };\n\n    /**\n     * The source and target colors for replacement. See constructor for information on the format.\n     *\n     * @member {Array<Array>}\n     */\n    prototypeAccessors.replacements.set = function (replacements) {\n        var originals = this.uniforms.originalColors;\n        var targets = this.uniforms.targetColors;\n        var colorCount = replacements.length;\n\n        if (colorCount > this._maxColors) {\n            throw (\"Length of replacements (\" + colorCount + \") exceeds the maximum colors length (\" + (this._maxColors) + \")\");\n        }\n\n        // Fill with negative values\n        originals[colorCount * 3] = -1;\n\n        for (var i = 0; i < colorCount; i++) {\n            var pair = replacements[i];\n\n            // for original colors\n            var color = pair[0];\n            if (typeof color === 'number') {\n                color = utils.hex2rgb(color);\n            }\n            else {\n                pair[0] = utils.rgb2hex(color);\n            }\n\n            originals[i * 3] = color[0];\n            originals[(i * 3) + 1] = color[1];\n            originals[(i * 3) + 2] = color[2];\n\n            // for target colors\n            var targetColor = pair[1];\n            if (typeof targetColor === 'number') {\n                targetColor = utils.hex2rgb(targetColor);\n            }\n            else {\n                pair[1] = utils.rgb2hex(targetColor);\n            }\n\n            targets[i * 3] = targetColor[0];\n            targets[(i * 3) + 1] = targetColor[1];\n            targets[(i * 3) + 2] = targetColor[2];\n        }\n\n        this._replacements = replacements;\n    };\n    prototypeAccessors.replacements.get = function () {\n        return this._replacements;\n    };\n\n    /**\n     * Should be called after changing any of the contents of the replacements.\n     * This is a convenience method for resetting the `replacements`.\n     */\n    MultiColorReplaceFilter.prototype.refresh = function refresh () {\n        this.replacements = this._replacements;\n    };\n\n    /**\n     * The maximum number of color replacements supported by this filter. Can be changed\n     * _only_ during construction.\n     *\n     * @member {number}\n     * @readonly\n     */\n    prototypeAccessors.maxColors.get = function () {\n        return this._maxColors;\n    };\n\n    /**\n     * Tolerance of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n     *\n     * @member {number}\n     * @default 0.05\n     */\n    prototypeAccessors.epsilon.set = function (value) {\n        this.uniforms.epsilon = value;\n    };\n    prototypeAccessors.epsilon.get = function () {\n        return this.uniforms.epsilon;\n    };\n\n    Object.defineProperties( MultiColorReplaceFilter.prototype, prototypeAccessors );\n\n    return MultiColorReplaceFilter;\n}(Filter));\n\nexport { MultiColorReplaceFilter };\n//# sourceMappingURL=filter-multi-color-replace.esm.js.map\n","/*!\n * @pixi/filter-old-film - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-old-film is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform float sepia;\\nuniform float noise;\\nuniform float noiseSize;\\nuniform float scratch;\\nuniform float scratchDensity;\\nuniform float scratchWidth;\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\nuniform float seed;\\n\\nconst float SQRT_2 = 1.414213;\\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvec3 Overlay(vec3 src, vec3 dst)\\n{\\n    // if (dst <= 0.5) then: 2 * src * dst\\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\\n}\\n\\n\\nvoid main()\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 color = gl_FragColor.rgb;\\n\\n    if (sepia > 0.0)\\n    {\\n        float gray = (color.x + color.y + color.z) / 3.0;\\n        vec3 grayscale = vec3(gray);\\n\\n        color = Overlay(SEPIA_RGB, grayscale);\\n\\n        color = grayscale + sepia * (color - grayscale);\\n    }\\n\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\\n        dir.y *= dimensions.y / dimensions.x;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    if (scratchDensity > seed && scratch != 0.0)\\n    {\\n        float phase = seed * 256.0;\\n        float s = mod(floor(phase), 2.0);\\n        float dist = 1.0 / scratchDensity;\\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\\n        if (d < seed * 0.6 + 0.4)\\n        {\\n            highp float period = scratchDensity * 10.0;\\n\\n            float xx = coord.x * period + phase;\\n            float aa = abs(mod(xx, 0.5) * 4.0);\\n            float bb = mod(floor(xx / 0.5), 2.0);\\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\\n\\n            float kk = 2.0 * period;\\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\\n            float dh = dw * kk;\\n\\n            float tine = (yy - (2.0 - dh));\\n\\n            if (tine > 0.0) {\\n                float _sign = sign(scratch);\\n\\n                tine = s * tine / period + scratch + 0.1;\\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\\n\\n                color.rgb *= tine;\\n            }\\n        }\\n    }\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\\n        // float _noise = snoise(d) * 0.5;\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        color += _noise * noise;\\n    }\\n\\n    gl_FragColor.rgb = color;\\n}\\n\";\n\n/**\n * The OldFilmFilter applies a Old film effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/old-film.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {object|number} [options] - The optional parameters of old film effect.\n *                        When options is a number , it will be `seed`\n * @param {number} [options.sepia=0.3] - The amount of saturation of sepia effect,\n *        a value of `1` is more saturation and closer to `0` is less, and a value of\n *        `0` produces no sepia effect\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.scratch=0.5] - How often scratches appear\n * @param {number} [options.scratchDensity=0.3] - The density of the number of scratches\n * @param {number} [options.scratchWidth=1.0] - The width of the scratches\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [seed=0] - A see value to apply to the random noise generation\n */\nvar OldFilmFilter = /*@__PURE__*/(function (superclass) {\n    function OldFilmFilter(options, seed) {\n        if ( seed === void 0 ) seed = 0;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        if (typeof options === 'number') {\n            this.seed = options;\n            options = null;\n        }\n        else {\n            /**\n             * A see value to apply to the random noise generation\n             * @member {number}\n             */\n            this.seed = seed;\n        }\n\n        Object.assign(this, {\n            sepia: 0.3,\n            noise: 0.3,\n            noiseSize: 1.0,\n            scratch: 0.5,\n            scratchDensity: 0.3,\n            scratchWidth: 1.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n        }, options);\n    }\n\n    if ( superclass ) OldFilmFilter.__proto__ = superclass;\n    OldFilmFilter.prototype = Object.create( superclass && superclass.prototype );\n    OldFilmFilter.prototype.constructor = OldFilmFilter;\n\n    var prototypeAccessors = { sepia: { configurable: true },noise: { configurable: true },noiseSize: { configurable: true },scratch: { configurable: true },scratchDensity: { configurable: true },scratchWidth: { configurable: true },vignetting: { configurable: true },vignettingAlpha: { configurable: true },vignettingBlur: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    OldFilmFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.sourceFrame.width;\n        this.uniforms.dimensions[1] = input.sourceFrame.height;\n\n        // named `seed` because in the most programming languages,\n        // `random` used for \"the function for generating random value\".\n        this.uniforms.seed = this.seed;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n\n    /**\n     * The amount of saturation of sepia effect,\n     * a value of `1` is more saturation and closer to `0` is less,\n     * and a value of `0` produces no sepia effect\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.sepia.set = function (value) {\n        this.uniforms.sepia = value;\n    };\n\n    prototypeAccessors.sepia.get = function () {\n        return this.uniforms.sepia;\n    };\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noise.set = function (value) {\n        this.uniforms.noise = value;\n    };\n\n    prototypeAccessors.noise.get = function () {\n        return this.uniforms.noise;\n    };\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noiseSize.set = function (value) {\n        this.uniforms.noiseSize = value;\n    };\n\n    prototypeAccessors.noiseSize.get = function () {\n        return this.uniforms.noiseSize;\n    };\n\n    /**\n     * How often scratches appear\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratch.set = function (value) {\n        this.uniforms.scratch = value;\n    };\n\n    prototypeAccessors.scratch.get = function () {\n        return this.uniforms.scratch;\n    };\n\n    /**\n     * The density of the number of scratches\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratchDensity.set = function (value) {\n        this.uniforms.scratchDensity = value;\n    };\n\n    prototypeAccessors.scratchDensity.get = function () {\n        return this.uniforms.scratchDensity;\n    };\n\n    /**\n     * The width of the scratches\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratchWidth.set = function (value) {\n        this.uniforms.scratchWidth = value;\n    };\n\n    prototypeAccessors.scratchWidth.get = function () {\n        return this.uniforms.scratchWidth;\n    };\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignetting.set = function (value) {\n        this.uniforms.vignetting = value;\n    };\n\n    prototypeAccessors.vignetting.get = function () {\n        return this.uniforms.vignetting;\n    };\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingAlpha.set = function (value) {\n        this.uniforms.vignettingAlpha = value;\n    };\n\n    prototypeAccessors.vignettingAlpha.get = function () {\n        return this.uniforms.vignettingAlpha;\n    };\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingBlur.set = function (value) {\n        this.uniforms.vignettingBlur = value;\n    };\n\n    prototypeAccessors.vignettingBlur.get = function () {\n        return this.uniforms.vignettingBlur;\n    };\n\n    Object.defineProperties( OldFilmFilter.prototype, prototypeAccessors );\n\n    return OldFilmFilter;\n}(Filter));\n\nexport { OldFilmFilter };\n//# sourceMappingURL=filter-old-film.esm.js.map\n","/*!\n * @pixi/filter-outline - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-outline is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 thickness;\\nuniform vec4 outlineColor;\\nuniform vec4 filterClamp;\\n\\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\\n\\nvoid main(void) {\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float maxAlpha = 0.;\\n    vec2 displaced;\\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n        maxAlpha = max(maxAlpha, curColor.a);\\n    }\\n    float resultAlpha = max(maxAlpha, ownColor.a);\\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\\n}\\n\";\n\n/**\n * OutlineFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\n * http://codepen.io/mishaa/pen/emGNRB<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/outline.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [thickness=1] The tickness of the outline. Make it 2 times more for resolution 2\n * @param {number} [color=0x000000] The color of the outline.\n * @param {number} [quality=0.1] The quality of the outline from `0` to `1`, using a higher quality\n *        setting will result in slower performance and more accuracy.\n *\n * @example\n *  someSprite.shader = new OutlineFilter(9, 0xFF0000);\n */\nvar OutlineFilter = /*@__PURE__*/(function (superclass) {\n    function OutlineFilter(thickness, color, quality) {\n        if ( thickness === void 0 ) thickness = 1;\n        if ( color === void 0 ) color = 0x000000;\n        if ( quality === void 0 ) quality = 0.1;\n\n        var samples =  Math.max(\n            quality * OutlineFilter.MAX_SAMPLES,\n            OutlineFilter.MIN_SAMPLES\n        );\n        var angleStep = (Math.PI * 2 / samples).toFixed(7);\n\n        superclass.call(this, vertex, fragment.replace(/\\$\\{angleStep\\}/, angleStep));\n        this.uniforms.thickness = new Float32Array([0, 0]);\n\n        /**\n         * The thickness of the outline.\n         * @member {number}\n         * @default 1\n         */\n        this.thickness = thickness;\n\n        this.uniforms.outlineColor = new Float32Array([0, 0, 0, 1]);\n        this.color = color;\n\n        this.quality = quality;\n    }\n\n    if ( superclass ) OutlineFilter.__proto__ = superclass;\n    OutlineFilter.prototype = Object.create( superclass && superclass.prototype );\n    OutlineFilter.prototype.constructor = OutlineFilter;\n\n    var prototypeAccessors = { color: { configurable: true } };\n\n    OutlineFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.thickness[0] = this.thickness / input.size.width;\n        this.uniforms.thickness[1] = this.thickness / input.size.height;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0x000000\n     */\n    prototypeAccessors.color.get = function () {\n        return utils.rgb2hex(this.uniforms.outlineColor);\n    };\n    prototypeAccessors.color.set = function (value) {\n        utils.hex2rgb(value, this.uniforms.outlineColor);\n    };\n\n    Object.defineProperties( OutlineFilter.prototype, prototypeAccessors );\n\n    return OutlineFilter;\n}(Filter));\n\n/**\n * The minimum number of samples for rendering outline.\n * @static\n * @member {number} MIN_SAMPLES\n * @memberof PIXI.filters.OutlineFilter\n * @default 1\n */\nOutlineFilter.MIN_SAMPLES = 1;\n\n/**\n * The maximum number of samples for rendering outline.\n * @static\n * @member {number} MAX_SAMPLES\n * @memberof PIXI.filters.OutlineFilter\n * @default 100\n */\nOutlineFilter.MAX_SAMPLES = 100;\n\nexport { OutlineFilter };\n//# sourceMappingURL=filter-outline.esm.js.map\n","/*!\n * @pixi/filter-pixelate - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-pixelate is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 size;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n\\treturn floor( coord / size ) * size;\\n}\\n\\nvoid main(void)\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = pixelate(coord, size);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord);\\n}\\n\";\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/pixelate.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point|Array<number>|number} [size=10] Either the width/height of the size of the pixels, or square size\n */\nvar PixelateFilter = /*@__PURE__*/(function (superclass) {\n    function PixelateFilter(size) {\n        if ( size === void 0 ) size = 10;\n\n        superclass.call(this, vertex, fragment);\n        this.size = size;\n    }\n\n    if ( superclass ) PixelateFilter.__proto__ = superclass;\n    PixelateFilter.prototype = Object.create( superclass && superclass.prototype );\n    PixelateFilter.prototype.constructor = PixelateFilter;\n\n    var prototypeAccessors = { size: { configurable: true } };\n\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {PIXI.Point|Array<number>|number}\n     * @default 10\n     */\n    prototypeAccessors.size.get = function () {\n        return this.uniforms.size;\n    };\n    prototypeAccessors.size.set = function (value) {\n        if (typeof value === 'number') {\n            value = [value, value];\n        }\n        this.uniforms.size = value;\n    };\n\n    Object.defineProperties( PixelateFilter.prototype, prototypeAccessors );\n\n    return PixelateFilter;\n}(Filter));\n\nexport { PixelateFilter };\n//# sourceMappingURL=filter-pixelate.esm.js.map\n","/*!\n * @pixi/filter-radial-blur - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-radial-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float uRadian;\\nuniform vec2 uCenter;\\nuniform float uRadius;\\nuniform int uKernelSize;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    float aspect = filterArea.y / filterArea.x;\\n    vec2 center = uCenter.xy / filterArea.xy;\\n    float gradient = uRadius / filterArea.x * 0.3;\\n    float radius = uRadius / filterArea.x - gradient * 0.5;\\n    int k = uKernelSize - 1;\\n\\n    vec2 coord = vTextureCoord;\\n    vec2 dir = vec2(center - coord);\\n    float dist = length(vec2(dir.x, dir.y * aspect));\\n\\n    float radianStep = uRadian;\\n    if (radius >= 0.0 && dist > radius) {\\n        float delta = dist - radius;\\n        float gap = gradient;\\n        float scale = 1.0 - abs(delta / gap);\\n        if (scale <= 0.0) {\\n            gl_FragColor = color;\\n            return;\\n        }\\n        radianStep *= scale;\\n    }\\n    radianStep /= float(k);\\n\\n    float s = sin(radianStep);\\n    float c = cos(radianStep);\\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n\\n        coord -= center;\\n        coord.y *= aspect;\\n        coord = rotationMatrix * coord;\\n        coord.y /= aspect;\\n        coord += center;\\n\\n        vec4 sample = texture2D(uSampler, coord);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample;\\n    }\\n\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\";\n\n/**\n * The RadialBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/radial-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [angle=0] Sets the angle of the motion for blur effect.\n * @param {PIXI.Point|number[]} [center=[0,0]] The center of the radial.\n * @param {number} [kernelSize=5] - The kernelSize of the blur filter. But be odd number >= 3\n * @param {number} [radius=-1] - The maximum size of the blur radius, `-1` is infinite\n */\nvar RadialBlurFilter = /*@__PURE__*/(function (superclass) {\n    function RadialBlurFilter(angle, center, kernelSize, radius) {\n        if ( angle === void 0 ) angle = 0;\n        if ( center === void 0 ) center = [0, 0];\n        if ( kernelSize === void 0 ) kernelSize = 5;\n        if ( radius === void 0 ) radius = -1;\n\n        superclass.call(this, vertex, fragment);\n\n        this._angle = 0;\n        this.angle = angle;\n        this.center = center;\n        this.kernelSize = kernelSize;\n        this.radius = radius;\n    }\n\n    if ( superclass ) RadialBlurFilter.__proto__ = superclass;\n    RadialBlurFilter.prototype = Object.create( superclass && superclass.prototype );\n    RadialBlurFilter.prototype.constructor = RadialBlurFilter;\n\n    var prototypeAccessors = { angle: { configurable: true },center: { configurable: true },radius: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    RadialBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uKernelSize = this._angle !== 0 ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the angle in degrees of the motion for blur effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.angle.set = function (value) {\n        this._angle = value;\n        this.uniforms.uRadian = value * Math.PI / 180;\n    };\n\n    prototypeAccessors.angle.get = function () {\n        return this._angle;\n    };\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.uCenter;\n    };\n\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.uCenter = value;\n    };\n\n    /**\n     * Outer radius of the effect. The default value of `-1` is infinite.\n     *\n     * @member {number}\n     * @default -1\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.uRadius;\n    };\n\n    prototypeAccessors.radius.set = function (value) {\n        if (value < 0 || value === Infinity) {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    };\n\n    Object.defineProperties( RadialBlurFilter.prototype, prototypeAccessors );\n\n    return RadialBlurFilter;\n}(Filter));\n\nexport { RadialBlurFilter };\n//# sourceMappingURL=filter-radial-blur.esm.js.map\n","/*!\n * @pixi/filter-reflection - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-reflection is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nuniform bool mirror;\\nuniform float boundary;\\nuniform vec2 amplitude;\\nuniform vec2 waveLength;\\nuniform vec2 alpha;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    if (coord.y < boundary) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\\n    float areaY = boundary * dimensions.y / filterArea.y;\\n    float v = areaY + areaY - vTextureCoord.y;\\n    float y = mirror ? v : vTextureCoord.y;\\n\\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\\n\\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\\n    x = clamp(x, filterClamp.x, filterClamp.z);\\n\\n    vec4 color = texture2D(uSampler, vec2(x, y));\\n\\n    gl_FragColor = color * _alpha;\\n}\\n\";\n\n/**\n * Applies a reflection effect to simulate the reflection on water with waves.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/reflection.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {object} [options] - The optional parameters of Reflection effect.\n * @param {number} [options.mirror=true] - `true` to reflect the image, `false` for waves-only\n * @param {number} [options.boundary=0.5] - Vertical position of the reflection point, default is 50% (middle)\n *                 smaller numbers produce a larger reflection, larger numbers produce a smaller reflection.\n * @param {number} [options.amplitude=[0, 20]] - Starting and ending amplitude of waves\n * @param {number} [options.waveLength=[30, 100]] - Starting and ending length of waves\n * @param {number} [options.alpha=[1, 1]] - Starting and ending alpha values\n * @param {number} [options.time=0] - Time for animating position of waves\n */\nvar ReflectionFilter = /*@__PURE__*/(function (superclass) {\n    function ReflectionFilter(options) {\n        superclass.call(this, vertex, fragment);\n        this.uniforms.amplitude = new Float32Array(2);\n        this.uniforms.waveLength = new Float32Array(2);\n        this.uniforms.alpha = new Float32Array(2);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        Object.assign(this, {\n            mirror: true,\n            boundary: 0.5,\n            amplitude: [0, 20],\n            waveLength: [30, 100],\n            alpha: [1, 1],\n\n            /**\n             * Time for animating position of waves\n             *\n             * @member {number}\n             * @memberof PIXI.filters.ReflectionFilter#\n             * @default 0\n             */\n            time: 0,\n        }, options);\n    }\n\n    if ( superclass ) ReflectionFilter.__proto__ = superclass;\n    ReflectionFilter.prototype = Object.create( superclass && superclass.prototype );\n    ReflectionFilter.prototype.constructor = ReflectionFilter;\n\n    var prototypeAccessors = { mirror: { configurable: true },boundary: { configurable: true },amplitude: { configurable: true },waveLength: { configurable: true },alpha: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    ReflectionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.sourceFrame.width;\n        this.uniforms.dimensions[1] = input.sourceFrame.height;\n\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * `true` to reflect the image, `false` for waves-only\n     *\n     * @member {boolean}\n     * @default true\n     */\n    prototypeAccessors.mirror.set = function (value) {\n        this.uniforms.mirror = value;\n    };\n    prototypeAccessors.mirror.get = function () {\n        return this.uniforms.mirror;\n    };\n\n    /**\n     * Vertical position of the reflection point, default is 50% (middle)\n     * smaller numbers produce a larger reflection, larger numbers produce a smaller reflection.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.boundary.set = function (value) {\n        this.uniforms.boundary = value;\n    };\n    prototypeAccessors.boundary.get = function () {\n        return this.uniforms.boundary;\n    };\n\n    /**\n     * Starting and ending amplitude of waves\n     * @member {number[]}\n     * @default [0, 20]\n     */\n    prototypeAccessors.amplitude.set = function (value) {\n        this.uniforms.amplitude[0] = value[0];\n        this.uniforms.amplitude[1] = value[1];\n    };\n    prototypeAccessors.amplitude.get = function () {\n        return this.uniforms.amplitude;\n    };\n\n    /**\n     * Starting and ending length of waves\n     * @member {number[]}\n     * @default [30, 100]\n     */\n    prototypeAccessors.waveLength.set = function (value) {\n        this.uniforms.waveLength[0] = value[0];\n        this.uniforms.waveLength[1] = value[1];\n    };\n    prototypeAccessors.waveLength.get = function () {\n        return this.uniforms.waveLength;\n    };\n\n    /**\n     * Starting and ending alpha values\n     * @member {number[]}\n     * @default [1, 1]\n     */\n    prototypeAccessors.alpha.set = function (value) {\n        this.uniforms.alpha[0] = value[0];\n        this.uniforms.alpha[1] = value[1];\n    };\n    prototypeAccessors.alpha.get = function () {\n        return this.uniforms.alpha;\n    };\n\n    Object.defineProperties( ReflectionFilter.prototype, prototypeAccessors );\n\n    return ReflectionFilter;\n}(Filter));\n\nexport { ReflectionFilter };\n//# sourceMappingURL=filter-reflection.esm.js.map\n","/*!\n * @pixi/filter-rgb-split - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-rgb-split is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nvoid main(void)\\n{\\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\\n}\\n\";\n\n/**\n * An RGB Split Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/rgb.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point} [red=[-10,0]] Red channel offset\n * @param {PIXI.Point} [green=[0, 10]] Green channel offset\n * @param {PIXI.Point} [blue=[0, 0]] Blue channel offset\n */\nvar RGBSplitFilter = /*@__PURE__*/(function (superclass) {\n    function RGBSplitFilter(red, green, blue) {\n        if ( red === void 0 ) red = [-10, 0];\n        if ( green === void 0 ) green = [0, 10];\n        if ( blue === void 0 ) blue = [0, 0];\n\n        superclass.call(this, vertex, fragment);\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n    }\n\n    if ( superclass ) RGBSplitFilter.__proto__ = superclass;\n    RGBSplitFilter.prototype = Object.create( superclass && superclass.prototype );\n    RGBSplitFilter.prototype.constructor = RGBSplitFilter;\n\n    var prototypeAccessors = { red: { configurable: true },green: { configurable: true },blue: { configurable: true } };\n\n    /**\n     * Red channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.red.get = function () {\n        return this.uniforms.red;\n    };\n    prototypeAccessors.red.set = function (value) {\n        this.uniforms.red = value;\n    };\n\n    /**\n     * Green channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.green.get = function () {\n        return this.uniforms.green;\n    };\n    prototypeAccessors.green.set = function (value) {\n        this.uniforms.green = value;\n    };\n\n    /**\n     * Blue offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.blue.get = function () {\n        return this.uniforms.blue;\n    };\n    prototypeAccessors.blue.set = function (value) {\n        this.uniforms.blue = value;\n    };\n\n    Object.defineProperties( RGBSplitFilter.prototype, prototypeAccessors );\n\n    return RGBSplitFilter;\n}(Filter));\n\nexport { RGBSplitFilter };\n//# sourceMappingURL=filter-rgb-split.esm.js.map\n","/*!\n * @pixi/filter-shockwave - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-shockwave is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\n\\nuniform vec2 center;\\n\\nuniform float amplitude;\\nuniform float wavelength;\\n// uniform float power;\\nuniform float brightness;\\nuniform float speed;\\nuniform float radius;\\n\\nuniform float time;\\n\\nconst float PI = 3.14159;\\n\\nvoid main()\\n{\\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\\n    float maxRadius = radius / filterArea.x;\\n    float currentRadius = time * speed / filterArea.x;\\n\\n    float fade = 1.0;\\n\\n    if (maxRadius > 0.0) {\\n        if (currentRadius > maxRadius) {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\\n    }\\n\\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\\n    dir.y *= filterArea.y / filterArea.x;\\n    float dist = length(dir);\\n\\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    vec2 diffUV = normalize(dir);\\n\\n    float diff = (dist - currentRadius) / halfWavelength;\\n\\n    float p = 1.0 - pow(abs(diff), 2.0);\\n\\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\\n\\n    vec2 offset = diffUV * powDiff / filterArea.xy;\\n\\n    // Do clamp :\\n    vec2 coord = vTextureCoord + offset;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    // No clamp :\\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\\n\\n    color.rgb *= 1.0 + (brightness - 1.0) * p * fade;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * The ShockwaveFilter class lets you apply a shockwave effect.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/shockwave.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n *\n * @param {PIXI.Point|number[]} [center=[0.5, 0.5]] See `center` property.\n * @param {object} [options] - The optional parameters of shockwave filter.\n * @param {number} [options.amplitude=0.5] - See `amplitude`` property.\n * @param {number} [options.wavelength=1.0] - See `wavelength` property.\n * @param {number} [options.speed=500.0] - See `speed` property.\n * @param {number} [options.brightness=8] - See `brightness` property.\n * @param {number} [options.radius=4] - See `radius` property.\n * @param {number} [time=0] - See `time` property.\n */\nvar ShockwaveFilter = /*@__PURE__*/(function (superclass) {\n    function ShockwaveFilter(center, options, time) {\n        if ( center === void 0 ) center = [0.0, 0.0];\n        if ( options === void 0 ) options = {};\n        if ( time === void 0 ) time = 0;\n\n        superclass.call(this, vertex, fragment);\n\n        this.center = center;\n\n        if (Array.isArray(options)) {\n            // eslint-disable-next-line no-console\n            console.warn('Deprecated Warning: ShockwaveFilter params Array has been changed to options Object.');\n            options = {};\n        }\n\n        options = Object.assign({\n            amplitude: 30.0,\n            wavelength: 160.0,\n            brightness: 1.0,\n            speed: 500.0,\n            radius: -1.0,\n        }, options);\n\n        this.amplitude = options.amplitude;\n\n        this.wavelength = options.wavelength;\n\n        this.brightness = options.brightness;\n\n        this.speed = options.speed;\n\n        this.radius = options.radius;\n\n        /**\n         * Sets the elapsed time of the shockwave.\n         * It could control the current size of shockwave.\n         *\n         * @member {number}\n         */\n        this.time = time;\n    }\n\n    if ( superclass ) ShockwaveFilter.__proto__ = superclass;\n    ShockwaveFilter.prototype = Object.create( superclass && superclass.prototype );\n    ShockwaveFilter.prototype.constructor = ShockwaveFilter;\n\n    var prototypeAccessors = { center: { configurable: true },amplitude: { configurable: true },wavelength: { configurable: true },brightness: { configurable: true },speed: { configurable: true },radius: { configurable: true } };\n\n    ShockwaveFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        /**\n         * There is no set/get of `time`, for performance.\n         * Because in the most real cases, `time` will be changed in ever game tick.\n         * Use set/get will take more function-call.\n         */\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the center of the shockwave in normalized screen coords. That is\n     * (0,0) is the top-left and (1,1) is the bottom right.\n     *\n     * @member {PIXI.Point|number[]}\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.center;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.center = value;\n    };\n\n    /**\n     * The amplitude of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.amplitude.get = function () {\n        return this.uniforms.amplitude;\n    };\n    prototypeAccessors.amplitude.set = function (value) {\n        this.uniforms.amplitude = value;\n    };\n\n    /**\n     * The wavelength of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.wavelength.get = function () {\n        return this.uniforms.wavelength;\n    };\n    prototypeAccessors.wavelength.set = function (value) {\n        this.uniforms.wavelength = value;\n    };\n\n    /**\n     * The brightness of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.brightness.get = function () {\n        return this.uniforms.brightness;\n    };\n    prototypeAccessors.brightness.set = function (value) {\n        this.uniforms.brightness = value;\n    };\n\n    /**\n     * The speed about the shockwave ripples out.\n     * The unit is `pixel/second`\n     *\n     * @member {number}\n     */\n    prototypeAccessors.speed.get = function () {\n        return this.uniforms.speed;\n    };\n    prototypeAccessors.speed.set = function (value) {\n        this.uniforms.speed = value;\n    };\n\n    /**\n     * The maximum radius of shockwave.\n     * `< 0.0` means it's infinity.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    Object.defineProperties( ShockwaveFilter.prototype, prototypeAccessors );\n\n    return ShockwaveFilter;\n}(Filter));\n\nexport { ShockwaveFilter };\n//# sourceMappingURL=filter-shockwave.esm.js.map\n","/*!\n * @pixi/filter-simple-lightmap - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-simple-lightmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { utils, Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D uLightmap;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\nuniform vec4 ambientColor;\\nvoid main() {\\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\\n    vec4 light = texture2D(uLightmap, lightCoord);\\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\\n    vec3 intensity = ambient + light.rgb;\\n    vec3 finalColor = diffuseColor.rgb * intensity;\\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\\n}\\n\";\n\n/**\n* SimpleLightmap, originally by Oza94\n* http://www.html5gamedevs.com/topic/20027-pixijs-simple-lightmapping/\n* http://codepen.io/Oza94/pen/EPoRxj\n*\n* You have to specify filterArea, or suffer consequences.\n* You may have to use it with `filter.dontFit = true`,\n*  until we rewrite this using same approach as for DisplacementFilter.\n*\n* ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/simple-lightmap.png)\n* @class\n* @extends PIXI.Filter\n* @memberof PIXI.filters\n* @param {PIXI.Texture} texture a texture where your lightmap is rendered\n* @param {Array<number>|number} [color=0x000000] An RGBA array of the ambient color\n* @param {number} [alpha=1] Default alpha set independent of color (if it's a number, not array).\n*\n* @example\n*  displayObject.filters = [new SimpleLightmapFilter(texture, 0x666666)];\n*/\nvar SimpleLightmapFilter = /*@__PURE__*/(function (superclass) {\n    function SimpleLightmapFilter(texture, color, alpha) {\n        if ( color === void 0 ) color = 0x000000;\n        if ( alpha === void 0 ) alpha = 1;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.uniforms.ambientColor = new Float32Array([0, 0, 0, alpha]);\n        this.texture = texture;\n        this.color = color;\n    }\n\n    if ( superclass ) SimpleLightmapFilter.__proto__ = superclass;\n    SimpleLightmapFilter.prototype = Object.create( superclass && superclass.prototype );\n    SimpleLightmapFilter.prototype.constructor = SimpleLightmapFilter;\n\n    var prototypeAccessors = { texture: { configurable: true },color: { configurable: true },alpha: { configurable: true } };\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    SimpleLightmapFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.sourceFrame.width;\n        this.uniforms.dimensions[1] = input.sourceFrame.height;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n\n    /**\n     * a texture where your lightmap is rendered\n     * @member {PIXI.Texture}\n     */\n    prototypeAccessors.texture.get = function () {\n        return this.uniforms.uLightmap;\n    };\n    prototypeAccessors.texture.set = function (value) {\n        this.uniforms.uLightmap = value;\n    };\n\n    /**\n     * An RGBA array of the ambient color or a hex color without alpha\n     * @member {Array<number>|number}\n     */\n    prototypeAccessors.color.set = function (value) {\n        var arr = this.uniforms.ambientColor;\n        if (typeof value === 'number') {\n            utils.hex2rgb(value, arr);\n            this._color = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            arr[3] = value[3];\n            this._color = utils.rgb2hex(arr);\n        }\n    };\n    prototypeAccessors.color.get = function () {\n        return this._color;\n    };\n\n    /**\n     * When setting `color` as hex, this can be used to set alpha independently.\n     * @member {number}\n     */\n    prototypeAccessors.alpha.get = function () {\n        return this.uniforms.ambientColor[3];\n    };\n    prototypeAccessors.alpha.set = function (value) {\n        this.uniforms.ambientColor[3] = value;\n    };\n\n    Object.defineProperties( SimpleLightmapFilter.prototype, prototypeAccessors );\n\n    return SimpleLightmapFilter;\n}(Filter));\n\nexport { SimpleLightmapFilter };\n//# sourceMappingURL=filter-simple-lightmap.esm.js.map\n","/*!\n * @pixi/filter-tilt-shift - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-tilt-shift is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter, Point } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float blur;\\nuniform float gradientBlur;\\nuniform vec2 start;\\nuniform vec2 end;\\nuniform vec2 delta;\\nuniform vec2 texSize;\\n\\nfloat random(vec3 scale, float seed)\\n{\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n    float total = 0.0;\\n\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\\n\\n    for (float t = -30.0; t <= 30.0; t++)\\n    {\\n        float percent = (t + offset - 0.5) / 30.0;\\n        float weight = 1.0 - abs(percent);\\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\\n        sample.rgb *= sample.a;\\n        color += sample * weight;\\n        total += weight;\\n    }\\n\\n    color /= total;\\n    color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftAxisFilter = /*@__PURE__*/(function (superclass) {\n    function TiltShiftAxisFilter(blur, gradientBlur, start, end){\n        if ( blur === void 0 ) blur = 100;\n        if ( gradientBlur === void 0 ) gradientBlur = 600;\n        if ( start === void 0 ) start = null;\n        if ( end === void 0 ) end = null;\n\n        superclass.call(this, vertex, fragment);\n        this.uniforms.blur = blur;\n        this.uniforms.gradientBlur = gradientBlur;\n        this.uniforms.start = start || new Point(0, window.innerHeight / 2);\n        this.uniforms.end = end || new Point(600, window.innerHeight / 2);\n        this.uniforms.delta = new Point(30, 30);\n        this.uniforms.texSize = new Point(window.innerWidth, window.innerHeight);\n        this.updateDelta();\n    }\n\n    if ( superclass ) TiltShiftAxisFilter.__proto__ = superclass;\n    TiltShiftAxisFilter.prototype = Object.create( superclass && superclass.prototype );\n    TiltShiftAxisFilter.prototype.constructor = TiltShiftAxisFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },gradientBlur: { configurable: true },start: { configurable: true },end: { configurable: true } };\n\n    /**\n     * Updates the filter delta values.\n     * This is overridden in the X and Y filters, does nothing for this class.\n     *\n     */\n    TiltShiftAxisFilter.prototype.updateDelta = function updateDelta () {\n        this.uniforms.delta.x = 0;\n        this.uniforms.delta.y = 0;\n    };\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.uniforms.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.uniforms.blur = value;\n    };\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.gradientBlur.get = function () {\n        return this.uniforms.gradientBlur;\n    };\n    prototypeAccessors.gradientBlur.set = function (value) {\n        this.uniforms.gradientBlur = value;\n    };\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.start.get = function () {\n        return this.uniforms.start;\n    };\n    prototypeAccessors.start.set = function (value) {\n        this.uniforms.start = value;\n        this.updateDelta();\n    };\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.end.get = function () {\n        return this.uniforms.end;\n    };\n    prototypeAccessors.end.set = function (value) {\n        this.uniforms.end = value;\n        this.updateDelta();\n    };\n\n    Object.defineProperties( TiltShiftAxisFilter.prototype, prototypeAccessors );\n\n    return TiltShiftAxisFilter;\n}(Filter));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftXFilter = /*@__PURE__*/(function (TiltShiftAxisFilter) {\n    function TiltShiftXFilter () {\n        TiltShiftAxisFilter.apply(this, arguments);\n    }\n\n    if ( TiltShiftAxisFilter ) TiltShiftXFilter.__proto__ = TiltShiftAxisFilter;\n    TiltShiftXFilter.prototype = Object.create( TiltShiftAxisFilter && TiltShiftAxisFilter.prototype );\n    TiltShiftXFilter.prototype.constructor = TiltShiftXFilter;\n\n    TiltShiftXFilter.prototype.updateDelta = function updateDelta () {\n        var dx = this.uniforms.end.x - this.uniforms.start.x;\n        var dy = this.uniforms.end.y - this.uniforms.start.y;\n        var d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = dx / d;\n        this.uniforms.delta.y = dy / d;\n    };\n\n    return TiltShiftXFilter;\n}(TiltShiftAxisFilter));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftYFilter = /*@__PURE__*/(function (TiltShiftAxisFilter) {\n    function TiltShiftYFilter () {\n        TiltShiftAxisFilter.apply(this, arguments);\n    }\n\n    if ( TiltShiftAxisFilter ) TiltShiftYFilter.__proto__ = TiltShiftAxisFilter;\n    TiltShiftYFilter.prototype = Object.create( TiltShiftAxisFilter && TiltShiftAxisFilter.prototype );\n    TiltShiftYFilter.prototype.constructor = TiltShiftYFilter;\n\n    TiltShiftYFilter.prototype.updateDelta = function updateDelta () {\n        var dx = this.uniforms.end.x - this.uniforms.start.x;\n        var dy = this.uniforms.end.y - this.uniforms.start.y;\n        var d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = -dy / d;\n        this.uniforms.delta.y = dx / d;\n    };\n\n    return TiltShiftYFilter;\n}(TiltShiftAxisFilter));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/tilt-shift.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [blur=100] The strength of the blur.\n * @param {number} [gradientBlur=600] The strength of the gradient blur.\n * @param {PIXI.Point} [start=null] The Y value to start the effect at.\n * @param {PIXI.Point} [end=null] The Y value to end the effect at.\n */\nvar TiltShiftFilter = /*@__PURE__*/(function (superclass) {\n    function TiltShiftFilter(blur, gradientBlur, start, end) {\n        if ( blur === void 0 ) blur = 100;\n        if ( gradientBlur === void 0 ) gradientBlur = 600;\n        if ( start === void 0 ) start = null;\n        if ( end === void 0 ) end = null;\n\n        superclass.call(this);\n        this.tiltShiftXFilter = new TiltShiftXFilter(blur, gradientBlur, start, end);\n        this.tiltShiftYFilter = new TiltShiftYFilter(blur, gradientBlur, start, end);\n    }\n\n    if ( superclass ) TiltShiftFilter.__proto__ = superclass;\n    TiltShiftFilter.prototype = Object.create( superclass && superclass.prototype );\n    TiltShiftFilter.prototype.constructor = TiltShiftFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },gradientBlur: { configurable: true },start: { configurable: true },end: { configurable: true } };\n\n    TiltShiftFilter.prototype.apply = function apply (filterManager, input, output) {\n        var renderTarget = filterManager.getRenderTarget(true);\n        this.tiltShiftXFilter.apply(filterManager, input, renderTarget);\n        this.tiltShiftYFilter.apply(filterManager, renderTarget, output);\n        filterManager.returnRenderTarget(renderTarget);\n    };\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.tiltShiftXFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    };\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.gradientBlur.get = function () {\n        return this.tiltShiftXFilter.gradientBlur;\n    };\n    prototypeAccessors.gradientBlur.set = function (value) {\n        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    };\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.start.get = function () {\n        return this.tiltShiftXFilter.start;\n    };\n    prototypeAccessors.start.set = function (value) {\n        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    };\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.end.get = function () {\n        return this.tiltShiftXFilter.end;\n    };\n    prototypeAccessors.end.set = function (value) {\n        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    };\n\n    Object.defineProperties( TiltShiftFilter.prototype, prototypeAccessors );\n\n    return TiltShiftFilter;\n}(Filter));\n\nexport { TiltShiftAxisFilter, TiltShiftFilter, TiltShiftXFilter, TiltShiftYFilter };\n//# sourceMappingURL=filter-tilt-shift.esm.js.map\n","/*!\n * @pixi/filter-twist - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-twist is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 twist(vec2 coord)\\n{\\n    coord -= offset;\\n\\n    float dist = length(coord);\\n\\n    if (dist < radius)\\n    {\\n        float ratioDist = (radius - dist) / radius;\\n        float angleMod = ratioDist * ratioDist * angle;\\n        float s = sin(angleMod);\\n        float c = cos(angleMod);\\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\\n    }\\n\\n    coord += offset;\\n\\n    return coord;\\n}\\n\\nvoid main(void)\\n{\\n\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = twist(coord);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord );\\n\\n}\\n\";\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/twist.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [radius=200] The radius of the twist.\n * @param {number} [angle=4] The angle of the twist.\n * @param {number} [padding=20] Padding for filter area.\n */\nvar TwistFilter = /*@__PURE__*/(function (superclass) {\n    function TwistFilter(radius, angle, padding) {\n        if ( radius === void 0 ) radius = 200;\n        if ( angle === void 0 ) angle = 4;\n        if ( padding === void 0 ) padding = 20;\n\n        superclass.call(this, vertex, fragment);\n\n        this.radius = radius;\n        this.angle = angle;\n        this.padding = padding;\n    }\n\n    if ( superclass ) TwistFilter.__proto__ = superclass;\n    TwistFilter.prototype = Object.create( superclass && superclass.prototype );\n    TwistFilter.prototype.constructor = TwistFilter;\n\n    var prototypeAccessors = { offset: { configurable: true },radius: { configurable: true },angle: { configurable: true } };\n\n    /**\n     * This point describes the the offset of the twist.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.offset.get = function () {\n        return this.uniforms.offset;\n    };\n    prototypeAccessors.offset.set = function (value) {\n        this.uniforms.offset = value;\n    };\n\n    /**\n     * The radius of the twist.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    /**\n     * The angle of the twist.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.angle.get = function () {\n        return this.uniforms.angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this.uniforms.angle = value;\n    };\n\n    Object.defineProperties( TwistFilter.prototype, prototypeAccessors );\n\n    return TwistFilter;\n}(Filter));\n\nexport { TwistFilter };\n//# sourceMappingURL=filter-twist.esm.js.map\n","/*!\n * @pixi/filter-zoom-blur - v2.7.0\n * Compiled Tue, 09 Apr 2019 03:51:57 UTC\n *\n * @pixi/filter-zoom-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from 'pixi.js';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uCenter;\\nuniform float uStrength;\\nuniform float uInnerRadius;\\nuniform float uRadius;\\n\\nconst float MAX_KERNEL_SIZE = 32.0;\\n\\n// author: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\\nhighp float rand(vec2 co, float seed) {\\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n    highp float dt = dot(co + seed, vec2(a, b)), sn = mod(dt, 3.14159);\\n    return fract(sin(sn) * c + seed);\\n}\\n\\nvoid main() {\\n\\n    float minGradient = uInnerRadius * 0.3;\\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\\n\\n    float gradient = uRadius * 0.3;\\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\\n\\n    float countLimit = MAX_KERNEL_SIZE;\\n\\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\\n\\n    float strength = uStrength;\\n\\n    float delta = 0.0;\\n    float gap;\\n    if (dist < innerRadius) {\\n        delta = innerRadius - dist;\\n        gap = minGradient;\\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\\n        delta = dist - radius;\\n        gap = gradient;\\n    }\\n\\n    if (delta > 0.0) {\\n        float normalCount = gap / filterArea.x;\\n        delta = (normalCount - delta) / normalCount;\\n        countLimit *= delta;\\n        strength *= delta;\\n        if (countLimit < 1.0)\\n        {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n    }\\n\\n    // randomize the lookup values to hide the fixed number of samples\\n    float offset = rand(vTextureCoord, 0.0);\\n\\n    float total = 0.0;\\n    vec4 color = vec4(0.0);\\n\\n    dir *= strength;\\n\\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\\n        float weight = 4.0 * (percent - percent * percent);\\n        vec2 p = vTextureCoord + dir * percent;\\n        vec4 sample = texture2D(uSampler, p);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample * weight;\\n        total += weight;\\n\\n        if (t > countLimit){\\n            break;\\n        }\\n    }\\n\\n    color /= total;\\n    // switch back from pre-multiplied alpha\\n    // color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * The ZoomFilter applies a Zoom blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/zoom-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [strength=0.1] Sets the strength of the zoom blur effect\n * @param {PIXI.Point|number[]} [center=[0,0]] The center of the zoom.\n * @param {number} [innerRadius=0] The inner radius of zoom. The part in inner circle won't apply zoom blur effect.\n * @param {number} [radius=-1] See `radius` property.\n */\nvar ZoomBlurFilter = /*@__PURE__*/(function (superclass) {\n    function ZoomBlurFilter(strength, center, innerRadius, radius) {\n        if ( strength === void 0 ) strength = 0.1;\n        if ( center === void 0 ) center = [0, 0];\n        if ( innerRadius === void 0 ) innerRadius = 0;\n        if ( radius === void 0 ) radius = -1;\n\n        superclass.call(this, vertex, fragment);\n\n        this.center = center;\n        this.strength = strength;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n    }\n\n    if ( superclass ) ZoomBlurFilter.__proto__ = superclass;\n    ZoomBlurFilter.prototype = Object.create( superclass && superclass.prototype );\n    ZoomBlurFilter.prototype.constructor = ZoomBlurFilter;\n\n    var prototypeAccessors = { center: { configurable: true },strength: { configurable: true },innerRadius: { configurable: true },radius: { configurable: true } };\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.uCenter;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.uCenter = value;\n    };\n\n    /**\n     * Intensity of the zoom effect.\n     *\n     * @member {number}\n     * @default 0.1\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.uStrength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.uStrength = value;\n    };\n\n    /**\n     * Radius of the inner region not effected by blur.\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.innerRadius.get = function () {\n        return this.uniforms.uInnerRadius;\n    };\n    prototypeAccessors.innerRadius.set = function (value) {\n        this.uniforms.uInnerRadius = value;\n    };\n\n    /**\n     * Outer radius of the effect. The default value is `-1`.\n     * `< 0.0` means it's infinity.\n     *\n     * @member {number}\n     * @default -1\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.uRadius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        if (value < 0 || value === Infinity) {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    };\n\n    Object.defineProperties( ZoomBlurFilter.prototype, prototypeAccessors );\n\n    return ZoomBlurFilter;\n}(Filter));\n\nexport { ZoomBlurFilter };\n//# sourceMappingURL=filter-zoom-blur.esm.js.map\n"],"names":["Filter","fragment","vertex","Point","fragment$1","settings","DEG_TO_RAD","utils","filters","BLEND_MODES","Texture","SCALE_MODES","Matrix"],"mappings":"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"}