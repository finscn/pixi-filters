{"version":3,"file":"pixi-filters.js","sources":["../../filters/adjustment/lib/filter-adjustment.es.js","../../filters/advanced-bloom/lib/filter-advanced-bloom.es.js","../../filters/ascii/lib/filter-ascii.es.js","../../filters/bloom/lib/filter-bloom.es.js","../../filters/bulge-pinch/lib/filter-bulge-pinch.es.js","../../filters/color-replace/lib/filter-color-replace.es.js","../../filters/convolution/lib/filter-convolution.es.js","../../filters/cross-hatch/lib/filter-cross-hatch.es.js","../../filters/crt/lib/filter-crt.es.js","../../filters/dot/lib/filter-dot.es.js","../../filters/drop-shadow/lib/filter-drop-shadow.es.js","../../filters/emboss/lib/filter-emboss.es.js","../../filters/glitch/lib/filter-glitch.es.js","../../filters/glow/lib/filter-glow.es.js","../../filters/godray/lib/filter-godray.es.js","../../filters/kawase-blur/lib/filter-kawase-blur.es.js","../../filters/motion-blur/lib/filter-motion-blur.es.js","../../filters/multi-color-replace/lib/filter-multi-color-replace.es.js","../../filters/old-film/lib/filter-old-film.es.js","../../filters/outline/lib/filter-outline.es.js","../../filters/pixelate/lib/filter-pixelate.es.js","../../filters/radial-blur/lib/filter-radial-blur.es.js","../../filters/reflection/lib/filter-reflection.es.js","../../filters/rgb-split/lib/filter-rgb-split.es.js","../../filters/shockwave/lib/filter-shockwave.es.js","../../filters/simple-lightmap/lib/filter-simple-lightmap.es.js","../../filters/tilt-shift/lib/filter-tilt-shift.es.js","../../filters/twist/lib/filter-twist.es.js","../../filters/zoom-blur/lib/filter-zoom-blur.es.js"],"sourcesContent":["/*!\n * @pixi/filter-adjustment - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-adjustment is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float gamma;\\nuniform float contrast;\\nuniform float saturation;\\nuniform float brightness;\\nuniform float red;\\nuniform float green;\\nuniform float blue;\\nuniform float alpha;\\n\\nvoid main(void)\\n{\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    if (c.a > 0.0) {\\n        c.rgb /= c.a;\\n\\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\\n        rgb.r *= red;\\n        rgb.g *= green;\\n        rgb.b *= blue;\\n        c.rgb = rgb * brightness;\\n\\n        c.rgb *= c.a;\\n    }\\n\\n    gl_FragColor = c * alpha;\\n}\\n\",AdjustmentFilter=function(t){function r(r){t.call(this,vertex,fragment),Object.assign(this,{gamma:1,saturation:1,contrast:1,brightness:1,red:1,green:1,blue:1,alpha:1},r)}return t&&(r.__proto__=t),r.prototype=Object.create(t&&t.prototype),r.prototype.constructor=r,r.prototype.apply=function(t,r,n,e){this.uniforms.gamma=Math.max(this.gamma,1e-4),this.uniforms.saturation=this.saturation,this.uniforms.contrast=this.contrast,this.uniforms.brightness=this.brightness,this.uniforms.red=this.red,this.uniforms.green=this.green,this.uniforms.blue=this.blue,this.uniforms.alpha=this.alpha,t.applyFilter(this,r,n,e)},r}(PIXI.Filter);PIXI.filters.AdjustmentFilter=AdjustmentFilter;export{AdjustmentFilter};\n//# sourceMappingURL=filter-adjustment.es.js.map\n","/*!\n * @pixi/filter-advanced-bloom - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-advanced-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform float threshold;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    // A simple & fast algorithm for getting brightness.\\n    // It's inaccuracy , but good enought for this feature.\\n    float _max = max(max(color.r, color.g), color.b);\\n    float _min = min(min(color.r, color.g), color.b);\\n    float brightness = (_max + _min) * 0.5;\\n\\n    if(brightness > threshold) {\\n        gl_FragColor = color;\\n    } else {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n}\\n\",ExtractBrightnessFilter=function(e){function t(t){void 0===t&&(t=.5),e.call(this,vertex,fragment),this.threshold=t}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var r={threshold:{configurable:!0}};return r.threshold.get=function(){return this.uniforms.threshold},r.threshold.set=function(e){this.uniforms.threshold=e},Object.defineProperties(t.prototype,r),t}(PIXI.Filter),fragment$1=\"uniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D bloomTexture;\\nuniform float bloomScale;\\nuniform float brightness;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    color.rgb *= brightness;\\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\\n    bloomColor.rgb *= bloomScale;\\n    gl_FragColor = color + bloomColor;\\n}\\n\",AdvancedBloomFilter=function(e){function t(t){e.call(this,vertex,fragment$1),\"number\"==typeof t&&(t={threshold:t}),t=Object.assign({threshold:.5,bloomScale:1,brightness:1,kernels:null,blur:8,quality:4,pixelSize:1,resolution:PIXI.settings.RESOLUTION},t),this.bloomScale=t.bloomScale,this.brightness=t.brightness;var r=t.kernels,o=t.blur,i=t.quality,n=t.pixelSize,l=t.resolution;this._extractFilter=new ExtractBrightnessFilter(t.threshold),this._extractFilter.resolution=l;var s=PIXI.filters.KawaseBlurFilter;this._blurFilter=r?new s(r):new s(o,i),this.pixelSize=n,this.resolution=l}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var r={resolution:{configurable:!0},threshold:{configurable:!0},blur:{configurable:!0},kernels:{configurable:!0},quality:{configurable:!0},pixelSize:{configurable:!0}};return t.prototype.apply=function(e,t,r,o,i){var n=e.getRenderTarget(!0);this._extractFilter.apply(e,t,n,!0,i);var l=e.getRenderTarget(!0);this._blurFilter.apply(e,n,l,!0,i),this.uniforms.bloomScale=this.bloomScale,this.uniforms.brightness=this.brightness,this.uniforms.bloomTexture=l,e.applyFilter(this,t,r,o),e.returnRenderTarget(l),e.returnRenderTarget(n)},r.resolution.get=function(){return this._resolution},r.resolution.set=function(e){this._resolution=e,this._blurFilter&&(this._blurFilter.resolution=e)},r.threshold.get=function(){return this._extractFilter.threshold},r.threshold.set=function(e){this._extractFilter.threshold=e},r.blur.get=function(){return this._blurFilter.blur},r.blur.set=function(e){this._blurFilter.blur=e},r.kernels.get=function(){return this._blurFilter.kernels},r.kernels.set=function(e){this._blurFilter.kernels=e},r.quality.get=function(){return this._blurFilter.quality},r.quality.set=function(e){this._blurFilter.quality=e},r.pixelSize.get=function(){return this._blurFilter.pixelSize},r.pixelSize.set=function(e){this._blurFilter.pixelSize=e},Object.defineProperties(t.prototype,r),t}(PIXI.Filter);PIXI.filters.AdvancedBloomFilter=AdvancedBloomFilter;export{AdvancedBloomFilter};\n//# sourceMappingURL=filter-advanced-bloom.es.js.map\n","/*!\n * @pixi/filter-ascii - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-ascii is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform float pixelSize;\\nuniform sampler2D uSampler;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n    return floor( coord / size ) * size;\\n}\\n\\nvec2 getMod(vec2 coord, vec2 size)\\n{\\n    return mod( coord , size) / size;\\n}\\n\\nfloat character(float n, vec2 p)\\n{\\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\\n    if (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y)\\n    {\\n        if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\\n    }\\n    return 0.0;\\n}\\n\\nvoid main()\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    // get the rounded color..\\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\\n    pixCoord = unmapCoord(pixCoord);\\n\\n    vec4 color = texture2D(uSampler, pixCoord);\\n\\n    // determine the character to use\\n    float gray = (color.r + color.g + color.b) / 3.0;\\n\\n    float n =  65536.0;             // .\\n    if (gray > 0.2) n = 65600.0;    // :\\n    if (gray > 0.3) n = 332772.0;   // *\\n    if (gray > 0.4) n = 15255086.0; // o\\n    if (gray > 0.5) n = 23385164.0; // &\\n    if (gray > 0.6) n = 15252014.0; // 8\\n    if (gray > 0.7) n = 13199452.0; // @\\n    if (gray > 0.8) n = 11512810.0; // #\\n\\n    // get the mod..\\n    vec2 modd = getMod(coord, vec2(pixelSize));\\n\\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\\n\\n}\",AsciiFilter=function(e){function n(n){void 0===n&&(n=8),e.call(this,vertex,fragment),this.size=n}e&&(n.__proto__=e),(n.prototype=Object.create(e&&e.prototype)).constructor=n;var r={size:{configurable:!0}};return r.size.get=function(){return this.uniforms.pixelSize},r.size.set=function(e){this.uniforms.pixelSize=e},Object.defineProperties(n.prototype,r),n}(PIXI.Filter);PIXI.filters.AsciiFilter=AsciiFilter;export{AsciiFilter};\n//# sourceMappingURL=filter-ascii.es.js.map\n","/*!\n * @pixi/filter-bloom - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar ref=PIXI.filters,BlurXFilter=ref.BlurXFilter,BlurYFilter=ref.BlurYFilter,AlphaFilter=ref.AlphaFilter,BloomFilter=function(r){function t(t,l,e,i){void 0===t&&(t=2),void 0===l&&(l=4),void 0===e&&(e=PIXI.settings.RESOLUTION),void 0===i&&(i=5),r.call(this);var u,o;\"number\"==typeof t?(u=t,o=t):t instanceof PIXI.Point?(u=t.x,o=t.y):Array.isArray(t)&&(u=t[0],o=t[1]),this.blurXFilter=new BlurXFilter(u,l,e,i),this.blurYFilter=new BlurYFilter(o,l,e,i),this.blurYFilter.blendMode=PIXI.BLEND_MODES.SCREEN,this.defaultFilter=new AlphaFilter}r&&(t.__proto__=r),(t.prototype=Object.create(r&&r.prototype)).constructor=t;var l={blur:{configurable:!0},blurX:{configurable:!0},blurY:{configurable:!0}};return t.prototype.apply=function(r,t,l){var e=r.getRenderTarget(!0);this.defaultFilter.apply(r,t,l),this.blurXFilter.apply(r,t,e),this.blurYFilter.apply(r,e,l),r.returnRenderTarget(e)},l.blur.get=function(){return this.blurXFilter.blur},l.blur.set=function(r){this.blurXFilter.blur=this.blurYFilter.blur=r},l.blurX.get=function(){return this.blurXFilter.blur},l.blurX.set=function(r){this.blurXFilter.blur=r},l.blurY.get=function(){return this.blurYFilter.blur},l.blurY.set=function(r){this.blurYFilter.blur=r},Object.defineProperties(t.prototype,l),t}(PIXI.Filter);PIXI.filters.BloomFilter=BloomFilter;export{BloomFilter};\n//# sourceMappingURL=filter-bloom.es.js.map\n","/*!\n * @pixi/filter-bulge-pinch - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-bulge-pinch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"uniform float radius;\\nuniform float strength;\\nuniform vec2 center;\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nvoid main()\\n{\\n    vec2 coord = vTextureCoord * filterArea.xy;\\n    coord -= center * dimensions.xy;\\n    float distance = length(coord);\\n    if (distance < radius) {\\n        float percent = distance / radius;\\n        if (strength > 0.0) {\\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\\n        } else {\\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\\n        }\\n    }\\n    coord += center * dimensions.xy;\\n    coord /= filterArea.xy;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    gl_FragColor = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        gl_FragColor *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n}\\n\",BulgePinchFilter=function(e){function r(r,n,t){e.call(this,vertex,fragment),this.center=r||[.5,.5],this.radius=n||100,this.strength=t||1}e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r;var n={radius:{configurable:!0},strength:{configurable:!0},center:{configurable:!0}};return r.prototype.apply=function(e,r,n,t){this.uniforms.dimensions[0]=r.sourceFrame.width,this.uniforms.dimensions[1]=r.sourceFrame.height,e.applyFilter(this,r,n,t)},n.radius.get=function(){return this.uniforms.radius},n.radius.set=function(e){this.uniforms.radius=e},n.strength.get=function(){return this.uniforms.strength},n.strength.set=function(e){this.uniforms.strength=e},n.center.get=function(){return this.uniforms.center},n.center.set=function(e){this.uniforms.center=e},Object.defineProperties(r.prototype,n),r}(PIXI.Filter);PIXI.filters.BulgePinchFilter=BulgePinchFilter;export{BulgePinchFilter};\n//# sourceMappingURL=filter-bulge-pinch.es.js.map\n","/*!\n * @pixi/filter-color-replace - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec3 originalColor;\\nuniform vec3 newColor;\\nuniform float epsilon;\\nvoid main(void) {\\n    vec4 currentColor = texture2D(texture, vTextureCoord);\\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\\n    float colorDistance = length(colorDiff);\\n    float doReplace = step(colorDistance, epsilon);\\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\\n}\\n\",ColorReplaceFilter=function(o){function r(r,e,n){void 0===r&&(r=16711680),void 0===e&&(e=0),void 0===n&&(n=.4),o.call(this,vertex,fragment),this.originalColor=r,this.newColor=e,this.epsilon=n}o&&(r.__proto__=o),(r.prototype=Object.create(o&&o.prototype)).constructor=r;var e={originalColor:{configurable:!0},newColor:{configurable:!0},epsilon:{configurable:!0}};return e.originalColor.set=function(o){var r=this.uniforms.originalColor;\"number\"==typeof o?(PIXI.utils.hex2rgb(o,r),this._originalColor=o):(r[0]=o[0],r[1]=o[1],r[2]=o[2],this._originalColor=PIXI.utils.rgb2hex(r))},e.originalColor.get=function(){return this._originalColor},e.newColor.set=function(o){var r=this.uniforms.newColor;\"number\"==typeof o?(PIXI.utils.hex2rgb(o,r),this._newColor=o):(r[0]=o[0],r[1]=o[1],r[2]=o[2],this._newColor=PIXI.utils.rgb2hex(r))},e.newColor.get=function(){return this._newColor},e.epsilon.set=function(o){this.uniforms.epsilon=o},e.epsilon.get=function(){return this.uniforms.epsilon},Object.defineProperties(r.prototype,e),r}(PIXI.Filter);PIXI.filters.ColorReplaceFilter=ColorReplaceFilter;export{ColorReplaceFilter};\n//# sourceMappingURL=filter-color-replace.es.js.map\n","/*!\n * @pixi/filter-convolution - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-convolution is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying mediump vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec2 texelSize;\\nuniform float matrix[9];\\n\\nvoid main(void)\\n{\\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\\n\\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\\n\\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\\n\\n   gl_FragColor =\\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\\n\\n   gl_FragColor.a = c22.a;\\n}\\n\",ConvolutionFilter=function(e){function t(t,r,o){e.call(this,vertex,fragment),this.matrix=t,this.width=r,this.height=o}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var r={matrix:{configurable:!0},width:{configurable:!0},height:{configurable:!0}};return r.matrix.get=function(){return this.uniforms.matrix},r.matrix.set=function(e){this.uniforms.matrix=new Float32Array(e)},r.width.get=function(){return 1/this.uniforms.texelSize[0]},r.width.set=function(e){this.uniforms.texelSize[0]=1/e},r.height.get=function(){return 1/this.uniforms.texelSize[1]},r.height.set=function(e){this.uniforms.texelSize[1]=1/e},Object.defineProperties(t.prototype,r),t}(PIXI.Filter);PIXI.filters.ConvolutionFilter=ConvolutionFilter;export{ConvolutionFilter};\n//# sourceMappingURL=filter-convolution.es.js.map\n","/*!\n * @pixi/filter-cross-hatch - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-cross-hatch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\\n\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n    if (lum < 1.00)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.75)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.50)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.3)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n}\\n\",CrossHatchFilter=function(r){function o(){r.call(this,vertex,fragment)}return r&&(o.__proto__=r),o.prototype=Object.create(r&&r.prototype),o.prototype.constructor=o,o}(PIXI.Filter);PIXI.filters.CrossHatchFilter=CrossHatchFilter;export{CrossHatchFilter};\n//# sourceMappingURL=filter-cross-hatch.es.js.map\n","/*!\n * @pixi/filter-crt - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-crt is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nconst float SQRT_2 = 1.414213;\\n\\nconst float light = 1.0;\\n\\nuniform float curvature;\\nuniform float lineWidth;\\nuniform float lineContrast;\\nuniform bool verticalLine;\\nuniform float noise;\\nuniform float noiseSize;\\n\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\n\\nuniform float seed;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    vec2 dir = vec2(coord - vec2(0.5, 0.5));\\n\\n    float _c = curvature > 0. ? curvature : 1.;\\n    float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\\n    vec2 uv = dir * k;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 rgb = gl_FragColor.rgb;\\n\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        rgb += _noise * noise;\\n    }\\n\\n    if (lineWidth > 0.0) {\\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\\n        rgb *= j;\\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\\n        rgb *= 0.99 + ceil(segment) * 0.015;\\n    }\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    gl_FragColor.rgb = rgb;\\n}\\n\",CRTFilter=function(n){function i(i){n.call(this,vertex,fragment),this.time=0,this.seed=0,Object.assign(this,{curvature:1,lineWidth:1,lineContrast:.25,verticalLine:!1,noise:0,noiseSize:1,seed:0,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3,time:0},i)}n&&(i.__proto__=n),(i.prototype=Object.create(n&&n.prototype)).constructor=i;var t={curvature:{configurable:!0},lineWidth:{configurable:!0},lineContrast:{configurable:!0},verticalLine:{configurable:!0},noise:{configurable:!0},noiseSize:{configurable:!0},vignetting:{configurable:!0},vignettingAlpha:{configurable:!0},vignettingBlur:{configurable:!0}};return i.prototype.apply=function(n,i,t,e){this.uniforms.dimensions[0]=i.sourceFrame.width,this.uniforms.dimensions[1]=i.sourceFrame.height,this.uniforms.seed=this.seed,this.uniforms.time=this.time,n.applyFilter(this,i,t,e)},t.curvature.set=function(n){this.uniforms.curvature=n},t.curvature.get=function(){return this.uniforms.curvature},t.lineWidth.set=function(n){this.uniforms.lineWidth=n},t.lineWidth.get=function(){return this.uniforms.lineWidth},t.lineContrast.set=function(n){this.uniforms.lineContrast=n},t.lineContrast.get=function(){return this.uniforms.lineContrast},t.verticalLine.set=function(n){this.uniforms.verticalLine=n},t.verticalLine.get=function(){return this.uniforms.verticalLine},t.noise.set=function(n){this.uniforms.noise=n},t.noise.get=function(){return this.uniforms.noise},t.noiseSize.set=function(n){this.uniforms.noiseSize=n},t.noiseSize.get=function(){return this.uniforms.noiseSize},t.vignetting.set=function(n){this.uniforms.vignetting=n},t.vignetting.get=function(){return this.uniforms.vignetting},t.vignettingAlpha.set=function(n){this.uniforms.vignettingAlpha=n},t.vignettingAlpha.get=function(){return this.uniforms.vignettingAlpha},t.vignettingBlur.set=function(n){this.uniforms.vignettingBlur=n},t.vignettingBlur.get=function(){return this.uniforms.vignettingBlur},Object.defineProperties(i.prototype,t),i}(PIXI.Filter);PIXI.filters.CRTFilter=CRTFilter;export{CRTFilter};\n//# sourceMappingURL=filter-crt.es.js.map\n","/*!\n * @pixi/filter-dot - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-dot is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;\\n\\nuniform float angle;\\nuniform float scale;\\n\\nfloat pattern()\\n{\\n   float s = sin(angle), c = cos(angle);\\n   vec2 tex = vTextureCoord * filterArea.xy;\\n   vec2 point = vec2(\\n       c * tex.x - s * tex.y,\\n       s * tex.x + c * tex.y\\n   ) * scale;\\n   return (sin(point.x) * sin(point.y)) * 4.0;\\n}\\n\\nvoid main()\\n{\\n   vec4 color = texture2D(uSampler, vTextureCoord);\\n   float average = (color.r + color.g + color.b) / 3.0;\\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\\n}\\n\",DotFilter=function(e){function n(n,t){void 0===n&&(n=1),void 0===t&&(t=5),e.call(this,vertex,fragment),this.scale=n,this.angle=t}e&&(n.__proto__=e),(n.prototype=Object.create(e&&e.prototype)).constructor=n;var t={scale:{configurable:!0},angle:{configurable:!0}};return t.scale.get=function(){return this.uniforms.scale},t.scale.set=function(e){this.uniforms.scale=e},t.angle.get=function(){return this.uniforms.angle},t.angle.set=function(e){this.uniforms.angle=e},Object.defineProperties(n.prototype,t),n}(PIXI.Filter);PIXI.filters.DotFilter=DotFilter;export{DotFilter};\n//# sourceMappingURL=filter-dot.es.js.map\n","/*!\n * @pixi/filter-drop-shadow - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-drop-shadow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform vec3 color;\\nvoid main(void){\\n    vec4 sample = texture2D(uSampler, vTextureCoord);\\n\\n    // Un-premultiply alpha before applying the color\\n    if (sample.a > 0.0) {\\n        sample.rgb /= sample.a;\\n    }\\n\\n    // Premultiply alpha again\\n    sample.rgb = color.rgb * sample.a;\\n\\n    // alpha user alpha\\n    sample *= alpha;\\n\\n    gl_FragColor = sample;\\n}\",DropShadowFilter=function(t){function r(r,e,i,n,a){void 0===r&&(r=45),void 0===e&&(e=5),void 0===i&&(i=2),void 0===n&&(n=0),void 0===a&&(a=.5),t.call(this),this.tintFilter=new PIXI.Filter(vertex,fragment),this.blurFilter=new PIXI.filters.BlurFilter,this.blurFilter.blur=i,this.targetTransform=new PIXI.Matrix,this.rotation=r,this.padding=e,this.distance=e,this.alpha=a,this.color=n}t&&(r.__proto__=t),(r.prototype=Object.create(t&&t.prototype)).constructor=r;var e={distance:{configurable:!0},rotation:{configurable:!0},blur:{configurable:!0},alpha:{configurable:!0},color:{configurable:!0}};return r.prototype.apply=function(t,r,e,i){var n=t.getRenderTarget();n.transform=this.targetTransform,this.tintFilter.apply(t,r,n,!0),this.blurFilter.apply(t,n,e),t.applyFilter(this,r,e,i),n.transform=null,t.returnRenderTarget(n)},r.prototype._updatePadding=function(){this.padding=this.distance+2*this.blur},r.prototype._updateTargetTransform=function(){this.targetTransform.tx=this.distance*Math.cos(this.angle),this.targetTransform.ty=this.distance*Math.sin(this.angle)},e.distance.get=function(){return this._distance},e.distance.set=function(t){this._distance=t,this._updatePadding(),this._updateTargetTransform()},e.rotation.get=function(){return this.angle/PIXI.DEG_TO_RAD},e.rotation.set=function(t){this.angle=t*PIXI.DEG_TO_RAD,this._updateTargetTransform()},e.blur.get=function(){return this.blurFilter.blur},e.blur.set=function(t){this.blurFilter.blur=t,this._updatePadding()},e.alpha.get=function(){return this.tintFilter.uniforms.alpha},e.alpha.set=function(t){this.tintFilter.uniforms.alpha=t},e.color.get=function(){return PIXI.utils.rgb2hex(this.tintFilter.uniforms.color)},e.color.set=function(t){PIXI.utils.hex2rgb(t,this.tintFilter.uniforms.color)},Object.defineProperties(r.prototype,e),r}(PIXI.Filter);PIXI.filters.DropShadowFilter=DropShadowFilter;export{DropShadowFilter};\n//# sourceMappingURL=filter-drop-shadow.es.js.map\n","/*!\n * @pixi/filter-emboss - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-emboss is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float strength;\\nuniform vec4 filterArea;\\n\\n\\nvoid main(void)\\n{\\n\\tvec2 onePixel = vec2(1.0 / filterArea);\\n\\n\\tvec4 color;\\n\\n\\tcolor.rgb = vec3(0.5);\\n\\n\\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\\n\\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\\n\\n\\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\\n\\n\\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\\n\\n\\tgl_FragColor = vec4(color.rgb * alpha, alpha);\\n}\\n\",EmbossFilter=function(e){function t(t){void 0===t&&(t=5),e.call(this,vertex,fragment),this.strength=t}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var r={strength:{configurable:!0}};return r.strength.get=function(){return this.uniforms.strength},r.strength.set=function(e){this.uniforms.strength=e},Object.defineProperties(t.prototype,r),t}(PIXI.Filter);PIXI.filters.EmbossFilter=EmbossFilter;export{EmbossFilter};\n//# sourceMappingURL=filter-emboss.es.js.map\n","/*!\n * @pixi/filter-glitch - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-glitch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"// precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\nuniform float aspect;\\n\\nuniform sampler2D displacementMap;\\nuniform float offset;\\nuniform float sinDir;\\nuniform float cosDir;\\nuniform int fillMode;\\n\\nuniform float seed;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nconst int TRANSPARENT = 0;\\nconst int ORIGINAL = 1;\\nconst int LOOP = 2;\\nconst int CLAMP = 3;\\nconst int MIRROR = 4;\\n\\nvoid main(void)\\n{\\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\\n\\n    if (coord.x > 1.0 || coord.y > 1.0) {\\n        return;\\n    }\\n\\n    float cx = coord.x - 0.5;\\n    float cy = (coord.y - 0.5) * aspect;\\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\\n\\n    // displacementMap: repeat\\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\\n\\n    // displacementMap: mirror\\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\\n\\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\\n\\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\\n\\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\\n\\n    if (fillMode == CLAMP) {\\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    } else {\\n        if( coord.x > filterClamp.z ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.x -= filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x = filterClamp.z * 2.0 - coord.x;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        } else if( coord.x < filterClamp.x ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.x += filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x *= -filterClamp.z;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        }\\n\\n        if( coord.y > filterClamp.w ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.y -= filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y = filterClamp.w * 2.0 - coord.y;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        } else if( coord.y < filterClamp.y ) {\\n            if (fillMode == ORIGINAL) {\\n                gl_FragColor = texture2D(uSampler, vTextureCoord);\\n                return;\\n            } else if (fillMode == LOOP) {\\n                coord.y += filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y *= -filterClamp.w;\\n            } else {\\n                gl_FragColor = vec4(0., 0., 0., 0.);\\n                return;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\\n    gl_FragColor.a = texture2D(uSampler, coord).a;\\n}\\n\",GlitchFilter=function(e){function i(i){void 0===i&&(i={}),e.call(this,vertex,fragment),i=Object.assign({slices:5,offset:100,direction:0,fillMode:0,average:!1,seed:0,red:[0,0],green:[0,0],blue:[0,0],minSize:8,sampleSize:512},i),this.direction=i.direction,this.red=i.red,this.green=i.green,this.blue=i.blue,this.offset=i.offset,this.fillMode=i.fillMode,this.average=i.average,this.seed=i.seed,this.minSize=i.minSize,this.sampleSize=i.sampleSize,this._canvas=document.createElement(\"canvas\"),this._canvas.width=4,this._canvas.height=this.sampleSize,this.texture=PIXI.Texture.fromCanvas(this._canvas,PIXI.SCALE_MODES.NEAREST),this._slices=0,this.slices=i.slices}e&&(i.__proto__=e),(i.prototype=Object.create(e&&e.prototype)).constructor=i;var t={sizes:{configurable:!0},offsets:{configurable:!0},slices:{configurable:!0},direction:{configurable:!0},red:{configurable:!0},green:{configurable:!0},blue:{configurable:!0}};return i.prototype.apply=function(e,i,t,r){var n=i.sourceFrame.width,s=i.sourceFrame.height;this.uniforms.dimensions[0]=n,this.uniforms.dimensions[1]=s,this.uniforms.aspect=s/n,this.uniforms.seed=this.seed,this.uniforms.offset=this.offset,this.uniforms.fillMode=this.fillMode,e.applyFilter(this,i,t,r)},i.prototype._randomizeSizes=function(){var e=this._sizes,i=this._slices-1,t=this.sampleSize,r=Math.min(this.minSize/t,.9/this._slices);if(this.average){for(var n=this._slices,s=1,o=0;o<i;o++){var l=s/(n-o),f=Math.max(l*(1-.6*Math.random()),r);e[o]=f,s-=f}e[i]=s}else{for(var a=1,c=Math.sqrt(1/this._slices),u=0;u<i;u++){var d=Math.max(c*a*Math.random(),r);e[u]=d,a-=d}e[i]=a}this.shuffle()},i.prototype.shuffle=function(){for(var e=this._sizes,i=this._slices-1;i>0;i--){var t=Math.random()*i>>0,r=e[i];e[i]=e[t],e[t]=r}},i.prototype._randomizeOffsets=function(){for(var e=0;e<this._slices;e++)this._offsets[e]=Math.random()*(Math.random()<.5?-1:1)},i.prototype.refresh=function(){this._randomizeSizes(),this._randomizeOffsets(),this.redraw()},i.prototype.redraw=function(){var e=this.sampleSize,i=this.texture,t=this._canvas.getContext(\"2d\");t.clearRect(0,0,8,e);for(var r,n=0,s=0;s<this._slices;s++){r=Math.floor(256*this._offsets[s]);var o=this._sizes[s]*e,l=r>0?r:0,f=r<0?-r:0;t.fillStyle=\"rgba(\"+l+\", \"+f+\", 0, 1)\",t.fillRect(0,n>>0,e,o+1>>0),n+=o}i._updateID++,i.baseTexture.emit(\"update\",i.baseTexture),this.uniforms.displacementMap=i},t.sizes.set=function(e){for(var i=Math.min(this._slices,e.length),t=0;t<i;t++)this._sizes[t]=e[t]},t.sizes.get=function(){return this._sizes},t.offsets.set=function(e){for(var i=Math.min(this._slices,e.length),t=0;t<i;t++)this._offsets[t]=e[t]},t.offsets.get=function(){return this._offsets},t.slices.get=function(){return this._slices},t.slices.set=function(e){this._slices!==e&&(this._slices=e,this.uniforms.slices=e,this._sizes=this.uniforms.slicesWidth=new Float32Array(e),this._offsets=this.uniforms.slicesOffset=new Float32Array(e),this.refresh())},t.direction.get=function(){return this._direction},t.direction.set=function(e){if(this._direction!==e){this._direction=e;var i=e*PIXI.DEG_TO_RAD;this.uniforms.sinDir=Math.sin(i),this.uniforms.cosDir=Math.cos(i)}},t.red.get=function(){return this.uniforms.red},t.red.set=function(e){this.uniforms.red=e},t.green.get=function(){return this.uniforms.green},t.green.set=function(e){this.uniforms.green=e},t.blue.get=function(){return this.uniforms.blue},t.blue.set=function(e){this.uniforms.blue=e},i.prototype.destroy=function(){this.texture.destroy(!0),this.texture=null,this._canvas=null,this.red=null,this.green=null,this.blue=null,this._sizes=null,this._offsets=null},Object.defineProperties(i.prototype,t),i}(PIXI.Filter);GlitchFilter.TRANSPARENT=0,GlitchFilter.ORIGINAL=1,GlitchFilter.LOOP=2,GlitchFilter.CLAMP=3,GlitchFilter.MIRROR=4,PIXI.filters.GlitchFilter=GlitchFilter;export{GlitchFilter};\n//# sourceMappingURL=filter-glitch.es.js.map\n","/*!\n * @pixi/filter-glow - v2.4.1\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-glow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uSampler;\\n\\nuniform float distance;\\nuniform float outerStrength;\\nuniform float innerStrength;\\nuniform vec4 glowColor;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nconst float PI = 3.14159265358979323846264;\\n\\nvoid main(void) {\\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float totalAlpha = 0.0;\\n    float maxTotalAlpha = 0.0;\\n    float cosAngle;\\n    float sinAngle;\\n    vec2 displaced;\\n    for (float angle = 0.0; angle <= PI * 2.0; angle += %QUALITY_DIST%) {\\n       cosAngle = cos(angle);\\n       sinAngle = sin(angle);\\n       for (float curDistance = 1.0; curDistance <= %DIST%; curDistance++) {\\n           displaced.x = vTextureCoord.x + cosAngle * curDistance * px.x;\\n           displaced.y = vTextureCoord.y + sinAngle * curDistance * px.y;\\n           curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n           totalAlpha += (distance - curDistance) * curColor.a;\\n           maxTotalAlpha += (distance - curDistance);\\n       }\\n    }\\n    maxTotalAlpha = max(maxTotalAlpha, 0.0001);\\n\\n    ownColor.a = max(ownColor.a, 0.0001);\\n    ownColor.rgb = ownColor.rgb / ownColor.a;\\n    float outerGlowAlpha = (totalAlpha / maxTotalAlpha)  * outerStrength * (1. - ownColor.a);\\n    float innerGlowAlpha = ((maxTotalAlpha - totalAlpha) / maxTotalAlpha) * innerStrength * ownColor.a;\\n    float resultAlpha = (ownColor.a + outerGlowAlpha);\\n    gl_FragColor = vec4(mix(mix(ownColor.rgb, glowColor.rgb, innerGlowAlpha / ownColor.a), glowColor.rgb, outerGlowAlpha / resultAlpha) * resultAlpha, resultAlpha);\\n}\\n\",GlowFilter=function(o){function n(n,t,r,e,l){void 0===n&&(n=10),void 0===t&&(t=4),void 0===r&&(r=0),void 0===e&&(e=16777215),void 0===l&&(l=.1),o.call(this,vertex,fragment.replace(/%QUALITY_DIST%/gi,\"\"+(1/l/n).toFixed(7)).replace(/%DIST%/gi,\"\"+n.toFixed(7))),this.uniforms.glowColor=new Float32Array([0,0,0,1]),this.distance=n,this.color=e,this.outerStrength=t,this.innerStrength=r}o&&(n.__proto__=o),(n.prototype=Object.create(o&&o.prototype)).constructor=n;var t={color:{configurable:!0},distance:{configurable:!0},outerStrength:{configurable:!0},innerStrength:{configurable:!0}};return t.color.get=function(){return PIXI.utils.rgb2hex(this.uniforms.glowColor)},t.color.set=function(o){PIXI.utils.hex2rgb(o,this.uniforms.glowColor)},t.distance.get=function(){return this.uniforms.distance},t.distance.set=function(o){this.uniforms.distance=o},t.outerStrength.get=function(){return this.uniforms.outerStrength},t.outerStrength.set=function(o){this.uniforms.outerStrength=o},t.innerStrength.get=function(){return this.uniforms.innerStrength},t.innerStrength.set=function(o){this.uniforms.innerStrength=o},Object.defineProperties(n.prototype,t),n}(PIXI.Filter);PIXI.filters.GlowFilter=GlowFilter;export{GlowFilter};\n//# sourceMappingURL=filter-glow.es.js.map\n","/*!\n * @pixi/filter-godray - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-godray is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",perlin=\"vec3 mod289(vec3 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 mod289(vec4 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute(vec4 x)\\n{\\n    return mod289(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n    return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec3 fade(vec3 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n    Pi0 = mod289(Pi0);\\n    Pi1 = mod289(Pi1);\\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n    vec4 iz0 = Pi0.zzzz;\\n    vec4 iz1 = Pi1.zzzz;\\n    vec4 ixy = permute(permute(ix) + iy);\\n    vec4 ixy0 = permute(ixy + iz0);\\n    vec4 ixy1 = permute(ixy + iz1);\\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n    gx0 = fract(gx0);\\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n    vec4 sz0 = step(gz0, vec4(0.0));\\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n    gx1 = fract(gx1);\\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n    vec4 sz1 = step(gz1, vec4(0.0));\\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n    g000 *= norm0.x;\\n    g010 *= norm0.y;\\n    g100 *= norm0.z;\\n    g110 *= norm0.w;\\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n    g001 *= norm1.x;\\n    g011 *= norm1.y;\\n    g101 *= norm1.z;\\n    g111 *= norm1.w;\\n    float n000 = dot(g000, Pf0);\\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n    float n111 = dot(g111, Pf1);\\n    vec3 fade_xyz = fade(Pf0);\\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n    return 2.2 * n_xyz;\\n}\\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\\n{\\n    float sum = 0.0;\\n    float sc = 1.0;\\n    float totalgain = 1.0;\\n    for (float i = 0.0; i < 6.0; i++)\\n    {\\n        sum += totalgain * pnoise(P * sc, rep);\\n        sc *= lacunarity;\\n        totalgain *= gain;\\n    }\\n    return abs(sum);\\n}\\n\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform vec2 light;\\nuniform bool parallel;\\nuniform float aspect;\\n\\nuniform float gain;\\nuniform float lacunarity;\\nuniform float time;\\n\\n${perlin}\\n\\nvoid main(void) {\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    float d;\\n\\n    if (parallel) {\\n        float _cos = light.x;\\n        float _sin = light.y;\\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\\n    } else {\\n        float dx = coord.x - light.x / dimensions.x;\\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\\n        d = dy / dis;\\n    }\\n\\n    vec3 dir = vec3(d, d, 0.0);\\n\\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\\n    noise = mix(noise, 0.0, 0.3);\\n    //fade vertically.\\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\\n    mist.a = 1.0;\\n    gl_FragColor += mist;\\n}\\n\",GodrayFilter=function(n){function e(e){n.call(this,vertex,fragment.replace(\"${perlin}\",perlin)),\"number\"==typeof e&&(console.warn(\"GodrayFilter now uses options instead of (angle, gain, lacunarity, time)\"),e={angle:e},void 0!==arguments[1]&&(e.gain=arguments[1]),void 0!==arguments[2]&&(e.lacunarity=arguments[2]),void 0!==arguments[3]&&(e.time=arguments[3])),e=Object.assign({angle:30,gain:.5,lacunarity:2.5,time:0,parallel:!0,center:[0,0]},e),this._angleLight=new PIXI.Point,this.angle=e.angle,this.gain=e.gain,this.lacunarity=e.lacunarity,this.parallel=e.parallel,this.center=e.center,this.time=e.time}n&&(e.__proto__=n),(e.prototype=Object.create(n&&n.prototype)).constructor=e;var t={angle:{configurable:!0},gain:{configurable:!0},lacunarity:{configurable:!0}};return e.prototype.apply=function(n,e,t,i){var o=e.sourceFrame,r=o.width,a=o.height;this.uniforms.light=this.parallel?this._angleLight:this.center,this.uniforms.parallel=this.parallel,this.uniforms.dimensions[0]=r,this.uniforms.dimensions[1]=a,this.uniforms.aspect=a/r,this.uniforms.time=this.time,n.applyFilter(this,e,t,i)},t.angle.get=function(){return this._angle},t.angle.set=function(n){this._angle=n;var e=n*PIXI.DEG_TO_RAD;this._angleLight.x=Math.cos(e),this._angleLight.y=Math.sin(e)},t.gain.get=function(){return this.uniforms.gain},t.gain.set=function(n){this.uniforms.gain=n},t.lacunarity.get=function(){return this.uniforms.lacunarity},t.lacunarity.set=function(n){this.uniforms.lacunarity=n},Object.defineProperties(e.prototype,t),e}(PIXI.Filter);PIXI.filters.GodrayFilter=GodrayFilter;export{GodrayFilter};\n//# sourceMappingURL=filter-godray.es.js.map\n","/*!\n * @pixi/filter-kawase-blur - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-kawase-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\",KawaseBlurFilter=function(e){function t(t,i){void 0===t&&(t=4),void 0===i&&(i=3),e.call(this,vertex,fragment),this._pixelSize=new PIXI.Point,this.pixelSize=1,this._kernels=null,Array.isArray(t)?this.kernels=t:(this._blur=t,this.quality=i)}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var i={kernels:{configurable:!0},pixelSize:{configurable:!0},quality:{configurable:!0},blur:{configurable:!0}};return t.prototype.apply=function(e,t,i,r){var n,o=this.pixelSize.x/t.size.width,s=this.pixelSize.y/t.size.height;if(1===this._quality||0===this._blur)n=this._kernels[0]+.5,this.uniforms.uOffset[0]=n*o,this.uniforms.uOffset[1]=n*s,e.applyFilter(this,t,i,r);else{for(var l,u=e.getRenderTarget(!0),a=t,f=u,x=this._quality-1,h=0;h<x;h++)n=this._kernels[h]+.5,this.uniforms.uOffset[0]=n*o,this.uniforms.uOffset[1]=n*s,e.applyFilter(this,a,f,!0),l=a,a=f,f=l;n=this._kernels[x]+.5,this.uniforms.uOffset[0]=n*o,this.uniforms.uOffset[1]=n*s,e.applyFilter(this,a,i,r),e.returnRenderTarget(u)}},t.prototype._generateKernels=function(){var e=this._blur,t=this._quality,i=[e];if(e>0)for(var r=e,n=e/t,o=1;o<t;o++)r-=n,i.push(r);this._kernels=i},i.kernels.get=function(){return this._kernels},i.kernels.set=function(e){Array.isArray(e)&&e.length>0?(this._kernels=e,this._quality=e.length,this._blur=Math.max.apply(Math,e)):(this._kernels=[0],this._quality=1)},i.pixelSize.set=function(e){\"number\"==typeof e?(this._pixelSize.x=e,this._pixelSize.y=e):Array.isArray(e)?(this._pixelSize.x=e[0],this._pixelSize.y=e[1]):e instanceof PIXI.Point?(this._pixelSize.x=e.x,this._pixelSize.y=e.y):(this._pixelSize.x=1,this._pixelSize.y=1)},i.pixelSize.get=function(){return this._pixelSize},i.quality.get=function(){return this._quality},i.quality.set=function(e){this._quality=Math.max(1,Math.round(e)),this._generateKernels()},i.blur.get=function(){return this._blur},i.blur.set=function(e){this._blur=e,this._generateKernels()},Object.defineProperties(t.prototype,i),t}(PIXI.Filter);PIXI.filters.KawaseBlurFilter=KawaseBlurFilter;export{KawaseBlurFilter};\n//# sourceMappingURL=filter-kawase-blur.es.js.map\n","/*!\n * @pixi/filter-motion-blur - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-motion-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uVelocity;\\nuniform int uKernelSize;\\nuniform float uOffset;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\nconst int ITERATION = MAX_KERNEL_SIZE - 1;\\n\\nvec2 velocity = uVelocity / filterArea.xy;\\n\\n// float kernelSize = min(float(uKernelSize), float(MAX_KERNELSIZE));\\n\\n// In real use-case , uKernelSize < MAX_KERNELSIZE almost always.\\n// So use uKernelSize directly.\\nfloat kernelSize = float(uKernelSize);\\nfloat k = kernelSize - 1.0;\\nfloat offset = -uOffset / length(uVelocity) - 0.5;\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        return;\\n    }\\n\\n    for(int i = 0; i < ITERATION; i++) {\\n        if (i == int(k)) {\\n            break;\\n        }\\n        vec2 bias = velocity * (float(i) / k + offset);\\n        gl_FragColor += texture2D(uSampler, vTextureCoord + bias);\\n    }\\n    gl_FragColor /= kernelSize;\\n}\\n\",MotionBlurFilter=function(e){function t(t,i,n){void 0===t&&(t=[0,0]),void 0===i&&(i=5),void 0===n&&(n=0),e.call(this,vertex,fragment),this._velocity=new PIXI.Point(0,0),this.velocity=t,this.kernelSize=i,this.offset=n}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var i={velocity:{configurable:!0},offset:{configurable:!0}};return t.prototype.apply=function(e,t,i,n){var o=this.velocity,r=o.x,l=o.y;this.uniforms.uKernelSize=0!==r||0!==l?this.kernelSize:0,e.applyFilter(this,t,i,n)},i.velocity.set=function(e){Array.isArray(e)?(this._velocity.x=e[0],this._velocity.y=e[1]):e instanceof PIXI.Point&&(this._velocity.x=e.x,this._velocity.y=e.y),this.uniforms.uVelocity[0]=this._velocity.x,this.uniforms.uVelocity[1]=this._velocity.y},i.velocity.get=function(){return this._velocity},i.offset.set=function(e){this.uniforms.uOffset=e},i.offset.get=function(){return this.uniforms.uOffset},Object.defineProperties(t.prototype,i),t}(PIXI.Filter);PIXI.filters.MotionBlurFilter=MotionBlurFilter;export{MotionBlurFilter};\n//# sourceMappingURL=filter-motion-blur.es.js.map\n","/*!\n * @pixi/filter-multi-color-replace - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-multi-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float epsilon;\\n\\nconst int MAX_COLORS = %maxColors%;\\n\\nuniform vec3 originalColors[MAX_COLORS];\\nuniform vec3 targetColors[MAX_COLORS];\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    float alpha = gl_FragColor.a;\\n    if (alpha < 0.0001)\\n    {\\n      return;\\n    }\\n\\n    vec3 color = gl_FragColor.rgb / alpha;\\n\\n    for(int i = 0; i < MAX_COLORS; i++)\\n    {\\n      vec3 origColor = originalColors[i];\\n      if (origColor.r < 0.0)\\n      {\\n        break;\\n      }\\n      vec3 colorDiff = origColor - color;\\n      if (length(colorDiff) < epsilon)\\n      {\\n        vec3 targetColor = targetColors[i];\\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\\n        return;\\n      }\\n    }\\n}\\n\",MultiColorReplaceFilter=function(o){function r(r,e,n){void 0===e&&(e=.05),void 0===n&&(n=null),n=n||r.length,o.call(this,vertex,fragment.replace(/%maxColors%/g,n)),this.epsilon=e,this._maxColors=n,this._replacements=null,this.uniforms.originalColors=new Float32Array(3*n),this.uniforms.targetColors=new Float32Array(3*n),this.replacements=r}o&&(r.__proto__=o),(r.prototype=Object.create(o&&o.prototype)).constructor=r;var e={replacements:{configurable:!0},maxColors:{configurable:!0},epsilon:{configurable:!0}};return e.replacements.set=function(o){var r=this.uniforms.originalColors,e=this.uniforms.targetColors,n=o.length;if(n>this._maxColors)throw\"Length of replacements (\"+n+\") exceeds the maximum colors length (\"+this._maxColors+\")\";r[3*n]=-1;for(var t=0;t<n;t++){var i=o[t],l=i[0];\"number\"==typeof l?l=PIXI.utils.hex2rgb(l):i[0]=PIXI.utils.rgb2hex(l),r[3*t]=l[0],r[3*t+1]=l[1],r[3*t+2]=l[2];var a=i[1];\"number\"==typeof a?a=PIXI.utils.hex2rgb(a):i[1]=PIXI.utils.rgb2hex(a),e[3*t]=a[0],e[3*t+1]=a[1],e[3*t+2]=a[2]}this._replacements=o},e.replacements.get=function(){return this._replacements},r.prototype.refresh=function(){this.replacements=this._replacements},e.maxColors.get=function(){return this._maxColors},e.epsilon.set=function(o){this.uniforms.epsilon=o},e.epsilon.get=function(){return this.uniforms.epsilon},Object.defineProperties(r.prototype,e),r}(PIXI.Filter);PIXI.filters.MultiColorReplaceFilter=MultiColorReplaceFilter;export{MultiColorReplaceFilter};\n//# sourceMappingURL=filter-multi-color-replace.es.js.map\n","/*!\n * @pixi/filter-old-film - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-old-film is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform float sepia;\\nuniform float noise;\\nuniform float noiseSize;\\nuniform float scratch;\\nuniform float scratchDensity;\\nuniform float scratchWidth;\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\nuniform float seed;\\n\\nconst float SQRT_2 = 1.414213;\\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvec3 Overlay(vec3 src, vec3 dst)\\n{\\n    // if (dst <= 0.5) then: 2 * src * dst\\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\\n}\\n\\n\\nvoid main()\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 color = gl_FragColor.rgb;\\n\\n    if (sepia > 0.0)\\n    {\\n        float gray = (color.x + color.y + color.z) / 3.0;\\n        vec3 grayscale = vec3(gray);\\n\\n        color = Overlay(SEPIA_RGB, grayscale);\\n\\n        color = grayscale + sepia * (color - grayscale);\\n    }\\n\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\\n        dir.y *= dimensions.y / dimensions.x;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    if (scratchDensity > seed && scratch != 0.0)\\n    {\\n        float phase = seed * 256.0;\\n        float s = mod(floor(phase), 2.0);\\n        float dist = 1.0 / scratchDensity;\\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\\n        if (d < seed * 0.6 + 0.4)\\n        {\\n            highp float period = scratchDensity * 10.0;\\n\\n            float xx = coord.x * period + phase;\\n            float aa = abs(mod(xx, 0.5) * 4.0);\\n            float bb = mod(floor(xx / 0.5), 2.0);\\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\\n\\n            float kk = 2.0 * period;\\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\\n            float dh = dw * kk;\\n\\n            float tine = (yy - (2.0 - dh));\\n\\n            if (tine > 0.0) {\\n                float _sign = sign(scratch);\\n\\n                tine = s * tine / period + scratch + 0.1;\\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\\n\\n                color.rgb *= tine;\\n            }\\n        }\\n    }\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\\n        // float _noise = snoise(d) * 0.5;\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        color += _noise * noise;\\n    }\\n\\n    gl_FragColor.rgb = color;\\n}\\n\",OldFilmFilter=function(n){function t(t,i){void 0===i&&(i=0),n.call(this,vertex,fragment),\"number\"==typeof t?(this.seed=t,t=null):this.seed=i,Object.assign(this,{sepia:.3,noise:.3,noiseSize:1,scratch:.5,scratchDensity:.3,scratchWidth:1,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3},t)}n&&(t.__proto__=n),(t.prototype=Object.create(n&&n.prototype)).constructor=t;var i={sepia:{configurable:!0},noise:{configurable:!0},noiseSize:{configurable:!0},scratch:{configurable:!0},scratchDensity:{configurable:!0},scratchWidth:{configurable:!0},vignetting:{configurable:!0},vignettingAlpha:{configurable:!0},vignettingBlur:{configurable:!0}};return t.prototype.apply=function(n,t,i,e){this.uniforms.dimensions[0]=t.sourceFrame.width,this.uniforms.dimensions[1]=t.sourceFrame.height,this.uniforms.seed=this.seed,n.applyFilter(this,t,i,e)},i.sepia.set=function(n){this.uniforms.sepia=n},i.sepia.get=function(){return this.uniforms.sepia},i.noise.set=function(n){this.uniforms.noise=n},i.noise.get=function(){return this.uniforms.noise},i.noiseSize.set=function(n){this.uniforms.noiseSize=n},i.noiseSize.get=function(){return this.uniforms.noiseSize},i.scratch.set=function(n){this.uniforms.scratch=n},i.scratch.get=function(){return this.uniforms.scratch},i.scratchDensity.set=function(n){this.uniforms.scratchDensity=n},i.scratchDensity.get=function(){return this.uniforms.scratchDensity},i.scratchWidth.set=function(n){this.uniforms.scratchWidth=n},i.scratchWidth.get=function(){return this.uniforms.scratchWidth},i.vignetting.set=function(n){this.uniforms.vignetting=n},i.vignetting.get=function(){return this.uniforms.vignetting},i.vignettingAlpha.set=function(n){this.uniforms.vignettingAlpha=n},i.vignettingAlpha.get=function(){return this.uniforms.vignettingAlpha},i.vignettingBlur.set=function(n){this.uniforms.vignettingBlur=n},i.vignettingBlur.get=function(){return this.uniforms.vignettingBlur},Object.defineProperties(t.prototype,i),t}(PIXI.Filter);PIXI.filters.OldFilmFilter=OldFilmFilter;export{OldFilmFilter};\n//# sourceMappingURL=filter-old-film.es.js.map\n","/*!\n * @pixi/filter-outline - v2.4.1\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-outline is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 thickness;\\nuniform vec4 outlineColor;\\nuniform vec4 filterClamp;\\n\\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\\n\\nvoid main(void) {\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float maxAlpha = 0.;\\n    vec2 displaced;\\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n        maxAlpha = max(maxAlpha, curColor.a);\\n    }\\n    float resultAlpha = max(maxAlpha, ownColor.a);\\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\\n}\\n\",OutlineFilter=function(e){function t(o,r,n){void 0===o&&(o=1),void 0===r&&(r=0),void 0===n&&(n=.1);var i=Math.max(n*t.MAX_SAMPLES,t.MIN_SAMPLES),l=(2*Math.PI/i).toFixed(7);e.call(this,vertex,fragment.replace(/\\$\\{angleStep\\}/,l)),this.uniforms.thickness=new Float32Array([0,0]),this.thickness=o,this.uniforms.outlineColor=new Float32Array([0,0,0,1]),this.color=r,this.quality=n}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var o={color:{configurable:!0}};return t.prototype.apply=function(e,t,o,r){this.uniforms.thickness[0]=this.thickness/t.size.width,this.uniforms.thickness[1]=this.thickness/t.size.height,e.applyFilter(this,t,o,r)},o.color.get=function(){return PIXI.utils.rgb2hex(this.uniforms.outlineColor)},o.color.set=function(e){PIXI.utils.hex2rgb(e,this.uniforms.outlineColor)},Object.defineProperties(t.prototype,o),t}(PIXI.Filter);OutlineFilter.MIN_SAMPLES=1,OutlineFilter.MAX_SAMPLES=100,PIXI.filters.OutlineFilter=OutlineFilter;export{OutlineFilter};\n//# sourceMappingURL=filter-outline.es.js.map\n","/*!\n * @pixi/filter-pixelate - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-pixelate is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 size;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n\\treturn floor( coord / size ) * size;\\n}\\n\\nvoid main(void)\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = pixelate(coord, size);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord);\\n}\\n\",PixelateFilter=function(e){function r(r){void 0===r&&(r=10),e.call(this,vertex,fragment),this.size=r}e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r;var o={size:{configurable:!0}};return o.size.get=function(){return this.uniforms.size},o.size.set=function(e){\"number\"==typeof e&&(e=[e,e]),this.uniforms.size=e},Object.defineProperties(r.prototype,o),r}(PIXI.Filter);PIXI.filters.PixelateFilter=PixelateFilter;export{PixelateFilter};\n//# sourceMappingURL=filter-pixelate.es.js.map\n","/*!\n * @pixi/filter-radial-blur - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-radial-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float uRadian;\\nuniform vec2 uCenter;\\nuniform float uRadius;\\nuniform int uKernelSize;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\nconst int ITERATION = MAX_KERNEL_SIZE - 1;\\n\\n// float kernelSize = min(float(uKernelSize), float(MAX_KERNELSIZE));\\n\\n// In real use-case , uKernelSize < MAX_KERNELSIZE almost always.\\n// So use uKernelSize directly.\\nfloat kernelSize = float(uKernelSize);\\nfloat k = kernelSize - 1.0;\\n\\n\\nvec2 center = uCenter.xy / filterArea.xy;\\nfloat aspect = filterArea.y / filterArea.x;\\n\\nfloat gradient = uRadius / filterArea.x * 0.3;\\nfloat radius = uRadius / filterArea.x - gradient * 0.5;\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        return;\\n    }\\n\\n    vec2 coord = vTextureCoord;\\n\\n    vec2 dir = vec2(center - coord);\\n    float dist = length(vec2(dir.x, dir.y * aspect));\\n\\n    float radianStep;\\n\\n    if (radius >= 0.0 && dist > radius) {\\n        float delta = dist - radius;\\n        float gap = gradient;\\n        float scale = 1.0 - abs(delta / gap);\\n        if (scale <= 0.0) {\\n            return;\\n        }\\n        radianStep = uRadian * scale / k;\\n    } else {\\n        radianStep = uRadian / k;\\n    }\\n\\n    float s = sin(radianStep);\\n    float c = cos(radianStep);\\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\\n\\n    for(int i = 0; i < ITERATION; i++) {\\n        if (i == int(k)) {\\n            break;\\n        }\\n\\n        coord -= center;\\n        coord.y *= aspect;\\n        coord = rotationMatrix * coord;\\n        coord.y /= aspect;\\n        coord += center;\\n\\n        vec4 sample = texture2D(uSampler, coord);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        gl_FragColor += sample;\\n    }\\n    gl_FragColor /= kernelSize;\\n}\\n\",RadialBlurFilter=function(e){function n(n,r,t,i){void 0===n&&(n=0),void 0===r&&(r=[0,0]),void 0===t&&(t=5),void 0===i&&(i=-1),e.call(this,vertex,fragment),this._angle=0,this.angle=n,this.center=r,this.kernelSize=t,this.radius=i}e&&(n.__proto__=e),(n.prototype=Object.create(e&&e.prototype)).constructor=n;var r={angle:{configurable:!0},center:{configurable:!0},radius:{configurable:!0}};return n.prototype.apply=function(e,n,r,t){this.uniforms.uKernelSize=0!==this._angle?this.kernelSize:0,e.applyFilter(this,n,r,t)},r.angle.set=function(e){this._angle=e,this.uniforms.uRadian=e*Math.PI/180},r.angle.get=function(){return this._angle},r.center.get=function(){return this.uniforms.uCenter},r.center.set=function(e){this.uniforms.uCenter=e},r.radius.get=function(){return this.uniforms.uRadius},r.radius.set=function(e){(e<0||e===1/0)&&(e=-1),this.uniforms.uRadius=e},Object.defineProperties(n.prototype,r),n}(PIXI.Filter);PIXI.filters.RadialBlurFilter=RadialBlurFilter;export{RadialBlurFilter};\n//# sourceMappingURL=filter-radial-blur.es.js.map\n","/*!\n * @pixi/filter-reflection - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-reflection is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nuniform bool mirror;\\nuniform float boundary;\\nuniform vec2 amplitude;\\nuniform vec2 waveLength;\\nuniform vec2 alpha;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    if (coord.y < boundary) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\\n    float areaY = boundary * dimensions.y / filterArea.y;\\n    float v = areaY + areaY - vTextureCoord.y;\\n    float y = mirror ? v : vTextureCoord.y;\\n\\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\\n\\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\\n    x = clamp(x, filterClamp.x, filterClamp.z);\\n\\n    vec4 color = texture2D(uSampler, vec2(x, y));\\n\\n    gl_FragColor = color * _alpha;\\n}\\n\",ReflectionFilter=function(e){function r(r){e.call(this,vertex,fragment),Object.assign(this,{mirror:!0,boundary:.5,amplitude:[0,20],waveLength:[30,100],alpha:[1,1],time:0},r)}e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r;var n={mirror:{configurable:!0},boundary:{configurable:!0},amplitude:{configurable:!0},waveLength:{configurable:!0},alpha:{configurable:!0}};return r.prototype.apply=function(e,r,n,t){this.uniforms.dimensions[0]=r.sourceFrame.width,this.uniforms.dimensions[1]=r.sourceFrame.height,this.uniforms.time=this.time,e.applyFilter(this,r,n,t)},n.mirror.set=function(e){this.uniforms.mirror=e},n.mirror.get=function(){return this.uniforms.mirror},n.boundary.set=function(e){this.uniforms.boundary=e},n.boundary.get=function(){return this.uniforms.boundary},n.amplitude.set=function(e){this.uniforms.amplitude[0]=e[0],this.uniforms.amplitude[1]=e[1]},n.amplitude.get=function(){return this.uniforms.amplitude},n.waveLength.set=function(e){this.uniforms.waveLength[0]=e[0],this.uniforms.waveLength[1]=e[1]},n.waveLength.get=function(){return this.uniforms.waveLength},n.alpha.set=function(e){this.uniforms.alpha[0]=e[0],this.uniforms.alpha[1]=e[1]},n.alpha.get=function(){return this.uniforms.alpha},Object.defineProperties(r.prototype,n),r}(PIXI.Filter);PIXI.filters.ReflectionFilter=ReflectionFilter;export{ReflectionFilter};\n//# sourceMappingURL=filter-reflection.es.js.map\n","/*!\n * @pixi/filter-rgb-split - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-rgb-split is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nvoid main(void)\\n{\\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\\n}\\n\",RGBSplitFilter=function(e){function r(r,t,n){void 0===r&&(r=[-10,0]),void 0===t&&(t=[0,10]),void 0===n&&(n=[0,0]),e.call(this,vertex,fragment),this.red=r,this.green=t,this.blue=n}e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r;var t={red:{configurable:!0},green:{configurable:!0},blue:{configurable:!0}};return t.red.get=function(){return this.uniforms.red},t.red.set=function(e){this.uniforms.red=e},t.green.get=function(){return this.uniforms.green},t.green.set=function(e){this.uniforms.green=e},t.blue.get=function(){return this.uniforms.blue},t.blue.set=function(e){this.uniforms.blue=e},Object.defineProperties(r.prototype,t),r}(PIXI.Filter);PIXI.filters.RGBSplitFilter=RGBSplitFilter;export{RGBSplitFilter};\n//# sourceMappingURL=filter-rgb-split.es.js.map\n","/*!\n * @pixi/filter-shockwave - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-shockwave is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\n\\nuniform vec2 center;\\n\\nuniform float amplitude;\\nuniform float wavelength;\\n// uniform float power;\\nuniform float brightness;\\nuniform float speed;\\nuniform float radius;\\n\\nuniform float time;\\n\\nconst float PI = 3.14159;\\n\\nvoid main()\\n{\\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\\n    float maxRadius = radius / filterArea.x;\\n    float currentRadius = time * speed / filterArea.x;\\n\\n    float fade = 1.0;\\n\\n    if (maxRadius > 0.0) {\\n        if (currentRadius > maxRadius) {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\\n    }\\n\\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\\n    dir.y *= filterArea.y / filterArea.x;\\n    float dist = length(dir);\\n\\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    vec2 diffUV = normalize(dir);\\n\\n    float diff = (dist - currentRadius) / halfWavelength;\\n\\n    float p = 1.0 - pow(abs(diff), 2.0);\\n\\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\\n\\n    vec2 offset = diffUV * powDiff / filterArea.xy;\\n\\n    // Do clamp :\\n    vec2 coord = vTextureCoord + offset;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    gl_FragColor = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        gl_FragColor *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    // No clamp :\\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\\n\\n    gl_FragColor.rgb *= 1.0 + (brightness - 1.0) * p * fade;\\n}\\n\",ShockwaveFilter=function(e){function t(t,n,r){void 0===t&&(t=[0,0]),void 0===n&&(n={}),void 0===r&&(r=0),e.call(this,vertex,fragment),this.center=t,Array.isArray(n)&&(console.warn(\"Deprecated Warning: ShockwaveFilter params Array has been changed to options Object.\"),n={}),n=Object.assign({amplitude:30,wavelength:160,brightness:1,speed:500,radius:-1},n),this.amplitude=n.amplitude,this.wavelength=n.wavelength,this.brightness=n.brightness,this.speed=n.speed,this.radius=n.radius,this.time=r}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var n={center:{configurable:!0},amplitude:{configurable:!0},wavelength:{configurable:!0},brightness:{configurable:!0},speed:{configurable:!0},radius:{configurable:!0}};return t.prototype.apply=function(e,t,n,r){this.uniforms.time=this.time,e.applyFilter(this,t,n,r)},n.center.get=function(){return this.uniforms.center},n.center.set=function(e){this.uniforms.center=e},n.amplitude.get=function(){return this.uniforms.amplitude},n.amplitude.set=function(e){this.uniforms.amplitude=e},n.wavelength.get=function(){return this.uniforms.wavelength},n.wavelength.set=function(e){this.uniforms.wavelength=e},n.brightness.get=function(){return this.uniforms.brightness},n.brightness.set=function(e){this.uniforms.brightness=e},n.speed.get=function(){return this.uniforms.speed},n.speed.set=function(e){this.uniforms.speed=e},n.radius.get=function(){return this.uniforms.radius},n.radius.set=function(e){this.uniforms.radius=e},Object.defineProperties(t.prototype,n),t}(PIXI.Filter);PIXI.filters.ShockwaveFilter=ShockwaveFilter;export{ShockwaveFilter};\n//# sourceMappingURL=filter-shockwave.es.js.map\n","/*!\n * @pixi/filter-simple-lightmap - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-simple-lightmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D uLightmap;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\nuniform vec4 ambientColor;\\nvoid main() {\\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\\n    vec4 light = texture2D(uLightmap, lightCoord);\\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\\n    vec3 intensity = ambient + light.rgb;\\n    vec3 finalColor = diffuseColor.rgb * intensity;\\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\\n}\\n\",SimpleLightmapFilter=function(e){function t(t,r,o){void 0===r&&(r=0),void 0===o&&(o=1),e.call(this,vertex,fragment),this.uniforms.ambientColor=new Float32Array([0,0,0,o]),this.texture=t,this.color=r}e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t;var r={texture:{configurable:!0},color:{configurable:!0},alpha:{configurable:!0}};return t.prototype.apply=function(e,t,r,o){this.uniforms.dimensions[0]=t.sourceFrame.width,this.uniforms.dimensions[1]=t.sourceFrame.height,e.applyFilter(this,t,r,o)},r.texture.get=function(){return this.uniforms.uLightmap},r.texture.set=function(e){this.uniforms.uLightmap=e},r.color.set=function(e){var t=this.uniforms.ambientColor;\"number\"==typeof e?(PIXI.utils.hex2rgb(e,t),this._color=e):(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],this._color=PIXI.utils.rgb2hex(t))},r.color.get=function(){return this._color},r.alpha.get=function(){return this.uniforms.ambientColor[3]},r.alpha.set=function(e){this.uniforms.ambientColor[3]=e},Object.defineProperties(t.prototype,r),t}(PIXI.Filter);PIXI.filters.SimpleLightmapFilter=SimpleLightmapFilter;export{SimpleLightmapFilter};\n//# sourceMappingURL=filter-simple-lightmap.es.js.map\n","/*!\n * @pixi/filter-tilt-shift - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-tilt-shift is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float blur;\\nuniform float gradientBlur;\\nuniform vec2 start;\\nuniform vec2 end;\\nuniform vec2 delta;\\nuniform vec2 texSize;\\n\\nfloat random(vec3 scale, float seed)\\n{\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n    float total = 0.0;\\n\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\\n\\n    for (float t = -30.0; t <= 30.0; t++)\\n    {\\n        float percent = (t + offset - 0.5) / 30.0;\\n        float weight = 1.0 - abs(percent);\\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\\n        sample.rgb *= sample.a;\\n        color += sample * weight;\\n        total += weight;\\n    }\\n\\n    gl_FragColor = color / total;\\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\\n}\\n\",TiltShiftAxisFilter=function(t){function i(i,r,e,n){void 0===i&&(i=100),void 0===r&&(r=600),void 0===e&&(e=null),void 0===n&&(n=null),t.call(this,vertex,fragment),this.uniforms.blur=i,this.uniforms.gradientBlur=r,this.uniforms.start=e||new PIXI.Point(0,window.innerHeight/2),this.uniforms.end=n||new PIXI.Point(600,window.innerHeight/2),this.uniforms.delta=new PIXI.Point(30,30),this.uniforms.texSize=new PIXI.Point(window.innerWidth,window.innerHeight),this.updateDelta()}t&&(i.__proto__=t),(i.prototype=Object.create(t&&t.prototype)).constructor=i;var r={blur:{configurable:!0},gradientBlur:{configurable:!0},start:{configurable:!0},end:{configurable:!0}};return i.prototype.updateDelta=function(){this.uniforms.delta.x=0,this.uniforms.delta.y=0},r.blur.get=function(){return this.uniforms.blur},r.blur.set=function(t){this.uniforms.blur=t},r.gradientBlur.get=function(){return this.uniforms.gradientBlur},r.gradientBlur.set=function(t){this.uniforms.gradientBlur=t},r.start.get=function(){return this.uniforms.start},r.start.set=function(t){this.uniforms.start=t,this.updateDelta()},r.end.get=function(){return this.uniforms.end},r.end.set=function(t){this.uniforms.end=t,this.updateDelta()},Object.defineProperties(i.prototype,r),i}(PIXI.Filter);PIXI.filters.TiltShiftAxisFilter=TiltShiftAxisFilter;var TiltShiftXFilter=function(t){function i(){t.apply(this,arguments)}return t&&(i.__proto__=t),i.prototype=Object.create(t&&t.prototype),i.prototype.constructor=i,i.prototype.updateDelta=function(){var t=this.uniforms.end.x-this.uniforms.start.x,i=this.uniforms.end.y-this.uniforms.start.y,r=Math.sqrt(t*t+i*i);this.uniforms.delta.x=t/r,this.uniforms.delta.y=i/r},i}(TiltShiftAxisFilter);PIXI.filters.TiltShiftXFilter=TiltShiftXFilter;var TiltShiftYFilter=function(t){function i(){t.apply(this,arguments)}return t&&(i.__proto__=t),i.prototype=Object.create(t&&t.prototype),i.prototype.constructor=i,i.prototype.updateDelta=function(){var t=this.uniforms.end.x-this.uniforms.start.x,i=this.uniforms.end.y-this.uniforms.start.y,r=Math.sqrt(t*t+i*i);this.uniforms.delta.x=-i/r,this.uniforms.delta.y=t/r},i}(TiltShiftAxisFilter);PIXI.filters.TiltShiftYFilter=TiltShiftYFilter;var TiltShiftFilter=function(t){function i(i,r,e,n){void 0===i&&(i=100),void 0===r&&(r=600),void 0===e&&(e=null),void 0===n&&(n=null),t.call(this),this.tiltShiftXFilter=new TiltShiftXFilter(i,r,e,n),this.tiltShiftYFilter=new TiltShiftYFilter(i,r,e,n)}t&&(i.__proto__=t),(i.prototype=Object.create(t&&t.prototype)).constructor=i;var r={blur:{configurable:!0},gradientBlur:{configurable:!0},start:{configurable:!0},end:{configurable:!0}};return i.prototype.apply=function(t,i,r){var e=t.getRenderTarget(!0);this.tiltShiftXFilter.apply(t,i,e),this.tiltShiftYFilter.apply(t,e,r),t.returnRenderTarget(e)},r.blur.get=function(){return this.tiltShiftXFilter.blur},r.blur.set=function(t){this.tiltShiftXFilter.blur=this.tiltShiftYFilter.blur=t},r.gradientBlur.get=function(){return this.tiltShiftXFilter.gradientBlur},r.gradientBlur.set=function(t){this.tiltShiftXFilter.gradientBlur=this.tiltShiftYFilter.gradientBlur=t},r.start.get=function(){return this.tiltShiftXFilter.start},r.start.set=function(t){this.tiltShiftXFilter.start=this.tiltShiftYFilter.start=t},r.end.get=function(){return this.tiltShiftXFilter.end},r.end.set=function(t){this.tiltShiftXFilter.end=this.tiltShiftYFilter.end=t},Object.defineProperties(i.prototype,r),i}(PIXI.Filter);PIXI.filters.TiltShiftFilter=TiltShiftFilter;export{TiltShiftFilter,TiltShiftXFilter,TiltShiftYFilter,TiltShiftAxisFilter};\n//# sourceMappingURL=filter-tilt-shift.es.js.map\n","/*!\n * @pixi/filter-twist - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-twist is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 twist(vec2 coord)\\n{\\n    coord -= offset;\\n\\n    float dist = length(coord);\\n\\n    if (dist < radius)\\n    {\\n        float ratioDist = (radius - dist) / radius;\\n        float angleMod = ratioDist * ratioDist * angle;\\n        float s = sin(angleMod);\\n        float c = cos(angleMod);\\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\\n    }\\n\\n    coord += offset;\\n\\n    return coord;\\n}\\n\\nvoid main(void)\\n{\\n\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = twist(coord);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord );\\n\\n}\\n\",TwistFilter=function(o){function n(n,r,t){void 0===n&&(n=200),void 0===r&&(r=4),void 0===t&&(t=20),o.call(this,vertex,fragment),this.radius=n,this.angle=r,this.padding=t}o&&(n.__proto__=o),(n.prototype=Object.create(o&&o.prototype)).constructor=n;var r={offset:{configurable:!0},radius:{configurable:!0},angle:{configurable:!0}};return r.offset.get=function(){return this.uniforms.offset},r.offset.set=function(o){this.uniforms.offset=o},r.radius.get=function(){return this.uniforms.radius},r.radius.set=function(o){this.uniforms.radius=o},r.angle.get=function(){return this.uniforms.angle},r.angle.set=function(o){this.uniforms.angle=o},Object.defineProperties(n.prototype,r),n}(PIXI.Filter);PIXI.filters.TwistFilter=TwistFilter;export{TwistFilter};\n//# sourceMappingURL=filter-twist.es.js.map\n","/*!\n * @pixi/filter-zoom-blur - v2.4.0\n * Compiled Tue, 09 Jan 2018 20:23:42 UTC\n *\n * @pixi/filter-zoom-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",fragment=\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uCenter;\\nuniform float uStrength;\\nuniform float uInnerRadius;\\nuniform float uRadius;\\n\\nconst float MAX_KERNEL_SIZE = 32.0;\\n\\nfloat random(vec3 scale, float seed) {\\n    // use the fragment position for a different seed per-pixel\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main() {\\n\\n    float minGradient = uInnerRadius * 0.3;\\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\\n\\n    float gradient = uRadius * 0.3;\\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\\n\\n    float countLimit = MAX_KERNEL_SIZE;\\n\\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\\n\\n    float strength = uStrength;\\n\\n    float delta = 0.0;\\n    float gap;\\n    if (dist < innerRadius) {\\n        delta = innerRadius - dist;\\n        gap = minGradient;\\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\\n        delta = dist - radius;\\n        gap = gradient;\\n    }\\n\\n    if (delta > 0.0) {\\n        float normalCount = gap / filterArea.x;\\n        delta = (normalCount - delta) / normalCount;\\n        countLimit *= delta;\\n        strength *= delta;\\n        if (countLimit < 1.0)\\n        {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n    }\\n\\n    // randomize the lookup values to hide the fixed number of samples\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n\\n    float total = 0.0;\\n    vec4 color = vec4(0.0);\\n\\n    dir *= strength;\\n\\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\\n        float weight = 4.0 * (percent - percent * percent);\\n        vec2 p = vTextureCoord + dir * percent;\\n        vec4 sample = texture2D(uSampler, p);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample * weight;\\n        total += weight;\\n\\n        if (t > countLimit){\\n            break;\\n        }\\n    }\\n\\n    gl_FragColor = color / total;\\n\\n    // switch back from pre-multiplied alpha\\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\\n\\n}\\n\",ZoomBlurFilter=function(n){function t(t,e,r,i){void 0===t&&(t=.1),void 0===e&&(e=[0,0]),void 0===r&&(r=0),void 0===i&&(i=-1),n.call(this,vertex,fragment),this.center=e,this.strength=t,this.innerRadius=r,this.radius=i}n&&(t.__proto__=n),(t.prototype=Object.create(n&&n.prototype)).constructor=t;var e={center:{configurable:!0},strength:{configurable:!0},innerRadius:{configurable:!0},radius:{configurable:!0}};return e.center.get=function(){return this.uniforms.uCenter},e.center.set=function(n){this.uniforms.uCenter=n},e.strength.get=function(){return this.uniforms.uStrength},e.strength.set=function(n){this.uniforms.uStrength=n},e.innerRadius.get=function(){return this.uniforms.uInnerRadius},e.innerRadius.set=function(n){this.uniforms.uInnerRadius=n},e.radius.get=function(){return this.uniforms.uRadius},e.radius.set=function(n){(n<0||n===1/0)&&(n=-1),this.uniforms.uRadius=n},Object.defineProperties(t.prototype,e),t}(PIXI.Filter);PIXI.filters.ZoomBlurFilter=ZoomBlurFilter;export{ZoomBlurFilter};\n//# sourceMappingURL=filter-zoom-blur.es.js.map\n"],"names":["vertex","fragment","AdjustmentFilter","t","r","call","this","Object","assign","gamma","saturation","contrast","brightness","red","green","blue","alpha","__proto__","prototype","create","constructor","apply","n","e","uniforms","Math","max","applyFilter","PIXI","Filter","filters","ExtractBrightnessFilter","threshold","configurable","get","set","defineProperties","fragment$1","AdvancedBloomFilter","bloomScale","kernels","blur","quality","pixelSize","resolution","settings","RESOLUTION","o","i","l","_extractFilter","s","KawaseBlurFilter","_blurFilter","getRenderTarget","bloomTexture","returnRenderTarget","_resolution","AsciiFilter","size","ref","BlurXFilter","BlurYFilter","AlphaFilter","BloomFilter","u","Point","x","y","Array","isArray","blurXFilter","blurYFilter","blendMode","BLEND_MODES","SCREEN","defaultFilter","blurX","blurY","BulgePinchFilter","center","radius","strength","dimensions","sourceFrame","width","height","ColorReplaceFilter","originalColor","newColor","epsilon","utils","hex2rgb","_originalColor","rgb2hex","_newColor","ConvolutionFilter","matrix","Float32Array","texelSize","CrossHatchFilter","CRTFilter","time","seed","curvature","lineWidth","lineContrast","verticalLine","noise","noiseSize","vignetting","vignettingAlpha","vignettingBlur","DotFilter","scale","angle","DropShadowFilter","a","tintFilter","blurFilter","BlurFilter","targetTransform","Matrix","rotation","padding","distance","color","transform","_updatePadding","_updateTargetTransform","tx","cos","ty","sin","_distance","DEG_TO_RAD","EmbossFilter","GlitchFilter","slices","offset","direction","fillMode","average","minSize","sampleSize","_canvas","document","createElement","texture","Texture","fromCanvas","SCALE_MODES","NEAREST","_slices","sizes","offsets","aspect","_randomizeSizes","_sizes","min","f","random","c","sqrt","d","shuffle","_randomizeOffsets","_offsets","refresh","redraw","getContext","clearRect","floor","fillStyle","fillRect","_updateID","baseTexture","emit","displacementMap","length","slicesWidth","slicesOffset","_direction","sinDir","cosDir","destroy","TRANSPARENT","ORIGINAL","LOOP","CLAMP","MIRROR","GlowFilter","replace","toFixed","glowColor","outerStrength","innerStrength","perlin","GodrayFilter","console","warn","arguments","gain","lacunarity","parallel","_angleLight","light","_angle","_pixelSize","_kernels","_blur","_quality","uOffset","h","_generateKernels","push","round","MotionBlurFilter","_velocity","velocity","kernelSize","uKernelSize","uVelocity","MultiColorReplaceFilter","_maxColors","_replacements","originalColors","targetColors","replacements","maxColors","OldFilmFilter","sepia","scratch","scratchDensity","scratchWidth","OutlineFilter","MAX_SAMPLES","MIN_SAMPLES","PI","thickness","outlineColor","PixelateFilter","RadialBlurFilter","uRadian","uCenter","uRadius","ReflectionFilter","mirror","boundary","amplitude","waveLength","RGBSplitFilter","ShockwaveFilter","wavelength","speed","SimpleLightmapFilter","ambientColor","uLightmap","_color","TiltShiftAxisFilter","gradientBlur","start","window","innerHeight","end","delta","texSize","innerWidth","updateDelta","TiltShiftXFilter","TiltShiftYFilter","TiltShiftFilter","tiltShiftXFilter","tiltShiftYFilter","TwistFilter","ZoomBlurFilter","innerRadius","uStrength","uInnerRadius"],"mappings":"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"}